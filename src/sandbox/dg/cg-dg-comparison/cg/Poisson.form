element = FiniteElement("Lagrange", "tetrahedron", 1)

v = TestFunction(element)
u = TrialFunction(element)
f = Function(element)

gamma = 4.0

n = FacetNormal("tetrahedron")
h = MeshSize("tetrahedron")

def Jump(v):
  return [v*n[i] for i in range(element.cell_shape())]

a = dot(grad(v), grad(u))*dx \
   - dot(grad(v), Jump(u))*ds \
   - dot(Jump(v), grad(u))*ds \
   + gamma*h*v*u*ds

#a = dot(grad(v), grad(u))*dx + gamma*v*u*ds

L = v*f*dx
