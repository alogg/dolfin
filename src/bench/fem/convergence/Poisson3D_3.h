// Automatically generated by FFC, the FEniCS Form Compiler, version 0.3.3-dev.
// For further information, go to http://www/fenics.org/ffc/.
// Licensed under the GNU GPL Version 2.

#ifndef __POISSON3D_3_H
#define __POISSON3D_3_H

#include <dolfin/Mesh.h>
#include <dolfin/Cell.h>
#include <dolfin/Point.h>
#include <dolfin/AffineMap.h>
#include <dolfin/FiniteElement.h>
#include <dolfin/FiniteElementSpec.h>
#include <dolfin/BilinearForm.h>
#include <dolfin/LinearForm.h>
#include <dolfin/Functional.h>
#include <dolfin/FEM.h>

namespace dolfin { namespace Poisson3D_3 {

/// This class contains the form to be evaluated, including
/// contributions from the interior and boundary of the domain.

class BilinearForm : public dolfin::BilinearForm
{
public:

  class TestElement;

  class TrialElement;

  BilinearForm();
  

  bool interior_contribution() const;

  void eval(real block[], const AffineMap& map) const;

  bool boundary_contribution() const;

  void eval(real block[], const AffineMap& map, unsigned int facet) const;

};

class BilinearForm::TestElement : public dolfin::FiniteElement
{
public:

  TestElement() : dolfin::FiniteElement(), tensordims(0), subelements(0)
  {
    // Element is scalar, don't need to initialize tensordims

    // Element is simple, don't need to initialize subelements
  }

  ~TestElement()
  {
    if ( tensordims ) delete [] tensordims;
    if ( subelements )
    {
      for (unsigned int i = 0; i < elementdim(); i++)
        delete subelements[i];
      delete [] subelements;
    }
  }

  inline unsigned int spacedim() const
  {
    return 20;
  }

  inline unsigned int shapedim() const
  {
    return 3;
  }

  inline unsigned int tensordim(unsigned int i) const
  {
    dolfin_error("Element is scalar.");
    return 0;
  }

  inline unsigned int elementdim() const
  {
    return 1;
  }

  inline unsigned int rank() const
  {
    return 0;
  }

  void nodemap(int nodes[], const Cell& cell, const Mesh& mesh) const
  {
    static unsigned int edge_reordering_0[2][2] = {{0, 1}, {1, 0}};
    nodes[0] = cell.entities(0)[0];
    nodes[1] = cell.entities(0)[1];
    nodes[2] = cell.entities(0)[2];
    nodes[3] = cell.entities(0)[3];
    int alignment = cell.edgeAlignment(0);
    int offset = mesh.topology().size(0);
    nodes[4] = offset + 2*cell.entities(1)[0] + edge_reordering_0[alignment][0];
    nodes[5] = offset + 2*cell.entities(1)[0] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(1);
    nodes[6] = offset + 2*cell.entities(1)[1] + edge_reordering_0[alignment][0];
    nodes[7] = offset + 2*cell.entities(1)[1] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(2);
    nodes[8] = offset + 2*cell.entities(1)[2] + edge_reordering_0[alignment][0];
    nodes[9] = offset + 2*cell.entities(1)[2] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(3);
    nodes[10] = offset + 2*cell.entities(1)[3] + edge_reordering_0[alignment][0];
    nodes[11] = offset + 2*cell.entities(1)[3] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(4);
    nodes[12] = offset + 2*cell.entities(1)[4] + edge_reordering_0[alignment][0];
    nodes[13] = offset + 2*cell.entities(1)[4] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(5);
    nodes[14] = offset + 2*cell.entities(1)[5] + edge_reordering_0[alignment][0];
    nodes[15] = offset + 2*cell.entities(1)[5] + edge_reordering_0[alignment][1];
    offset = offset + 2*mesh.topology().size(1);
    nodes[16] = offset + cell.entities(2)[0];
    nodes[17] = offset + cell.entities(2)[1];
    nodes[18] = offset + cell.entities(2)[2];
    nodes[19] = offset + cell.entities(2)[3];
  }

  void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
  {
    points[0] = map(0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
    points[1] = map(1.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
    points[2] = map(0.000000000000000e+00, 1.000000000000000e+00, 0.000000000000000e+00);
    points[3] = map(0.000000000000000e+00, 0.000000000000000e+00, 1.000000000000000e+00);
    points[4] = map(6.666666666666667e-01, 3.333333333333333e-01, 0.000000000000000e+00);
    points[5] = map(3.333333333333334e-01, 6.666666666666666e-01, 0.000000000000000e+00);
    points[6] = map(0.000000000000000e+00, 6.666666666666667e-01, 0.000000000000000e+00);
    points[7] = map(0.000000000000000e+00, 3.333333333333334e-01, 0.000000000000000e+00);
    points[8] = map(3.333333333333333e-01, 0.000000000000000e+00, 0.000000000000000e+00);
    points[9] = map(6.666666666666666e-01, 0.000000000000000e+00, 0.000000000000000e+00);
    points[10] = map(0.000000000000000e+00, 0.000000000000000e+00, 3.333333333333333e-01);
    points[11] = map(0.000000000000000e+00, 0.000000000000000e+00, 6.666666666666666e-01);
    points[12] = map(6.666666666666667e-01, 0.000000000000000e+00, 3.333333333333333e-01);
    points[13] = map(3.333333333333334e-01, 0.000000000000000e+00, 6.666666666666666e-01);
    points[14] = map(0.000000000000000e+00, 6.666666666666667e-01, 3.333333333333333e-01);
    points[15] = map(0.000000000000000e+00, 3.333333333333334e-01, 6.666666666666666e-01);
    points[16] = map(3.333333333333334e-01, 3.333333333333333e-01, 3.333333333333333e-01);
    points[17] = map(0.000000000000000e+00, 3.333333333333334e-01, 3.333333333333333e-01);
    points[18] = map(3.333333333333333e-01, 0.000000000000000e+00, 3.333333333333334e-01);
    points[19] = map(3.333333333333333e-01, 3.333333333333333e-01, 0.000000000000000e+00);
    components[0] = 0;
    components[1] = 0;
    components[2] = 0;
    components[3] = 0;
    components[4] = 0;
    components[5] = 0;
    components[6] = 0;
    components[7] = 0;
    components[8] = 0;
    components[9] = 0;
    components[10] = 0;
    components[11] = 0;
    components[12] = 0;
    components[13] = 0;
    components[14] = 0;
    components[15] = 0;
    components[16] = 0;
    components[17] = 0;
    components[18] = 0;
    components[19] = 0;
  }

  void vertexeval(uint vertex_nodes[], unsigned int vertex, const Mesh& mesh) const
  {
    // FIXME: Temporary fix for Lagrange elements
    vertex_nodes[0] = vertex;
  }

  const FiniteElement& operator[] (unsigned int i) const
  {
    return *this;
  }

  FiniteElement& operator[] (unsigned int i)
  {
    return *this;
  }

  FiniteElementSpec spec() const
  {
    FiniteElementSpec s("Lagrange", "tetrahedron", 3);
    return s;
  }
  
private:

  unsigned int* tensordims;
  FiniteElement** subelements;

};

class BilinearForm::TrialElement : public dolfin::FiniteElement
{
public:

  TrialElement() : dolfin::FiniteElement(), tensordims(0), subelements(0)
  {
    // Element is scalar, don't need to initialize tensordims

    // Element is simple, don't need to initialize subelements
  }

  ~TrialElement()
  {
    if ( tensordims ) delete [] tensordims;
    if ( subelements )
    {
      for (unsigned int i = 0; i < elementdim(); i++)
        delete subelements[i];
      delete [] subelements;
    }
  }

  inline unsigned int spacedim() const
  {
    return 20;
  }

  inline unsigned int shapedim() const
  {
    return 3;
  }

  inline unsigned int tensordim(unsigned int i) const
  {
    dolfin_error("Element is scalar.");
    return 0;
  }

  inline unsigned int elementdim() const
  {
    return 1;
  }

  inline unsigned int rank() const
  {
    return 0;
  }

  void nodemap(int nodes[], const Cell& cell, const Mesh& mesh) const
  {
    static unsigned int edge_reordering_0[2][2] = {{0, 1}, {1, 0}};
    nodes[0] = cell.entities(0)[0];
    nodes[1] = cell.entities(0)[1];
    nodes[2] = cell.entities(0)[2];
    nodes[3] = cell.entities(0)[3];
    int alignment = cell.edgeAlignment(0);
    int offset = mesh.topology().size(0);
    nodes[4] = offset + 2*cell.entities(1)[0] + edge_reordering_0[alignment][0];
    nodes[5] = offset + 2*cell.entities(1)[0] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(1);
    nodes[6] = offset + 2*cell.entities(1)[1] + edge_reordering_0[alignment][0];
    nodes[7] = offset + 2*cell.entities(1)[1] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(2);
    nodes[8] = offset + 2*cell.entities(1)[2] + edge_reordering_0[alignment][0];
    nodes[9] = offset + 2*cell.entities(1)[2] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(3);
    nodes[10] = offset + 2*cell.entities(1)[3] + edge_reordering_0[alignment][0];
    nodes[11] = offset + 2*cell.entities(1)[3] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(4);
    nodes[12] = offset + 2*cell.entities(1)[4] + edge_reordering_0[alignment][0];
    nodes[13] = offset + 2*cell.entities(1)[4] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(5);
    nodes[14] = offset + 2*cell.entities(1)[5] + edge_reordering_0[alignment][0];
    nodes[15] = offset + 2*cell.entities(1)[5] + edge_reordering_0[alignment][1];
    offset = offset + 2*mesh.topology().size(1);
    nodes[16] = offset + cell.entities(2)[0];
    nodes[17] = offset + cell.entities(2)[1];
    nodes[18] = offset + cell.entities(2)[2];
    nodes[19] = offset + cell.entities(2)[3];
  }

  void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
  {
    points[0] = map(0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
    points[1] = map(1.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
    points[2] = map(0.000000000000000e+00, 1.000000000000000e+00, 0.000000000000000e+00);
    points[3] = map(0.000000000000000e+00, 0.000000000000000e+00, 1.000000000000000e+00);
    points[4] = map(6.666666666666667e-01, 3.333333333333333e-01, 0.000000000000000e+00);
    points[5] = map(3.333333333333334e-01, 6.666666666666666e-01, 0.000000000000000e+00);
    points[6] = map(0.000000000000000e+00, 6.666666666666667e-01, 0.000000000000000e+00);
    points[7] = map(0.000000000000000e+00, 3.333333333333334e-01, 0.000000000000000e+00);
    points[8] = map(3.333333333333333e-01, 0.000000000000000e+00, 0.000000000000000e+00);
    points[9] = map(6.666666666666666e-01, 0.000000000000000e+00, 0.000000000000000e+00);
    points[10] = map(0.000000000000000e+00, 0.000000000000000e+00, 3.333333333333333e-01);
    points[11] = map(0.000000000000000e+00, 0.000000000000000e+00, 6.666666666666666e-01);
    points[12] = map(6.666666666666667e-01, 0.000000000000000e+00, 3.333333333333333e-01);
    points[13] = map(3.333333333333334e-01, 0.000000000000000e+00, 6.666666666666666e-01);
    points[14] = map(0.000000000000000e+00, 6.666666666666667e-01, 3.333333333333333e-01);
    points[15] = map(0.000000000000000e+00, 3.333333333333334e-01, 6.666666666666666e-01);
    points[16] = map(3.333333333333334e-01, 3.333333333333333e-01, 3.333333333333333e-01);
    points[17] = map(0.000000000000000e+00, 3.333333333333334e-01, 3.333333333333333e-01);
    points[18] = map(3.333333333333333e-01, 0.000000000000000e+00, 3.333333333333334e-01);
    points[19] = map(3.333333333333333e-01, 3.333333333333333e-01, 0.000000000000000e+00);
    components[0] = 0;
    components[1] = 0;
    components[2] = 0;
    components[3] = 0;
    components[4] = 0;
    components[5] = 0;
    components[6] = 0;
    components[7] = 0;
    components[8] = 0;
    components[9] = 0;
    components[10] = 0;
    components[11] = 0;
    components[12] = 0;
    components[13] = 0;
    components[14] = 0;
    components[15] = 0;
    components[16] = 0;
    components[17] = 0;
    components[18] = 0;
    components[19] = 0;
  }

  void vertexeval(uint vertex_nodes[], unsigned int vertex, const Mesh& mesh) const
  {
    // FIXME: Temporary fix for Lagrange elements
    vertex_nodes[0] = vertex;
  }

  const FiniteElement& operator[] (unsigned int i) const
  {
    return *this;
  }

  FiniteElement& operator[] (unsigned int i)
  {
    return *this;
  }

  FiniteElementSpec spec() const
  {
    FiniteElementSpec s("Lagrange", "tetrahedron", 3);
    return s;
  }
  
private:

  unsigned int* tensordims;
  FiniteElement** subelements;

};

BilinearForm::BilinearForm() : dolfin::BilinearForm(0)
{
  // Create finite element for test space
  _test = new TestElement();

  // Create finite element for trial space
  _trial = new TrialElement();
}

// Contribution from the interior
bool BilinearForm::interior_contribution() const { return true; }

void BilinearForm::eval(real block[], const AffineMap& map) const
{
  // Compute geometry tensors
  const real G0_0_0 = map.det*(map.g00*map.g00 + map.g01*map.g01 + map.g02*map.g02);
  const real G0_0_1 = map.det*(map.g00*map.g10 + map.g01*map.g11 + map.g02*map.g12);
  const real G0_0_2 = map.det*(map.g00*map.g20 + map.g01*map.g21 + map.g02*map.g22);
  const real G0_1_0 = map.det*(map.g10*map.g00 + map.g11*map.g01 + map.g12*map.g02);
  const real G0_1_1 = map.det*(map.g10*map.g10 + map.g11*map.g11 + map.g12*map.g12);
  const real G0_1_2 = map.det*(map.g10*map.g20 + map.g11*map.g21 + map.g12*map.g22);
  const real G0_2_0 = map.det*(map.g20*map.g00 + map.g21*map.g01 + map.g22*map.g02);
  const real G0_2_1 = map.det*(map.g20*map.g10 + map.g21*map.g11 + map.g22*map.g12);
  const real G0_2_2 = map.det*(map.g20*map.g20 + map.g21*map.g21 + map.g22*map.g22);

  // Compute element tensor
  block[0] = 5.952380952380942e-02*G0_0_0 + 5.952380952380941e-02*G0_0_1 + 5.952380952380944e-02*G0_0_2 + 5.952380952380942e-02*G0_1_0 + 5.952380952380940e-02*G0_1_1 + 5.952380952380942e-02*G0_1_2 + 5.952380952380944e-02*G0_2_0 + 5.952380952380942e-02*G0_2_1 + 5.952380952380942e-02*G0_2_2;
  block[1] = -1.130952380952382e-02*G0_0_0 - 1.130952380952381e-02*G0_1_0 - 1.130952380952381e-02*G0_2_0;
  block[2] = -1.130952380952378e-02*G0_0_1 - 1.130952380952378e-02*G0_1_1 - 1.130952380952377e-02*G0_2_1;
  block[3] = -1.130952380952380e-02*G0_0_2 - 1.130952380952379e-02*G0_1_2 - 1.130952380952380e-02*G0_2_2;
  block[4] = -1.339285714285717e-02*G0_0_0 - 1.339285714285717e-02*G0_0_1 - 1.339285714285718e-02*G0_1_0 - 1.339285714285717e-02*G0_1_1 - 1.339285714285716e-02*G0_2_0 - 1.339285714285714e-02*G0_2_1;
  block[5] = -1.339285714285713e-02*G0_0_0 - 1.339285714285716e-02*G0_0_1 - 1.339285714285713e-02*G0_1_0 - 1.339285714285717e-02*G0_1_1 - 1.339285714285714e-02*G0_2_0 - 1.339285714285718e-02*G0_2_1;
  block[6] = 1.339285714285712e-02*G0_0_0 + 4.821428571428563e-02*G0_0_1 + 1.339285714285712e-02*G0_0_2 + 1.339285714285712e-02*G0_1_0 + 4.821428571428558e-02*G0_1_1 + 1.339285714285712e-02*G0_1_2 + 1.339285714285713e-02*G0_2_0 + 4.821428571428556e-02*G0_2_1 + 1.339285714285712e-02*G0_2_2;
  block[7] = -3.482142857142853e-02*G0_0_0 - 9.642857142857124e-02*G0_0_1 - 3.482142857142854e-02*G0_0_2 - 3.482142857142853e-02*G0_1_0 - 9.642857142857121e-02*G0_1_1 - 3.482142857142854e-02*G0_1_2 - 3.482142857142850e-02*G0_2_0 - 9.642857142857120e-02*G0_2_1 - 3.482142857142852e-02*G0_2_2;
  block[8] = -9.642857142857136e-02*G0_0_0 - 3.482142857142860e-02*G0_0_1 - 3.482142857142860e-02*G0_0_2 - 9.642857142857134e-02*G0_1_0 - 3.482142857142861e-02*G0_1_1 - 3.482142857142862e-02*G0_1_2 - 9.642857142857135e-02*G0_2_0 - 3.482142857142861e-02*G0_2_1 - 3.482142857142861e-02*G0_2_2;
  block[9] = 4.821428571428572e-02*G0_0_0 + 1.339285714285721e-02*G0_0_1 + 1.339285714285719e-02*G0_0_2 + 4.821428571428571e-02*G0_1_0 + 1.339285714285721e-02*G0_1_1 + 1.339285714285719e-02*G0_1_2 + 4.821428571428570e-02*G0_2_0 + 1.339285714285719e-02*G0_2_1 + 1.339285714285717e-02*G0_2_2;
  block[10] = -3.482142857142853e-02*G0_0_0 - 3.482142857142854e-02*G0_0_1 - 9.642857142857124e-02*G0_0_2 - 3.482142857142854e-02*G0_1_0 - 3.482142857142854e-02*G0_1_1 - 9.642857142857122e-02*G0_1_2 - 3.482142857142856e-02*G0_2_0 - 3.482142857142855e-02*G0_2_1 - 9.642857142857125e-02*G0_2_2;
  block[11] = 1.339285714285713e-02*G0_0_0 + 1.339285714285714e-02*G0_0_1 + 4.821428571428563e-02*G0_0_2 + 1.339285714285715e-02*G0_1_0 + 1.339285714285715e-02*G0_1_1 + 4.821428571428561e-02*G0_1_2 + 1.339285714285713e-02*G0_2_0 + 1.339285714285713e-02*G0_2_1 + 4.821428571428565e-02*G0_2_2;
  block[12] = -1.339285714285716e-02*G0_0_0 - 1.339285714285719e-02*G0_0_2 - 1.339285714285716e-02*G0_1_0 - 1.339285714285720e-02*G0_1_2 - 1.339285714285716e-02*G0_2_0 - 1.339285714285717e-02*G0_2_2;
  block[13] = -1.339285714285714e-02*G0_0_0 - 1.339285714285710e-02*G0_0_2 - 1.339285714285715e-02*G0_1_0 - 1.339285714285712e-02*G0_1_2 - 1.339285714285714e-02*G0_2_0 - 1.339285714285712e-02*G0_2_2;
  block[14] = -1.339285714285712e-02*G0_0_1 - 1.339285714285712e-02*G0_0_2 - 1.339285714285712e-02*G0_1_1 - 1.339285714285712e-02*G0_1_2 - 1.339285714285714e-02*G0_2_1 - 1.339285714285712e-02*G0_2_2;
  block[15] = -1.339285714285714e-02*G0_0_1 - 1.339285714285712e-02*G0_0_2 - 1.339285714285715e-02*G0_1_1 - 1.339285714285713e-02*G0_1_2 - 1.339285714285714e-02*G0_2_1 - 1.339285714285712e-02*G0_2_2;
  block[16] = -3.214285714285713e-02*G0_0_0 - 3.214285714285717e-02*G0_0_1 - 3.214285714285722e-02*G0_0_2 - 3.214285714285715e-02*G0_1_0 - 3.214285714285721e-02*G0_1_1 - 3.214285714285726e-02*G0_1_2 - 3.214285714285714e-02*G0_2_0 - 3.214285714285717e-02*G0_2_1 - 3.214285714285724e-02*G0_2_2;
  block[17] = 3.214285714285712e-02*G0_0_0 + 4.821428571428566e-02*G0_0_1 + 4.821428571428561e-02*G0_0_2 + 3.214285714285713e-02*G0_1_0 + 4.821428571428565e-02*G0_1_1 + 4.821428571428563e-02*G0_1_2 + 3.214285714285713e-02*G0_2_0 + 4.821428571428570e-02*G0_2_1 + 4.821428571428559e-02*G0_2_2;
  block[18] = 4.821428571428570e-02*G0_0_0 + 3.214285714285718e-02*G0_0_1 + 4.821428571428574e-02*G0_0_2 + 4.821428571428572e-02*G0_1_0 + 3.214285714285722e-02*G0_1_1 + 4.821428571428577e-02*G0_1_2 + 4.821428571428574e-02*G0_2_0 + 3.214285714285719e-02*G0_2_1 + 4.821428571428575e-02*G0_2_2;
  block[19] = 4.821428571428570e-02*G0_0_0 + 4.821428571428572e-02*G0_0_1 + 3.214285714285721e-02*G0_0_2 + 4.821428571428571e-02*G0_1_0 + 4.821428571428572e-02*G0_1_1 + 3.214285714285724e-02*G0_1_2 + 4.821428571428565e-02*G0_2_0 + 4.821428571428572e-02*G0_2_1 + 3.214285714285722e-02*G0_2_2;
  block[20] = -1.130952380952381e-02*G0_0_0 - 1.130952380952381e-02*G0_0_1 - 1.130952380952381e-02*G0_0_2;
  block[21] = 5.952380952380945e-02*G0_0_0;
  block[22] = 1.130952380952380e-02*G0_0_1;
  block[23] = 1.130952380952380e-02*G0_0_2;
  block[24] = -3.482142857142854e-02*G0_0_0 + 6.160714285714278e-02*G0_0_1;
  block[25] = 1.339285714285713e-02*G0_0_0 - 3.482142857142850e-02*G0_0_1;
  block[26] = -1.339285714285714e-02*G0_0_0 - 1.339285714285712e-02*G0_0_2;
  block[27] = -1.339285714285712e-02*G0_0_0 - 1.339285714285712e-02*G0_0_2;
  block[28] = 4.821428571428572e-02*G0_0_0 + 3.482142857142857e-02*G0_0_1 + 3.482142857142856e-02*G0_0_2;
  block[29] = -9.642857142857135e-02*G0_0_0 - 6.160714285714280e-02*G0_0_1 - 6.160714285714279e-02*G0_0_2;
  block[30] = -1.339285714285710e-02*G0_0_0 - 1.339285714285709e-02*G0_0_1;
  block[31] = -1.339285714285713e-02*G0_0_0 - 1.339285714285712e-02*G0_0_1;
  block[32] = -3.482142857142853e-02*G0_0_0 + 6.160714285714278e-02*G0_0_2;
  block[33] = 1.339285714285711e-02*G0_0_0 - 3.482142857142851e-02*G0_0_2;
  block[34] = 1.339285714285713e-02*G0_0_1 + 1.339285714285713e-02*G0_0_2;
  block[35] = 1.339285714285712e-02*G0_0_1 + 1.339285714285712e-02*G0_0_2;
  block[36] = 3.214285714285707e-02*G0_0_0 - 1.607142857142858e-02*G0_0_1 - 1.607142857142858e-02*G0_0_2;
  block[37] = -3.214285714285706e-02*G0_0_0;
  block[38] = 4.821428571428563e-02*G0_0_0 + 1.607142857142858e-02*G0_0_1;
  block[39] = 4.821428571428565e-02*G0_0_0 + 1.607142857142856e-02*G0_0_2;
  block[40] = -1.130952380952378e-02*G0_1_0 - 1.130952380952378e-02*G0_1_1 - 1.130952380952377e-02*G0_1_2;
  block[41] = 1.130952380952380e-02*G0_1_0;
  block[42] = 5.952380952380945e-02*G0_1_1;
  block[43] = 1.130952380952381e-02*G0_1_2;
  block[44] = -3.482142857142860e-02*G0_1_0 + 1.339285714285711e-02*G0_1_1;
  block[45] = 6.160714285714283e-02*G0_1_0 - 3.482142857142849e-02*G0_1_1;
  block[46] = -6.160714285714283e-02*G0_1_0 - 9.642857142857127e-02*G0_1_1 - 6.160714285714283e-02*G0_1_2;
  block[47] = 3.482142857142853e-02*G0_1_0 + 4.821428571428562e-02*G0_1_1 + 3.482142857142853e-02*G0_1_2;
  block[48] = -1.339285714285711e-02*G0_1_1 - 1.339285714285710e-02*G0_1_2;
  block[49] = -1.339285714285708e-02*G0_1_1 - 1.339285714285707e-02*G0_1_2;
  block[50] = -1.339285714285708e-02*G0_1_0 - 1.339285714285708e-02*G0_1_1;
  block[51] = -1.339285714285716e-02*G0_1_0 - 1.339285714285716e-02*G0_1_1;
  block[52] = 1.339285714285708e-02*G0_1_0 + 1.339285714285708e-02*G0_1_2;
  block[53] = 1.339285714285715e-02*G0_1_0 + 1.339285714285714e-02*G0_1_2;
  block[54] = -3.482142857142850e-02*G0_1_1 + 6.160714285714278e-02*G0_1_2;
  block[55] = 1.339285714285716e-02*G0_1_1 - 3.482142857142854e-02*G0_1_2;
  block[56] = -1.607142857142853e-02*G0_1_0 + 3.214285714285706e-02*G0_1_1 - 1.607142857142855e-02*G0_1_2;
  block[57] = 1.607142857142854e-02*G0_1_0 + 4.821428571428560e-02*G0_1_1;
  block[58] = -3.214285714285704e-02*G0_1_1;
  block[59] = 4.821428571428561e-02*G0_1_1 + 1.607142857142856e-02*G0_1_2;
  block[60] = -1.130952380952380e-02*G0_2_0 - 1.130952380952380e-02*G0_2_1 - 1.130952380952380e-02*G0_2_2;
  block[61] = 1.130952380952380e-02*G0_2_0;
  block[62] = 1.130952380952381e-02*G0_2_1;
  block[63] = 5.952380952380943e-02*G0_2_2;
  block[64] = 1.339285714285710e-02*G0_2_0 + 1.339285714285713e-02*G0_2_1;
  block[65] = 1.339285714285710e-02*G0_2_0 + 1.339285714285707e-02*G0_2_1;
  block[66] = -1.339285714285708e-02*G0_2_0 - 1.339285714285707e-02*G0_2_2;
  block[67] = -1.339285714285711e-02*G0_2_0 - 1.339285714285710e-02*G0_2_2;
  block[68] = -1.339285714285709e-02*G0_2_1 - 1.339285714285710e-02*G0_2_2;
  block[69] = -1.339285714285714e-02*G0_2_1 - 1.339285714285713e-02*G0_2_2;
  block[70] = 3.482142857142849e-02*G0_2_0 + 3.482142857142852e-02*G0_2_1 + 4.821428571428564e-02*G0_2_2;
  block[71] = -6.160714285714283e-02*G0_2_0 - 6.160714285714282e-02*G0_2_1 - 9.642857142857127e-02*G0_2_2;
  block[72] = -3.482142857142850e-02*G0_2_0 + 1.339285714285715e-02*G0_2_2;
  block[73] = 6.160714285714278e-02*G0_2_0 - 3.482142857142850e-02*G0_2_2;
  block[74] = -3.482142857142860e-02*G0_2_1 + 1.339285714285707e-02*G0_2_2;
  block[75] = 6.160714285714281e-02*G0_2_1 - 3.482142857142850e-02*G0_2_2;
  block[76] = -1.607142857142859e-02*G0_2_0 - 1.607142857142853e-02*G0_2_1 + 3.214285714285701e-02*G0_2_2;
  block[77] = 1.607142857142863e-02*G0_2_0 + 4.821428571428559e-02*G0_2_2;
  block[78] = 1.607142857142852e-02*G0_2_1 + 4.821428571428557e-02*G0_2_2;
  block[79] = -3.214285714285701e-02*G0_2_2;
  block[80] = -1.339285714285717e-02*G0_0_0 - 1.339285714285718e-02*G0_0_1 - 1.339285714285715e-02*G0_0_2 - 1.339285714285717e-02*G0_1_0 - 1.339285714285717e-02*G0_1_1 - 1.339285714285715e-02*G0_1_2;
  block[81] = -3.482142857142854e-02*G0_0_0 + 6.160714285714278e-02*G0_1_0;
  block[82] = -3.482142857142859e-02*G0_0_1 + 1.339285714285711e-02*G0_1_1;
  block[83] = 1.339285714285710e-02*G0_0_2 + 1.339285714285713e-02*G0_1_2;
  block[84] = 2.410714285714284e-01*G0_0_0 + 9.642857142857143e-02*G0_0_1 + 9.642857142857143e-02*G0_1_0 + 1.928571428571428e-01*G0_1_1;
  block[85] = -7.232142857142854e-02*G0_0_0 + 7.232142857142856e-02*G0_0_1 - 2.410714285714284e-02*G0_1_0 - 7.232142857142844e-02*G0_1_1;
  block[86] = 7.232142857142863e-02*G0_0_0 + 2.410714285714292e-02*G0_0_1 + 7.232142857142861e-02*G0_0_2 + 2.410714285714290e-02*G0_1_0 + 2.410714285714289e-02*G0_1_2;
  block[87] = 4.821428571428571e-02*G0_0_0 + 2.410714285714290e-02*G0_0_1 + 4.821428571428571e-02*G0_0_2 + 2.410714285714290e-02*G0_1_0 + 2.410714285714289e-02*G0_1_2;
  block[88] = 2.410714285714294e-02*G0_0_0 + 4.821428571428577e-02*G0_0_1 + 4.821428571428577e-02*G0_0_2 + 4.821428571428574e-02*G0_1_0 + 7.232142857142859e-02*G0_1_1 + 7.232142857142859e-02*G0_1_2;
  block[89] = 2.410714285714271e-02*G0_0_0 - 9.642857142857149e-02*G0_0_1 - 9.642857142857149e-02*G0_0_2 - 9.642857142857139e-02*G0_1_0 - 1.928571428571428e-01*G0_1_1 - 1.928571428571428e-01*G0_1_2;
  block[90] = 2.410714285714277e-02*G0_0_0 + 2.410714285714277e-02*G0_0_1 + 2.410714285714284e-02*G0_1_0 + 2.410714285714285e-02*G0_1_1;
  block[91] = 2.410714285714286e-02*G0_0_0 + 2.410714285714283e-02*G0_0_1 + 2.410714285714288e-02*G0_1_0 + 2.410714285714286e-02*G0_1_1;
  block[92] = 1.205357142857142e-01*G0_0_0 + 9.642857142857142e-02*G0_0_2 + 9.642857142857141e-02*G0_1_0 + 1.928571428571427e-01*G0_1_2;
  block[93] = -2.410714285714280e-02*G0_0_0 - 4.821428571428559e-02*G0_0_2 - 2.410714285714283e-02*G0_1_0 - 7.232142857142843e-02*G0_1_2;
  block[94] = -4.821428571428563e-02*G0_0_1 - 7.232142857142852e-02*G0_0_2 - 2.410714285714282e-02*G0_1_1 - 2.410714285714285e-02*G0_1_2;
  block[95] = -2.410714285714283e-02*G0_0_1 - 4.821428571428556e-02*G0_0_2 - 2.410714285714285e-02*G0_1_1 - 2.410714285714282e-02*G0_1_2;
  block[96] = -4.821428571428558e-02*G0_0_0 + 1.205357142857143e-01*G0_0_1 + 2.410714285714285e-01*G0_0_2 - 2.410714285714286e-02*G0_1_0 + 9.642857142857141e-02*G0_1_1 + 9.642857142857142e-02*G0_1_2;
  block[97] = 4.821428571428554e-02*G0_0_0 + 2.410714285714290e-02*G0_0_1 + 2.410714285714283e-02*G0_1_0;
  block[98] = -1.446428571428570e-01*G0_0_0 - 1.205357142857144e-01*G0_0_1 - 1.205357142857143e-01*G0_1_0 - 9.642857142857145e-02*G0_1_1;
  block[99] = -2.892857142857141e-01*G0_0_0 - 1.205357142857143e-01*G0_0_1 - 2.410714285714285e-01*G0_0_2 - 1.205357142857143e-01*G0_1_0 - 9.642857142857149e-02*G0_1_2;
  block[100] = -1.339285714285713e-02*G0_0_0 - 1.339285714285713e-02*G0_0_1 - 1.339285714285714e-02*G0_0_2 - 1.339285714285716e-02*G0_1_0 - 1.339285714285717e-02*G0_1_1 - 1.339285714285718e-02*G0_1_2;
  block[101] = 1.339285714285713e-02*G0_0_0 - 3.482142857142851e-02*G0_1_0;
  block[102] = 6.160714285714283e-02*G0_0_1 - 3.482142857142849e-02*G0_1_1;
  block[103] = 1.339285714285710e-02*G0_0_2 + 1.339285714285707e-02*G0_1_2;
  block[104] = -7.232142857142854e-02*G0_0_0 - 2.410714285714285e-02*G0_0_1 + 7.232142857142856e-02*G0_1_0 - 7.232142857142843e-02*G0_1_1;
  block[105] = 1.928571428571428e-01*G0_0_0 + 9.642857142857146e-02*G0_0_1 + 9.642857142857146e-02*G0_1_0 + 2.410714285714284e-01*G0_1_1;
  block[106] = -1.928571428571428e-01*G0_0_0 - 9.642857142857142e-02*G0_0_1 - 1.928571428571428e-01*G0_0_2 - 9.642857142857141e-02*G0_1_0 + 2.410714285714267e-02*G0_1_1 - 9.642857142857141e-02*G0_1_2;
  block[107] = 7.232142857142868e-02*G0_0_0 + 4.821428571428577e-02*G0_0_1 + 7.232142857142873e-02*G0_0_2 + 4.821428571428588e-02*G0_1_0 + 2.410714285714302e-02*G0_1_1 + 4.821428571428596e-02*G0_1_2;
  block[108] = 2.410714285714300e-02*G0_0_1 + 2.410714285714297e-02*G0_0_2 + 2.410714285714294e-02*G0_1_0 + 4.821428571428586e-02*G0_1_1 + 4.821428571428581e-02*G0_1_2;
  block[109] = 2.410714285714281e-02*G0_0_1 + 2.410714285714282e-02*G0_0_2 + 2.410714285714274e-02*G0_1_0 + 7.232142857142830e-02*G0_1_1 + 7.232142857142830e-02*G0_1_2;
  block[110] = 2.410714285714294e-02*G0_0_0 + 2.410714285714296e-02*G0_0_1 + 2.410714285714287e-02*G0_1_0 + 2.410714285714288e-02*G0_1_1;
  block[111] = 2.410714285714288e-02*G0_0_0 + 2.410714285714287e-02*G0_0_1 + 2.410714285714287e-02*G0_1_0 + 2.410714285714288e-02*G0_1_1;
  block[112] = -2.410714285714278e-02*G0_0_0 - 2.410714285714282e-02*G0_0_2 - 4.821428571428549e-02*G0_1_0 - 7.232142857142834e-02*G0_1_2;
  block[113] = -2.410714285714287e-02*G0_0_0 - 2.410714285714283e-02*G0_0_2 - 2.410714285714289e-02*G0_1_0 - 4.821428571428567e-02*G0_1_2;
  block[114] = 9.642857142857145e-02*G0_0_1 + 1.928571428571427e-01*G0_0_2 + 1.205357142857142e-01*G0_1_1 + 9.642857142857142e-02*G0_1_2;
  block[115] = -2.410714285714287e-02*G0_0_1 - 7.232142857142848e-02*G0_0_2 - 2.410714285714288e-02*G0_1_1 - 4.821428571428561e-02*G0_1_2;
  block[116] = 9.642857142857141e-02*G0_0_0 - 2.410714285714285e-02*G0_0_1 + 9.642857142857147e-02*G0_0_2 + 1.205357142857143e-01*G0_1_0 - 4.821428571428551e-02*G0_1_1 + 2.410714285714286e-01*G0_1_2;
  block[117] = -9.642857142857135e-02*G0_0_0 - 1.205357142857144e-01*G0_0_1 - 1.205357142857142e-01*G0_1_0 - 1.446428571428571e-01*G0_1_1;
  block[118] = 2.410714285714283e-02*G0_0_1 + 2.410714285714262e-02*G0_1_0 + 4.821428571428543e-02*G0_1_1;
  block[119] = -1.205357142857144e-01*G0_0_1 - 9.642857142857145e-02*G0_0_2 - 1.205357142857145e-01*G0_1_0 - 2.892857142857141e-01*G0_1_1 - 2.410714285714285e-01*G0_1_2;
  block[120] = 1.339285714285712e-02*G0_0_0 + 1.339285714285712e-02*G0_0_1 + 1.339285714285713e-02*G0_0_2 + 4.821428571428561e-02*G0_1_0 + 4.821428571428558e-02*G0_1_1 + 4.821428571428556e-02*G0_1_2 + 1.339285714285712e-02*G0_2_0 + 1.339285714285712e-02*G0_2_1 + 1.339285714285712e-02*G0_2_2;
  block[121] = -1.339285714285714e-02*G0_0_0 - 1.339285714285712e-02*G0_2_0;
  block[122] = -6.160714285714283e-02*G0_0_1 - 9.642857142857127e-02*G0_1_1 - 6.160714285714281e-02*G0_2_1;
  block[123] = -1.339285714285709e-02*G0_0_2 - 1.339285714285707e-02*G0_2_2;
  block[124] = 7.232142857142865e-02*G0_0_0 + 2.410714285714290e-02*G0_0_1 + 2.410714285714293e-02*G0_1_0 + 7.232142857142862e-02*G0_2_0 + 2.410714285714290e-02*G0_2_1;
  block[125] = -1.928571428571428e-01*G0_0_0 - 9.642857142857141e-02*G0_0_1 - 9.642857142857143e-02*G0_1_0 + 2.410714285714266e-02*G0_1_1 - 1.928571428571428e-01*G0_2_0 - 9.642857142857142e-02*G0_2_1;
  block[126] = 1.928571428571428e-01*G0_0_0 + 9.642857142857145e-02*G0_0_1 + 1.928571428571428e-01*G0_0_2 + 9.642857142857145e-02*G0_1_0 + 2.410714285714283e-01*G0_1_1 + 9.642857142857143e-02*G0_1_2 + 1.928571428571428e-01*G0_2_0 + 9.642857142857142e-02*G0_2_1 + 1.928571428571428e-01*G0_2_2;
  block[127] = -7.232142857142868e-02*G0_0_0 - 4.821428571428577e-02*G0_0_1 - 7.232142857142873e-02*G0_0_2 - 1.446428571428570e-01*G0_1_0 - 1.928571428571425e-01*G0_1_1 - 1.446428571428570e-01*G0_1_2 - 7.232142857142866e-02*G0_2_0 - 4.821428571428577e-02*G0_2_1 - 7.232142857142872e-02*G0_2_2;
  block[128] = -2.410714285714299e-02*G0_0_1 - 2.410714285714295e-02*G0_0_2 - 2.410714285714280e-02*G0_1_0 + 2.410714285714282e-02*G0_1_1 + 2.410714285714280e-02*G0_1_2 - 2.410714285714298e-02*G0_2_1 - 2.410714285714294e-02*G0_2_2;
  block[129] = -2.410714285714286e-02*G0_0_1 - 2.410714285714288e-02*G0_0_2 - 2.410714285714282e-02*G0_1_0 - 2.410714285714286e-02*G0_2_1 - 2.410714285714287e-02*G0_2_2;
  block[130] = -2.410714285714292e-02*G0_0_0 - 2.410714285714294e-02*G0_0_1 + 2.410714285714280e-02*G0_1_0 + 2.410714285714278e-02*G0_1_1 - 2.410714285714279e-02*G0_1_2 - 2.410714285714291e-02*G0_2_0 - 2.410714285714293e-02*G0_2_1;
  block[131] = -2.410714285714285e-02*G0_0_0 - 2.410714285714284e-02*G0_0_1 - 2.410714285714279e-02*G0_1_2 - 2.410714285714288e-02*G0_2_0 - 2.410714285714288e-02*G0_2_1;
  block[132] = 2.410714285714287e-02*G0_0_0 + 2.410714285714288e-02*G0_0_2 + 2.410714285714284e-02*G0_2_0 + 2.410714285714287e-02*G0_2_2;
  block[133] = 2.410714285714285e-02*G0_0_0 + 2.410714285714281e-02*G0_0_2 + 2.410714285714289e-02*G0_2_0 + 2.410714285714281e-02*G0_2_2;
  block[134] = -9.642857142857146e-02*G0_0_1 - 1.928571428571427e-01*G0_0_2 + 2.410714285714270e-02*G0_1_1 - 9.642857142857139e-02*G0_1_2 - 9.642857142857146e-02*G0_2_1 - 1.928571428571427e-01*G0_2_2;
  block[135] = 2.410714285714285e-02*G0_0_1 + 7.232142857142845e-02*G0_0_2 + 2.410714285714288e-02*G0_1_2 + 2.410714285714288e-02*G0_2_1 + 7.232142857142847e-02*G0_2_2;
  block[136] = -9.642857142857135e-02*G0_0_0 + 2.410714285714299e-02*G0_0_1 - 9.642857142857128e-02*G0_0_2 + 2.410714285714267e-02*G0_1_0 + 2.410714285714265e-02*G0_1_2 - 9.642857142857134e-02*G0_2_0 + 2.410714285714296e-02*G0_2_1 - 9.642857142857134e-02*G0_2_2;
  block[137] = 9.642857142857128e-02*G0_0_0 + 1.205357142857144e-01*G0_0_1 - 2.410714285714269e-02*G0_1_0 - 4.821428571428545e-02*G0_1_1 + 1.205357142857141e-01*G0_1_2 + 9.642857142857132e-02*G0_2_0 + 1.205357142857144e-01*G0_2_1;
  block[138] = -2.410714285714297e-02*G0_0_1 - 2.410714285714285e-02*G0_1_0 - 2.410714285714283e-02*G0_1_2 - 2.410714285714292e-02*G0_2_1;
  block[139] = 1.205357142857143e-01*G0_0_1 + 9.642857142857122e-02*G0_0_2 + 1.205357142857140e-01*G0_1_0 - 4.821428571428552e-02*G0_1_1 - 2.410714285714268e-02*G0_1_2 + 1.205357142857144e-01*G0_2_1 + 9.642857142857129e-02*G0_2_2;
  block[140] = -3.482142857142853e-02*G0_0_0 - 3.482142857142853e-02*G0_0_1 - 3.482142857142851e-02*G0_0_2 - 9.642857142857121e-02*G0_1_0 - 9.642857142857121e-02*G0_1_1 - 9.642857142857120e-02*G0_1_2 - 3.482142857142854e-02*G0_2_0 - 3.482142857142853e-02*G0_2_1 - 3.482142857142852e-02*G0_2_2;
  block[141] = -1.339285714285712e-02*G0_0_0 - 1.339285714285711e-02*G0_2_0;
  block[142] = 3.482142857142853e-02*G0_0_1 + 4.821428571428562e-02*G0_1_1 + 3.482142857142853e-02*G0_2_1;
  block[143] = -1.339285714285711e-02*G0_0_2 - 1.339285714285710e-02*G0_2_2;
  block[144] = 4.821428571428570e-02*G0_0_0 + 2.410714285714290e-02*G0_0_1 + 2.410714285714289e-02*G0_1_0 + 4.821428571428570e-02*G0_2_0 + 2.410714285714288e-02*G0_2_1;
  block[145] = 7.232142857142869e-02*G0_0_0 + 4.821428571428588e-02*G0_0_1 + 4.821428571428578e-02*G0_1_0 + 2.410714285714302e-02*G0_1_1 + 7.232142857142874e-02*G0_2_0 + 4.821428571428596e-02*G0_2_1;
  block[146] = -7.232142857142868e-02*G0_0_0 - 1.446428571428570e-01*G0_0_1 - 7.232142857142866e-02*G0_0_2 - 4.821428571428577e-02*G0_1_0 - 1.928571428571425e-01*G0_1_1 - 4.821428571428577e-02*G0_1_2 - 7.232142857142872e-02*G0_2_0 - 1.446428571428570e-01*G0_2_1 - 7.232142857142872e-02*G0_2_2;
  block[147] = 2.410714285714285e-01*G0_0_0 + 1.446428571428570e-01*G0_0_1 + 2.410714285714285e-01*G0_0_2 + 1.446428571428570e-01*G0_1_0 + 2.410714285714282e-01*G0_1_1 + 1.446428571428570e-01*G0_1_2 + 2.410714285714285e-01*G0_2_0 + 1.446428571428570e-01*G0_2_1 + 2.410714285714285e-01*G0_2_2;
  block[148] = 2.410714285714292e-02*G0_0_0 + 1.205357142857144e-01*G0_0_1 + 1.205357142857144e-01*G0_0_2 + 1.205357142857142e-01*G0_1_0 + 2.410714285714297e-02*G0_1_1 + 2.410714285714297e-02*G0_1_2 + 2.410714285714292e-02*G0_2_0 + 1.205357142857144e-01*G0_2_1 + 1.205357142857144e-01*G0_2_2;
  block[149] = 2.410714285714273e-02*G0_0_0 - 2.410714285714296e-02*G0_0_1 - 2.410714285714296e-02*G0_0_2 - 2.410714285714290e-02*G0_1_0 + 2.410714285714275e-02*G0_2_0 - 2.410714285714295e-02*G0_2_1 - 2.410714285714294e-02*G0_2_2;
  block[150] = 1.205357142857143e-01*G0_0_0 + 1.205357142857143e-01*G0_0_1 + 2.410714285714290e-02*G0_0_2 + 2.410714285714291e-02*G0_1_0 + 2.410714285714291e-02*G0_1_1 + 1.205357142857141e-01*G0_1_2 + 1.205357142857143e-01*G0_2_0 + 1.205357142857143e-01*G0_2_1 + 2.410714285714290e-02*G0_2_2;
  block[151] = -2.410714285714285e-02*G0_0_0 - 2.410714285714285e-02*G0_0_1 + 2.410714285714280e-02*G0_0_2 - 2.410714285714282e-02*G0_1_2 - 2.410714285714285e-02*G0_2_0 - 2.410714285714285e-02*G0_2_1 + 2.410714285714279e-02*G0_2_2;
  block[152] = 2.410714285714292e-02*G0_0_0 + 2.410714285714293e-02*G0_0_2 + 2.410714285714289e-02*G0_2_0 + 2.410714285714291e-02*G0_2_2;
  block[153] = 2.410714285714287e-02*G0_0_0 + 2.410714285714289e-02*G0_0_2 + 2.410714285714286e-02*G0_2_0 + 2.410714285714287e-02*G0_2_2;
  block[154] = 4.821428571428578e-02*G0_0_1 + 7.232142857142862e-02*G0_0_2 + 2.410714285714298e-02*G0_1_1 + 4.821428571428576e-02*G0_1_2 + 4.821428571428583e-02*G0_2_1 + 7.232142857142868e-02*G0_2_2;
  block[155] = 2.410714285714285e-02*G0_0_1 + 4.821428571428569e-02*G0_0_2 + 2.410714285714278e-02*G0_1_2 + 2.410714285714284e-02*G0_2_1 + 4.821428571428568e-02*G0_2_2;
  block[156] = 4.821428571428599e-02*G0_0_0 + 2.410714285714310e-02*G0_0_1 + 4.821428571428611e-02*G0_0_2 + 2.410714285714306e-02*G0_1_0 + 2.410714285714327e-02*G0_1_2 + 4.821428571428606e-02*G0_2_0 + 2.410714285714313e-02*G0_2_1 + 4.821428571428620e-02*G0_2_2;
  block[157] = -4.821428571428592e-02*G0_0_0 - 1.687500000000001e-01*G0_0_1 - 2.892857142857140e-01*G0_0_2 - 2.410714285714303e-02*G0_1_0 - 4.821428571428590e-02*G0_1_1 - 1.687499999999997e-01*G0_1_2 - 4.821428571428602e-02*G0_2_0 - 1.687500000000001e-01*G0_2_1 - 2.892857142857140e-01*G0_2_2;
  block[158] = -1.446428571428572e-01*G0_0_0 - 2.410714285714313e-02*G0_0_1 - 1.446428571428573e-01*G0_0_2 - 2.410714285714300e-02*G0_1_0 - 2.410714285714293e-02*G0_1_2 - 1.446428571428572e-01*G0_2_0 - 2.410714285714314e-02*G0_2_1 - 1.446428571428573e-01*G0_2_2;
  block[159] = -2.892857142857141e-01*G0_0_0 - 1.687500000000001e-01*G0_0_1 - 4.821428571428609e-02*G0_0_2 - 1.687499999999999e-01*G0_1_0 - 4.821428571428588e-02*G0_1_1 - 2.410714285714323e-02*G0_1_2 - 2.892857142857142e-01*G0_2_0 - 1.687500000000002e-01*G0_2_1 - 4.821428571428621e-02*G0_2_2;
  block[160] = -9.642857142857136e-02*G0_0_0 - 9.642857142857135e-02*G0_0_1 - 9.642857142857135e-02*G0_0_2 - 3.482142857142859e-02*G0_1_0 - 3.482142857142861e-02*G0_1_1 - 3.482142857142861e-02*G0_1_2 - 3.482142857142860e-02*G0_2_0 - 3.482142857142861e-02*G0_2_1 - 3.482142857142861e-02*G0_2_2;
  block[161] = 4.821428571428573e-02*G0_0_0 + 3.482142857142857e-02*G0_1_0 + 3.482142857142857e-02*G0_2_0;
  block[162] = -1.339285714285711e-02*G0_1_1 - 1.339285714285710e-02*G0_2_1;
  block[163] = -1.339285714285709e-02*G0_1_2 - 1.339285714285710e-02*G0_2_2;
  block[164] = 2.410714285714294e-02*G0_0_0 + 4.821428571428574e-02*G0_0_1 + 4.821428571428578e-02*G0_1_0 + 7.232142857142859e-02*G0_1_1 + 4.821428571428575e-02*G0_2_0 + 7.232142857142858e-02*G0_2_1;
  block[165] = 2.410714285714295e-02*G0_0_1 + 2.410714285714301e-02*G0_1_0 + 4.821428571428586e-02*G0_1_1 + 2.410714285714297e-02*G0_2_0 + 4.821428571428579e-02*G0_2_1;
  block[166] = -2.410714285714279e-02*G0_0_1 - 2.410714285714299e-02*G0_1_0 + 2.410714285714282e-02*G0_1_1 - 2.410714285714298e-02*G0_1_2 - 2.410714285714295e-02*G0_2_0 + 2.410714285714280e-02*G0_2_1 - 2.410714285714294e-02*G0_2_2;
  block[167] = 2.410714285714291e-02*G0_0_0 + 1.205357142857142e-01*G0_0_1 + 2.410714285714291e-02*G0_0_2 + 1.205357142857144e-01*G0_1_0 + 2.410714285714296e-02*G0_1_1 + 1.205357142857144e-01*G0_1_2 + 1.205357142857144e-01*G0_2_0 + 2.410714285714297e-02*G0_2_1 + 1.205357142857144e-01*G0_2_2;
  block[168] = 2.410714285714284e-01*G0_0_0 + 1.446428571428572e-01*G0_0_1 + 1.446428571428571e-01*G0_0_2 + 1.446428571428572e-01*G0_1_0 + 2.410714285714285e-01*G0_1_1 + 2.410714285714285e-01*G0_1_2 + 1.446428571428571e-01*G0_2_0 + 2.410714285714285e-01*G0_2_1 + 2.410714285714284e-01*G0_2_2;
  block[169] = -1.928571428571428e-01*G0_0_0 - 4.821428571428586e-02*G0_0_1 - 4.821428571428581e-02*G0_0_2 - 1.446428571428571e-01*G0_1_0 - 7.232142857142872e-02*G0_1_1 - 7.232142857142872e-02*G0_1_2 - 1.446428571428571e-01*G0_2_0 - 7.232142857142872e-02*G0_2_1 - 7.232142857142870e-02*G0_2_2;
  block[170] = 2.410714285714291e-02*G0_0_0 + 2.410714285714291e-02*G0_0_1 + 1.205357142857141e-01*G0_0_2 + 1.205357142857143e-01*G0_1_0 + 1.205357142857143e-01*G0_1_1 + 2.410714285714296e-02*G0_1_2 + 1.205357142857142e-01*G0_2_0 + 1.205357142857143e-01*G0_2_1 + 2.410714285714297e-02*G0_2_2;
  block[171] = -2.410714285714282e-02*G0_0_2 - 2.410714285714283e-02*G0_1_0 - 2.410714285714284e-02*G0_1_1 + 2.410714285714277e-02*G0_1_2 - 2.410714285714285e-02*G0_2_0 - 2.410714285714287e-02*G0_2_1 + 2.410714285714277e-02*G0_2_2;
  block[172] = 2.410714285714288e-02*G0_0_0 + 4.821428571428580e-02*G0_0_2 + 4.821428571428575e-02*G0_1_0 + 7.232142857142866e-02*G0_1_2 + 4.821428571428577e-02*G0_2_0 + 7.232142857142866e-02*G0_2_2;
  block[173] = 2.410714285714279e-02*G0_0_2 + 2.410714285714287e-02*G0_1_0 + 4.821428571428568e-02*G0_1_2 + 2.410714285714289e-02*G0_2_0 + 4.821428571428574e-02*G0_2_2;
  block[174] = 2.410714285714294e-02*G0_1_1 + 2.410714285714296e-02*G0_1_2 + 2.410714285714290e-02*G0_2_1 + 2.410714285714292e-02*G0_2_2;
  block[175] = 2.410714285714284e-02*G0_1_1 + 2.410714285714285e-02*G0_1_2 + 2.410714285714287e-02*G0_2_1 + 2.410714285714290e-02*G0_2_2;
  block[176] = 2.410714285714299e-02*G0_0_1 + 2.410714285714312e-02*G0_0_2 + 2.410714285714308e-02*G0_1_0 + 4.821428571428591e-02*G0_1_1 + 4.821428571428604e-02*G0_1_2 + 2.410714285714310e-02*G0_2_0 + 4.821428571428601e-02*G0_2_1 + 4.821428571428604e-02*G0_2_2;
  block[177] = -2.410714285714294e-02*G0_0_1 - 2.410714285714290e-02*G0_0_2 - 2.410714285714307e-02*G0_1_0 - 1.446428571428572e-01*G0_1_1 - 1.446428571428572e-01*G0_1_2 - 2.410714285714310e-02*G0_2_0 - 1.446428571428571e-01*G0_2_1 - 1.446428571428572e-01*G0_2_2;
  block[178] = -4.821428571428580e-02*G0_0_0 - 2.410714285714302e-02*G0_0_1 - 1.687499999999999e-01*G0_0_2 - 1.687500000000001e-01*G0_1_0 - 4.821428571428596e-02*G0_1_1 - 2.892857142857143e-01*G0_1_2 - 1.687500000000001e-01*G0_2_0 - 4.821428571428604e-02*G0_2_1 - 2.892857142857143e-01*G0_2_2;
  block[179] = -4.821428571428586e-02*G0_0_0 - 1.687500000000000e-01*G0_0_1 - 2.410714285714311e-02*G0_0_2 - 1.687500000000001e-01*G0_1_0 - 2.892857142857143e-01*G0_1_1 - 4.821428571428606e-02*G0_1_2 - 1.687500000000001e-01*G0_2_0 - 2.892857142857141e-01*G0_2_1 - 4.821428571428606e-02*G0_2_2;
  block[180] = 4.821428571428572e-02*G0_0_0 + 4.821428571428571e-02*G0_0_1 + 4.821428571428572e-02*G0_0_2 + 1.339285714285721e-02*G0_1_0 + 1.339285714285721e-02*G0_1_1 + 1.339285714285719e-02*G0_1_2 + 1.339285714285719e-02*G0_2_0 + 1.339285714285719e-02*G0_2_1 + 1.339285714285717e-02*G0_2_2;
  block[181] = -9.642857142857136e-02*G0_0_0 - 6.160714285714280e-02*G0_1_0 - 6.160714285714280e-02*G0_2_0;
  block[182] = -1.339285714285708e-02*G0_1_1 - 1.339285714285707e-02*G0_2_1;
  block[183] = -1.339285714285714e-02*G0_1_2 - 1.339285714285713e-02*G0_2_2;
  block[184] = 2.410714285714271e-02*G0_0_0 - 9.642857142857142e-02*G0_0_1 - 9.642857142857150e-02*G0_1_0 - 1.928571428571428e-01*G0_1_1 - 9.642857142857149e-02*G0_2_0 - 1.928571428571428e-01*G0_2_1;
  block[185] = 2.410714285714275e-02*G0_0_1 + 2.410714285714281e-02*G0_1_0 + 7.232142857142830e-02*G0_1_1 + 2.410714285714282e-02*G0_2_0 + 7.232142857142830e-02*G0_2_1;
  block[186] = -2.410714285714283e-02*G0_0_1 - 2.410714285714286e-02*G0_1_0 - 2.410714285714286e-02*G0_1_2 - 2.410714285714288e-02*G0_2_0 - 2.410714285714287e-02*G0_2_2;
  block[187] = 2.410714285714273e-02*G0_0_0 - 2.410714285714289e-02*G0_0_1 + 2.410714285714275e-02*G0_0_2 - 2.410714285714297e-02*G0_1_0 - 2.410714285714295e-02*G0_1_2 - 2.410714285714296e-02*G0_2_0 - 2.410714285714294e-02*G0_2_2;
  block[188] = -1.928571428571428e-01*G0_0_0 - 1.446428571428571e-01*G0_0_1 - 1.446428571428571e-01*G0_0_2 - 4.821428571428586e-02*G0_1_0 - 7.232142857142872e-02*G0_1_1 - 7.232142857142872e-02*G0_1_2 - 4.821428571428582e-02*G0_2_0 - 7.232142857142870e-02*G0_2_1 - 7.232142857142870e-02*G0_2_2;
  block[189] = 2.410714285714284e-01*G0_0_0 + 9.642857142857149e-02*G0_0_1 + 9.642857142857145e-02*G0_0_2 + 9.642857142857147e-02*G0_1_0 + 1.928571428571429e-01*G0_1_1 + 1.928571428571428e-01*G0_1_2 + 9.642857142857145e-02*G0_2_0 + 1.928571428571428e-01*G0_2_1 + 1.928571428571428e-01*G0_2_2;
  block[190] = 2.410714285714272e-02*G0_0_0 + 2.410714285714273e-02*G0_0_1 - 2.410714285714290e-02*G0_0_2 - 2.410714285714289e-02*G0_1_0 - 2.410714285714291e-02*G0_1_1 - 2.410714285714290e-02*G0_2_0 - 2.410714285714291e-02*G0_2_1;
  block[191] = -2.410714285714278e-02*G0_0_2 - 2.410714285714285e-02*G0_1_0 - 2.410714285714283e-02*G0_1_1 - 2.410714285714283e-02*G0_2_0 - 2.410714285714280e-02*G0_2_1;
  block[192] = 2.410714285714276e-02*G0_0_0 - 9.642857142857145e-02*G0_0_2 - 9.642857142857141e-02*G0_1_0 - 1.928571428571427e-01*G0_1_2 - 9.642857142857139e-02*G0_2_0 - 1.928571428571427e-01*G0_2_2;
  block[193] = 2.410714285714283e-02*G0_0_2 + 2.410714285714280e-02*G0_1_0 + 7.232142857142838e-02*G0_1_2 + 2.410714285714278e-02*G0_2_0 + 7.232142857142837e-02*G0_2_2;
  block[194] = 2.410714285714275e-02*G0_1_1 + 2.410714285714281e-02*G0_1_2 + 2.410714285714275e-02*G0_2_1 + 2.410714285714282e-02*G0_2_2;
  block[195] = 2.410714285714283e-02*G0_1_1 + 2.410714285714278e-02*G0_1_2 + 2.410714285714280e-02*G0_2_1 + 2.410714285714276e-02*G0_2_2;
  block[196] = 2.410714285714275e-02*G0_0_1 + 2.410714285714266e-02*G0_0_2 + 2.410714285714273e-02*G0_1_0 - 9.642857142857149e-02*G0_1_1 - 9.642857142857160e-02*G0_1_2 + 2.410714285714271e-02*G0_2_0 - 9.642857142857149e-02*G0_2_1 - 9.642857142857157e-02*G0_2_2;
  block[197] = -2.410714285714269e-02*G0_0_1 - 2.410714285714275e-02*G0_0_2 - 2.410714285714270e-02*G0_1_0 - 2.410714285714267e-02*G0_2_0;
  block[198] = -4.821428571428547e-02*G0_0_0 - 2.410714285714273e-02*G0_0_1 + 1.205357142857142e-01*G0_0_2 + 1.205357142857143e-01*G0_1_0 + 9.642857142857153e-02*G0_1_1 + 1.205357142857143e-01*G0_2_0 + 9.642857142857153e-02*G0_2_1;
  block[199] = -4.821428571428544e-02*G0_0_0 + 1.205357142857143e-01*G0_0_1 - 2.410714285714264e-02*G0_0_2 + 1.205357142857144e-01*G0_1_0 + 9.642857142857167e-02*G0_1_2 + 1.205357142857144e-01*G0_2_0 + 9.642857142857164e-02*G0_2_2;
  block[200] = -3.482142857142853e-02*G0_0_0 - 3.482142857142854e-02*G0_0_1 - 3.482142857142856e-02*G0_0_2 - 3.482142857142854e-02*G0_1_0 - 3.482142857142854e-02*G0_1_1 - 3.482142857142855e-02*G0_1_2 - 9.642857142857122e-02*G0_2_0 - 9.642857142857122e-02*G0_2_1 - 9.642857142857124e-02*G0_2_2;
  block[201] = -1.339285714285709e-02*G0_0_0 - 1.339285714285709e-02*G0_1_0;
  block[202] = -1.339285714285708e-02*G0_0_1 - 1.339285714285708e-02*G0_1_1;
  block[203] = 3.482142857142849e-02*G0_0_2 + 3.482142857142852e-02*G0_1_2 + 4.821428571428564e-02*G0_2_2;
  block[204] = 2.410714285714278e-02*G0_0_0 + 2.410714285714284e-02*G0_0_1 + 2.410714285714277e-02*G0_1_0 + 2.410714285714285e-02*G0_1_1;
  block[205] = 2.410714285714294e-02*G0_0_0 + 2.410714285714288e-02*G0_0_1 + 2.410714285714296e-02*G0_1_0 + 2.410714285714288e-02*G0_1_1;
  block[206] = -2.410714285714292e-02*G0_0_0 + 2.410714285714279e-02*G0_0_1 - 2.410714285714292e-02*G0_0_2 - 2.410714285714294e-02*G0_1_0 + 2.410714285714278e-02*G0_1_1 - 2.410714285714293e-02*G0_1_2 - 2.410714285714280e-02*G0_2_1;
  block[207] = 1.205357142857143e-01*G0_0_0 + 2.410714285714291e-02*G0_0_1 + 1.205357142857143e-01*G0_0_2 + 1.205357142857143e-01*G0_1_0 + 2.410714285714291e-02*G0_1_1 + 1.205357142857143e-01*G0_1_2 + 2.410714285714290e-02*G0_2_0 + 1.205357142857141e-01*G0_2_1 + 2.410714285714290e-02*G0_2_2;
  block[208] = 2.410714285714291e-02*G0_0_0 + 1.205357142857143e-01*G0_0_1 + 1.205357142857142e-01*G0_0_2 + 2.410714285714291e-02*G0_1_0 + 1.205357142857143e-01*G0_1_1 + 1.205357142857143e-01*G0_1_2 + 1.205357142857141e-01*G0_2_0 + 2.410714285714296e-02*G0_2_1 + 2.410714285714297e-02*G0_2_2;
  block[209] = 2.410714285714273e-02*G0_0_0 - 2.410714285714289e-02*G0_0_1 - 2.410714285714290e-02*G0_0_2 + 2.410714285714271e-02*G0_1_0 - 2.410714285714290e-02*G0_1_1 - 2.410714285714290e-02*G0_1_2 - 2.410714285714291e-02*G0_2_0;
  block[210] = 2.410714285714282e-01*G0_0_0 + 2.410714285714282e-01*G0_0_1 + 1.446428571428570e-01*G0_0_2 + 2.410714285714282e-01*G0_1_0 + 2.410714285714283e-01*G0_1_1 + 1.446428571428570e-01*G0_1_2 + 1.446428571428570e-01*G0_2_0 + 1.446428571428570e-01*G0_2_1 + 2.410714285714281e-01*G0_2_2;
  block[211] = -7.232142857142854e-02*G0_0_0 - 7.232142857142856e-02*G0_0_1 - 1.446428571428569e-01*G0_0_2 - 7.232142857142854e-02*G0_1_0 - 7.232142857142855e-02*G0_1_1 - 1.446428571428570e-01*G0_1_2 - 4.821428571428572e-02*G0_2_0 - 4.821428571428573e-02*G0_2_1 - 1.928571428571425e-01*G0_2_2;
  block[212] = 4.821428571428566e-02*G0_0_0 + 2.410714285714290e-02*G0_0_2 + 4.821428571428565e-02*G0_1_0 + 2.410714285714291e-02*G0_1_2 + 2.410714285714282e-02*G0_2_0;
  block[213] = 7.232142857142856e-02*G0_0_0 + 4.821428571428577e-02*G0_0_2 + 7.232142857142856e-02*G0_1_0 + 4.821428571428573e-02*G0_1_2 + 4.821428571428572e-02*G0_2_0 + 2.410714285714285e-02*G0_2_2;
  block[214] = 4.821428571428563e-02*G0_0_1 + 2.410714285714289e-02*G0_0_2 + 4.821428571428567e-02*G0_1_1 + 2.410714285714290e-02*G0_1_2 + 2.410714285714277e-02*G0_2_1;
  block[215] = 7.232142857142855e-02*G0_0_1 + 4.821428571428577e-02*G0_0_2 + 7.232142857142856e-02*G0_1_1 + 4.821428571428575e-02*G0_1_2 + 4.821428571428573e-02*G0_2_1 + 2.410714285714292e-02*G0_2_2;
  block[216] = 4.821428571428584e-02*G0_0_0 + 4.821428571428590e-02*G0_0_1 + 2.410714285714297e-02*G0_0_2 + 4.821428571428582e-02*G0_1_0 + 4.821428571428585e-02*G0_1_1 + 2.410714285714296e-02*G0_1_2 + 2.410714285714286e-02*G0_2_0 + 2.410714285714292e-02*G0_2_1;
  block[217] = -4.821428571428582e-02*G0_0_0 - 2.892857142857139e-01*G0_0_1 - 1.687500000000000e-01*G0_0_2 - 4.821428571428582e-02*G0_1_0 - 2.892857142857140e-01*G0_1_1 - 1.687500000000000e-01*G0_1_2 - 2.410714285714286e-02*G0_2_0 - 1.687499999999998e-01*G0_2_1 - 4.821428571428577e-02*G0_2_2;
  block[218] = -2.892857142857139e-01*G0_0_0 - 4.821428571428593e-02*G0_0_1 - 1.687500000000001e-01*G0_0_2 - 2.892857142857139e-01*G0_1_0 - 4.821428571428588e-02*G0_1_1 - 1.687500000000001e-01*G0_1_2 - 1.687499999999999e-01*G0_2_0 - 2.410714285714298e-02*G0_2_1 - 4.821428571428590e-02*G0_2_2;
  block[219] = -1.446428571428570e-01*G0_0_0 - 1.446428571428572e-01*G0_0_1 - 2.410714285714295e-02*G0_0_2 - 1.446428571428570e-01*G0_1_0 - 1.446428571428571e-01*G0_1_1 - 2.410714285714293e-02*G0_1_2 - 2.410714285714288e-02*G0_2_0 - 2.410714285714291e-02*G0_2_1;
  block[220] = 1.339285714285714e-02*G0_0_0 + 1.339285714285715e-02*G0_0_1 + 1.339285714285713e-02*G0_0_2 + 1.339285714285714e-02*G0_1_0 + 1.339285714285715e-02*G0_1_1 + 1.339285714285714e-02*G0_1_2 + 4.821428571428563e-02*G0_2_0 + 4.821428571428561e-02*G0_2_1 + 4.821428571428565e-02*G0_2_2;
  block[221] = -1.339285714285713e-02*G0_0_0 - 1.339285714285712e-02*G0_1_0;
  block[222] = -1.339285714285716e-02*G0_0_1 - 1.339285714285716e-02*G0_1_1;
  block[223] = -6.160714285714282e-02*G0_0_2 - 6.160714285714282e-02*G0_1_2 - 9.642857142857127e-02*G0_2_2;
  block[224] = 2.410714285714286e-02*G0_0_0 + 2.410714285714288e-02*G0_0_1 + 2.410714285714283e-02*G0_1_0 + 2.410714285714285e-02*G0_1_1;
  block[225] = 2.410714285714288e-02*G0_0_0 + 2.410714285714287e-02*G0_0_1 + 2.410714285714287e-02*G0_1_0 + 2.410714285714288e-02*G0_1_1;
  block[226] = -2.410714285714285e-02*G0_0_0 - 2.410714285714288e-02*G0_0_2 - 2.410714285714284e-02*G0_1_0 - 2.410714285714289e-02*G0_1_2 - 2.410714285714279e-02*G0_2_1;
  block[227] = -2.410714285714285e-02*G0_0_0 - 2.410714285714285e-02*G0_0_2 - 2.410714285714285e-02*G0_1_0 - 2.410714285714285e-02*G0_1_2 + 2.410714285714279e-02*G0_2_0 - 2.410714285714281e-02*G0_2_1 + 2.410714285714279e-02*G0_2_2;
  block[228] = -2.410714285714283e-02*G0_0_1 - 2.410714285714285e-02*G0_0_2 - 2.410714285714284e-02*G0_1_1 - 2.410714285714287e-02*G0_1_2 - 2.410714285714282e-02*G0_2_0 + 2.410714285714277e-02*G0_2_1 + 2.410714285714277e-02*G0_2_2;
  block[229] = -2.410714285714285e-02*G0_0_1 - 2.410714285714283e-02*G0_0_2 - 2.410714285714283e-02*G0_1_1 - 2.410714285714280e-02*G0_1_2 - 2.410714285714278e-02*G0_2_0;
  block[230] = -7.232142857142854e-02*G0_0_0 - 7.232142857142854e-02*G0_0_1 - 4.821428571428573e-02*G0_0_2 - 7.232142857142856e-02*G0_1_0 - 7.232142857142856e-02*G0_1_1 - 4.821428571428573e-02*G0_1_2 - 1.446428571428569e-01*G0_2_0 - 1.446428571428570e-01*G0_2_1 - 1.928571428571425e-01*G0_2_2;
  block[231] = 1.928571428571429e-01*G0_0_0 + 1.928571428571428e-01*G0_0_1 + 9.642857142857138e-02*G0_0_2 + 1.928571428571428e-01*G0_1_0 + 1.928571428571428e-01*G0_1_1 + 9.642857142857141e-02*G0_1_2 + 9.642857142857139e-02*G0_2_0 + 9.642857142857141e-02*G0_2_1 + 2.410714285714282e-01*G0_2_2;
  block[232] = 7.232142857142848e-02*G0_0_0 + 2.410714285714283e-02*G0_0_2 + 7.232142857142843e-02*G0_1_0 + 2.410714285714280e-02*G0_1_2 + 2.410714285714285e-02*G0_2_0;
  block[233] = -1.928571428571428e-01*G0_0_0 - 9.642857142857142e-02*G0_0_2 - 1.928571428571428e-01*G0_1_0 - 9.642857142857141e-02*G0_1_2 - 9.642857142857136e-02*G0_2_0 + 2.410714285714279e-02*G0_2_2;
  block[234] = 7.232142857142862e-02*G0_0_1 + 2.410714285714291e-02*G0_0_2 + 7.232142857142863e-02*G0_1_1 + 2.410714285714290e-02*G0_1_2 + 2.410714285714295e-02*G0_2_1;
  block[235] = -1.928571428571428e-01*G0_0_1 - 9.642857142857142e-02*G0_0_2 - 1.928571428571428e-01*G0_1_1 - 9.642857142857136e-02*G0_1_2 - 9.642857142857139e-02*G0_2_1 + 2.410714285714275e-02*G0_2_2;
  block[236] = -9.642857142857136e-02*G0_0_0 - 9.642857142857150e-02*G0_0_1 + 2.410714285714288e-02*G0_0_2 - 9.642857142857131e-02*G0_1_0 - 9.642857142857149e-02*G0_1_1 + 2.410714285714287e-02*G0_1_2 + 2.410714285714288e-02*G0_2_0 + 2.410714285714277e-02*G0_2_1;
  block[237] = 9.642857142857131e-02*G0_0_0 + 1.205357142857142e-01*G0_0_2 + 9.642857142857125e-02*G0_1_0 + 1.205357142857142e-01*G0_1_2 - 2.410714285714291e-02*G0_2_0 + 1.205357142857140e-01*G0_2_1 - 4.821428571428552e-02*G0_2_2;
  block[238] = 9.642857142857145e-02*G0_0_1 + 1.205357142857143e-01*G0_0_2 + 9.642857142857145e-02*G0_1_1 + 1.205357142857143e-01*G0_1_2 + 1.205357142857141e-01*G0_2_0 - 2.410714285714275e-02*G0_2_1 - 4.821428571428548e-02*G0_2_2;
  block[239] = -2.410714285714289e-02*G0_0_2 - 2.410714285714288e-02*G0_1_2 - 2.410714285714283e-02*G0_2_0 - 2.410714285714284e-02*G0_2_1;
  block[240] = -1.339285714285715e-02*G0_0_0 - 1.339285714285716e-02*G0_0_1 - 1.339285714285716e-02*G0_0_2 - 1.339285714285720e-02*G0_2_0 - 1.339285714285720e-02*G0_2_1 - 1.339285714285717e-02*G0_2_2;
  block[241] = -3.482142857142853e-02*G0_0_0 + 6.160714285714279e-02*G0_2_0;
  block[242] = 1.339285714285708e-02*G0_0_1 + 1.339285714285708e-02*G0_2_1;
  block[243] = -3.482142857142850e-02*G0_0_2 + 1.339285714285715e-02*G0_2_2;
  block[244] = 1.205357142857142e-01*G0_0_0 + 9.642857142857141e-02*G0_0_1 + 9.642857142857143e-02*G0_2_0 + 1.928571428571428e-01*G0_2_1;
  block[245] = -2.410714285714278e-02*G0_0_0 - 4.821428571428550e-02*G0_0_1 - 2.410714285714282e-02*G0_2_0 - 7.232142857142834e-02*G0_2_1;
  block[246] = 2.410714285714288e-02*G0_0_0 + 2.410714285714283e-02*G0_0_2 + 2.410714285714288e-02*G0_2_0 + 2.410714285714287e-02*G0_2_2;
  block[247] = 2.410714285714292e-02*G0_0_0 + 2.410714285714289e-02*G0_0_2 + 2.410714285714293e-02*G0_2_0 + 2.410714285714291e-02*G0_2_2;
  block[248] = 2.410714285714288e-02*G0_0_0 + 4.821428571428575e-02*G0_0_1 + 4.821428571428577e-02*G0_0_2 + 4.821428571428581e-02*G0_2_0 + 7.232142857142868e-02*G0_2_1 + 7.232142857142866e-02*G0_2_2;
  block[249] = 2.410714285714275e-02*G0_0_0 - 9.642857142857141e-02*G0_0_1 - 9.642857142857139e-02*G0_0_2 - 9.642857142857145e-02*G0_2_0 - 1.928571428571428e-01*G0_2_1 - 1.928571428571427e-01*G0_2_2;
  block[250] = 4.821428571428566e-02*G0_0_0 + 4.821428571428564e-02*G0_0_1 + 2.410714285714283e-02*G0_0_2 + 2.410714285714290e-02*G0_2_0 + 2.410714285714291e-02*G0_2_1;
  block[251] = 7.232142857142848e-02*G0_0_0 + 7.232142857142843e-02*G0_0_1 + 2.410714285714285e-02*G0_0_2 + 2.410714285714283e-02*G0_2_0 + 2.410714285714280e-02*G0_2_1;
  block[252] = 2.410714285714282e-01*G0_0_0 + 9.642857142857132e-02*G0_0_2 + 9.642857142857134e-02*G0_2_0 + 1.928571428571427e-01*G0_2_2;
  block[253] = -7.232142857142836e-02*G0_0_0 + 7.232142857142856e-02*G0_0_2 - 2.410714285714277e-02*G0_2_0 - 7.232142857142838e-02*G0_2_2;
  block[254] = -4.821428571428553e-02*G0_0_1 - 2.410714285714280e-02*G0_0_2 - 2.410714285714278e-02*G0_2_1 - 2.410714285714283e-02*G0_2_2;
  block[255] = -7.232142857142844e-02*G0_0_1 - 4.821428571428556e-02*G0_0_2 - 2.410714285714280e-02*G0_2_1 - 2.410714285714280e-02*G0_2_2;
  block[256] = -4.821428571428552e-02*G0_0_0 + 2.410714285714284e-01*G0_0_1 + 1.205357142857143e-01*G0_0_2 - 2.410714285714281e-02*G0_2_0 + 9.642857142857135e-02*G0_2_1 + 9.642857142857141e-02*G0_2_2;
  block[257] = 4.821428571428541e-02*G0_0_0 + 2.410714285714272e-02*G0_0_2 + 2.410714285714280e-02*G0_2_0;
  block[258] = -2.892857142857140e-01*G0_0_0 - 2.410714285714284e-01*G0_0_1 - 1.205357142857143e-01*G0_0_2 - 1.205357142857142e-01*G0_2_0 - 9.642857142857139e-02*G0_2_1;
  block[259] = -1.446428571428571e-01*G0_0_0 - 1.205357142857144e-01*G0_0_2 - 1.205357142857143e-01*G0_2_0 - 9.642857142857147e-02*G0_2_2;
  block[260] = -1.339285714285714e-02*G0_0_0 - 1.339285714285715e-02*G0_0_1 - 1.339285714285714e-02*G0_0_2 - 1.339285714285710e-02*G0_2_0 - 1.339285714285712e-02*G0_2_1 - 1.339285714285711e-02*G0_2_2;
  block[261] = 1.339285714285711e-02*G0_0_0 - 3.482142857142852e-02*G0_2_0;
  block[262] = 1.339285714285715e-02*G0_0_1 + 1.339285714285714e-02*G0_2_1;
  block[263] = 6.160714285714279e-02*G0_0_2 - 3.482142857142850e-02*G0_2_2;
  block[264] = -2.410714285714280e-02*G0_0_0 - 2.410714285714283e-02*G0_0_1 - 4.821428571428559e-02*G0_2_0 - 7.232142857142843e-02*G0_2_1;
  block[265] = -2.410714285714287e-02*G0_0_0 - 2.410714285714289e-02*G0_0_1 - 2.410714285714282e-02*G0_2_0 - 4.821428571428565e-02*G0_2_1;
  block[266] = 2.410714285714285e-02*G0_0_0 + 2.410714285714289e-02*G0_0_2 + 2.410714285714281e-02*G0_2_0 + 2.410714285714281e-02*G0_2_2;
  block[267] = 2.410714285714287e-02*G0_0_0 + 2.410714285714286e-02*G0_0_2 + 2.410714285714289e-02*G0_2_0 + 2.410714285714287e-02*G0_2_2;
  block[268] = 2.410714285714287e-02*G0_0_1 + 2.410714285714289e-02*G0_0_2 + 2.410714285714278e-02*G0_2_0 + 4.821428571428567e-02*G0_2_1 + 4.821428571428575e-02*G0_2_2;
  block[269] = 2.410714285714280e-02*G0_0_1 + 2.410714285714278e-02*G0_0_2 + 2.410714285714283e-02*G0_2_0 + 7.232142857142838e-02*G0_2_1 + 7.232142857142836e-02*G0_2_2;
  block[270] = 7.232142857142856e-02*G0_0_0 + 7.232142857142856e-02*G0_0_1 + 4.821428571428572e-02*G0_0_2 + 4.821428571428577e-02*G0_2_0 + 4.821428571428573e-02*G0_2_1 + 2.410714285714286e-02*G0_2_2;
  block[271] = -1.928571428571428e-01*G0_0_0 - 1.928571428571428e-01*G0_0_1 - 9.642857142857135e-02*G0_0_2 - 9.642857142857142e-02*G0_2_0 - 9.642857142857139e-02*G0_2_1 + 2.410714285714280e-02*G0_2_2;
  block[272] = -7.232142857142837e-02*G0_0_0 - 2.410714285714277e-02*G0_0_2 + 7.232142857142856e-02*G0_2_0 - 7.232142857142838e-02*G0_2_2;
  block[273] = 1.928571428571427e-01*G0_0_0 + 9.642857142857141e-02*G0_0_2 + 9.642857142857141e-02*G0_2_0 + 2.410714285714284e-01*G0_2_2;
  block[274] = -7.232142857142862e-02*G0_0_1 - 2.410714285714290e-02*G0_0_2 - 4.821428571428565e-02*G0_2_1 - 2.410714285714285e-02*G0_2_2;
  block[275] = 1.928571428571428e-01*G0_0_1 + 9.642857142857138e-02*G0_0_2 + 9.642857142857139e-02*G0_2_1 + 1.205357142857142e-01*G0_2_2;
  block[276] = 9.642857142857128e-02*G0_0_0 + 9.642857142857156e-02*G0_0_1 - 2.410714285714284e-02*G0_0_2 + 1.205357142857143e-01*G0_2_0 + 2.410714285714286e-01*G0_2_1 - 4.821428571428547e-02*G0_2_2;
  block[277] = -9.642857142857122e-02*G0_0_0 - 1.205357142857142e-01*G0_0_2 - 1.205357142857143e-01*G0_2_0 - 1.446428571428570e-01*G0_2_2;
  block[278] = -9.642857142857149e-02*G0_0_1 - 1.205357142857143e-01*G0_0_2 - 1.205357142857144e-01*G0_2_0 - 2.410714285714286e-01*G0_2_1 - 2.892857142857141e-01*G0_2_2;
  block[279] = 2.410714285714284e-02*G0_0_2 + 2.410714285714269e-02*G0_2_0 + 4.821428571428552e-02*G0_2_2;
  block[280] = -1.339285714285712e-02*G0_1_0 - 1.339285714285712e-02*G0_1_1 - 1.339285714285714e-02*G0_1_2 - 1.339285714285712e-02*G0_2_0 - 1.339285714285712e-02*G0_2_1 - 1.339285714285712e-02*G0_2_2;
  block[281] = 1.339285714285713e-02*G0_1_0 + 1.339285714285713e-02*G0_2_0;
  block[282] = -3.482142857142850e-02*G0_1_1 + 6.160714285714277e-02*G0_2_1;
  block[283] = -3.482142857142861e-02*G0_1_2 + 1.339285714285707e-02*G0_2_2;
  block[284] = -4.821428571428563e-02*G0_1_0 - 2.410714285714282e-02*G0_1_1 - 7.232142857142852e-02*G0_2_0 - 2.410714285714285e-02*G0_2_1;
  block[285] = 9.642857142857145e-02*G0_1_0 + 1.205357142857142e-01*G0_1_1 + 1.928571428571427e-01*G0_2_0 + 9.642857142857142e-02*G0_2_1;
  block[286] = -9.642857142857147e-02*G0_1_0 + 2.410714285714268e-02*G0_1_1 - 9.642857142857146e-02*G0_1_2 - 1.928571428571427e-01*G0_2_0 - 9.642857142857139e-02*G0_2_1 - 1.928571428571427e-01*G0_2_2;
  block[287] = 4.821428571428579e-02*G0_1_0 + 2.410714285714297e-02*G0_1_1 + 4.821428571428583e-02*G0_1_2 + 7.232142857142863e-02*G0_2_0 + 4.821428571428575e-02*G0_2_1 + 7.232142857142868e-02*G0_2_2;
  block[288] = 2.410714285714294e-02*G0_1_1 + 2.410714285714290e-02*G0_1_2 + 2.410714285714295e-02*G0_2_1 + 2.410714285714292e-02*G0_2_2;
  block[289] = 2.410714285714275e-02*G0_1_1 + 2.410714285714275e-02*G0_1_2 + 2.410714285714281e-02*G0_2_1 + 2.410714285714282e-02*G0_2_2;
  block[290] = 4.821428571428564e-02*G0_1_0 + 4.821428571428566e-02*G0_1_1 + 2.410714285714278e-02*G0_1_2 + 2.410714285714289e-02*G0_2_0 + 2.410714285714290e-02*G0_2_1;
  block[291] = 7.232142857142862e-02*G0_1_0 + 7.232142857142863e-02*G0_1_1 + 2.410714285714295e-02*G0_1_2 + 2.410714285714291e-02*G0_2_0 + 2.410714285714291e-02*G0_2_1;
  block[292] = -4.821428571428552e-02*G0_1_0 - 2.410714285714278e-02*G0_1_2 - 2.410714285714280e-02*G0_2_0 - 2.410714285714283e-02*G0_2_2;
  block[293] = -7.232142857142862e-02*G0_1_0 - 4.821428571428565e-02*G0_1_2 - 2.410714285714290e-02*G0_2_0 - 2.410714285714284e-02*G0_2_2;
  block[294] = 2.410714285714284e-01*G0_1_1 + 9.642857142857145e-02*G0_1_2 + 9.642857142857145e-02*G0_2_1 + 1.928571428571426e-01*G0_2_2;
  block[295] = -7.232142857142865e-02*G0_1_1 + 7.232142857142845e-02*G0_1_2 - 2.410714285714291e-02*G0_2_1 - 7.232142857142845e-02*G0_2_2;
  block[296] = 2.410714285714284e-01*G0_1_0 - 4.821428571428558e-02*G0_1_1 + 1.205357142857143e-01*G0_1_2 + 9.642857142857134e-02*G0_2_0 - 2.410714285714292e-02*G0_2_1 + 9.642857142857141e-02*G0_2_2;
  block[297] = -2.410714285714283e-01*G0_1_0 - 2.892857142857140e-01*G0_1_1 - 1.205357142857142e-01*G0_1_2 - 9.642857142857129e-02*G0_2_0 - 1.205357142857143e-01*G0_2_1;
  block[298] = 4.821428571428553e-02*G0_1_1 + 2.410714285714270e-02*G0_1_2 + 2.410714285714288e-02*G0_2_1;
  block[299] = -1.446428571428571e-01*G0_1_1 - 1.205357142857143e-01*G0_1_2 - 1.205357142857143e-01*G0_2_1 - 9.642857142857132e-02*G0_2_2;
  block[300] = -1.339285714285714e-02*G0_1_0 - 1.339285714285715e-02*G0_1_1 - 1.339285714285714e-02*G0_1_2 - 1.339285714285712e-02*G0_2_0 - 1.339285714285713e-02*G0_2_1 - 1.339285714285712e-02*G0_2_2;
  block[301] = 1.339285714285712e-02*G0_1_0 + 1.339285714285712e-02*G0_2_0;
  block[302] = 1.339285714285716e-02*G0_1_1 - 3.482142857142853e-02*G0_2_1;
  block[303] = 6.160714285714282e-02*G0_1_2 - 3.482142857142850e-02*G0_2_2;
  block[304] = -2.410714285714283e-02*G0_1_0 - 2.410714285714285e-02*G0_1_1 - 4.821428571428558e-02*G0_2_0 - 2.410714285714282e-02*G0_2_1;
  block[305] = -2.410714285714287e-02*G0_1_0 - 2.410714285714288e-02*G0_1_1 - 7.232142857142848e-02*G0_2_0 - 4.821428571428561e-02*G0_2_1;
  block[306] = 2.410714285714284e-02*G0_1_0 + 2.410714285714288e-02*G0_1_2 + 7.232142857142845e-02*G0_2_0 + 2.410714285714287e-02*G0_2_1 + 7.232142857142847e-02*G0_2_2;
  block[307] = 2.410714285714285e-02*G0_1_0 + 2.410714285714285e-02*G0_1_2 + 4.821428571428568e-02*G0_2_0 + 2.410714285714277e-02*G0_2_1 + 4.821428571428568e-02*G0_2_2;
  block[308] = 2.410714285714284e-02*G0_1_1 + 2.410714285714287e-02*G0_1_2 + 2.410714285714286e-02*G0_2_1 + 2.410714285714290e-02*G0_2_2;
  block[309] = 2.410714285714283e-02*G0_1_1 + 2.410714285714280e-02*G0_1_2 + 2.410714285714278e-02*G0_2_1 + 2.410714285714276e-02*G0_2_2;
  block[310] = 7.232142857142855e-02*G0_1_0 + 7.232142857142856e-02*G0_1_1 + 4.821428571428573e-02*G0_1_2 + 4.821428571428576e-02*G0_2_0 + 4.821428571428574e-02*G0_2_1 + 2.410714285714292e-02*G0_2_2;
  block[311] = -1.928571428571429e-01*G0_1_0 - 1.928571428571428e-01*G0_1_1 - 9.642857142857139e-02*G0_1_2 - 9.642857142857142e-02*G0_2_0 - 9.642857142857136e-02*G0_2_1 + 2.410714285714275e-02*G0_2_2;
  block[312] = -7.232142857142844e-02*G0_1_0 - 2.410714285714280e-02*G0_1_2 - 4.821428571428556e-02*G0_2_0 - 2.410714285714279e-02*G0_2_2;
  block[313] = 1.928571428571428e-01*G0_1_0 + 9.642857142857139e-02*G0_1_2 + 9.642857142857138e-02*G0_2_0 + 1.205357142857142e-01*G0_2_2;
  block[314] = -7.232142857142865e-02*G0_1_1 - 2.410714285714291e-02*G0_1_2 + 7.232142857142845e-02*G0_2_1 - 7.232142857142845e-02*G0_2_2;
  block[315] = 1.928571428571428e-01*G0_1_1 + 9.642857142857136e-02*G0_1_2 + 9.642857142857136e-02*G0_2_1 + 2.410714285714284e-01*G0_2_2;
  block[316] = 9.642857142857131e-02*G0_1_0 + 9.642857142857153e-02*G0_1_1 - 2.410714285714286e-02*G0_1_2 + 2.410714285714284e-01*G0_2_0 + 1.205357142857145e-01*G0_2_1 - 4.821428571428546e-02*G0_2_2;
  block[317] = -9.642857142857127e-02*G0_1_0 - 1.205357142857142e-01*G0_1_2 - 2.410714285714283e-01*G0_2_0 - 1.205357142857142e-01*G0_2_1 - 2.892857142857140e-01*G0_2_2;
  block[318] = -9.642857142857146e-02*G0_1_1 - 1.205357142857143e-01*G0_1_2 - 1.205357142857144e-01*G0_2_1 - 1.446428571428571e-01*G0_2_2;
  block[319] = 2.410714285714286e-02*G0_1_2 + 2.410714285714276e-02*G0_2_1 + 4.821428571428545e-02*G0_2_2;
  block[320] = -3.214285714285713e-02*G0_0_0 - 3.214285714285716e-02*G0_0_1 - 3.214285714285715e-02*G0_0_2 - 3.214285714285717e-02*G0_1_0 - 3.214285714285720e-02*G0_1_1 - 3.214285714285717e-02*G0_1_2 - 3.214285714285722e-02*G0_2_0 - 3.214285714285725e-02*G0_2_1 - 3.214285714285724e-02*G0_2_2;
  block[321] = 3.214285714285707e-02*G0_0_0 - 1.607142857142858e-02*G0_1_0 - 1.607142857142858e-02*G0_2_0;
  block[322] = -1.607142857142853e-02*G0_0_1 + 3.214285714285706e-02*G0_1_1 - 1.607142857142856e-02*G0_2_1;
  block[323] = -1.607142857142860e-02*G0_0_2 - 1.607142857142853e-02*G0_1_2 + 3.214285714285701e-02*G0_2_2;
  block[324] = -4.821428571428559e-02*G0_0_0 - 2.410714285714286e-02*G0_0_1 + 1.205357142857143e-01*G0_1_0 + 9.642857142857141e-02*G0_1_1 + 2.410714285714285e-01*G0_2_0 + 9.642857142857142e-02*G0_2_1;
  block[325] = 9.642857142857142e-02*G0_0_0 + 1.205357142857143e-01*G0_0_1 - 2.410714285714285e-02*G0_1_0 - 4.821428571428551e-02*G0_1_1 + 9.642857142857147e-02*G0_2_0 + 2.410714285714286e-01*G0_2_1;
  block[326] = -9.642857142857135e-02*G0_0_0 + 2.410714285714266e-02*G0_0_1 - 9.642857142857135e-02*G0_0_2 + 2.410714285714299e-02*G0_1_0 + 2.410714285714296e-02*G0_1_2 - 9.642857142857128e-02*G0_2_0 + 2.410714285714265e-02*G0_2_1 - 9.642857142857134e-02*G0_2_2;
  block[327] = 4.821428571428599e-02*G0_0_0 + 2.410714285714306e-02*G0_0_1 + 4.821428571428606e-02*G0_0_2 + 2.410714285714311e-02*G0_1_0 + 2.410714285714313e-02*G0_1_2 + 4.821428571428611e-02*G0_2_0 + 2.410714285714327e-02*G0_2_1 + 4.821428571428622e-02*G0_2_2;
  block[328] = 2.410714285714307e-02*G0_0_1 + 2.410714285714311e-02*G0_0_2 + 2.410714285714299e-02*G0_1_0 + 4.821428571428590e-02*G0_1_1 + 4.821428571428601e-02*G0_1_2 + 2.410714285714312e-02*G0_2_0 + 4.821428571428604e-02*G0_2_1 + 4.821428571428604e-02*G0_2_2;
  block[329] = 2.410714285714274e-02*G0_0_1 + 2.410714285714271e-02*G0_0_2 + 2.410714285714275e-02*G0_1_0 - 9.642857142857149e-02*G0_1_1 - 9.642857142857149e-02*G0_1_2 + 2.410714285714266e-02*G0_2_0 - 9.642857142857157e-02*G0_2_1 - 9.642857142857156e-02*G0_2_2;
  block[330] = 4.821428571428585e-02*G0_0_0 + 4.821428571428581e-02*G0_0_1 + 2.410714285714287e-02*G0_0_2 + 4.821428571428589e-02*G0_1_0 + 4.821428571428583e-02*G0_1_1 + 2.410714285714295e-02*G0_1_2 + 2.410714285714296e-02*G0_2_0 + 2.410714285714295e-02*G0_2_1;
  block[331] = -9.642857142857136e-02*G0_0_0 - 9.642857142857131e-02*G0_0_1 + 2.410714285714288e-02*G0_0_2 - 9.642857142857150e-02*G0_1_0 - 9.642857142857149e-02*G0_1_1 + 2.410714285714277e-02*G0_1_2 + 2.410714285714288e-02*G0_2_0 + 2.410714285714287e-02*G0_2_1;
  block[332] = -4.821428571428553e-02*G0_0_0 - 2.410714285714281e-02*G0_0_2 + 2.410714285714284e-01*G0_1_0 + 9.642857142857136e-02*G0_1_2 + 1.205357142857144e-01*G0_2_0 + 9.642857142857138e-02*G0_2_2;
  block[333] = 9.642857142857127e-02*G0_0_0 + 1.205357142857143e-01*G0_0_2 + 9.642857142857157e-02*G0_1_0 + 2.410714285714286e-01*G0_1_2 - 2.410714285714283e-02*G0_2_0 - 4.821428571428549e-02*G0_2_2;
  block[334] = 2.410714285714284e-01*G0_0_1 + 9.642857142857134e-02*G0_0_2 - 4.821428571428558e-02*G0_1_1 - 2.410714285714292e-02*G0_1_2 + 1.205357142857143e-01*G0_2_1 + 9.642857142857139e-02*G0_2_2;
  block[335] = 9.642857142857129e-02*G0_0_1 + 2.410714285714284e-01*G0_0_2 + 9.642857142857153e-02*G0_1_1 + 1.205357142857145e-01*G0_1_2 - 2.410714285714286e-02*G0_2_1 - 4.821428571428545e-02*G0_2_2;
  block[336] = 5.785714285714278e-01*G0_0_0 + 2.892857142857141e-01*G0_0_1 + 2.892857142857140e-01*G0_0_2 + 2.892857142857141e-01*G0_1_0 + 5.785714285714283e-01*G0_1_1 + 2.892857142857141e-01*G0_1_2 + 2.892857142857140e-01*G0_2_0 + 2.892857142857141e-01*G0_2_1 + 5.785714285714282e-01*G0_2_2;
  block[337] = -5.785714285714277e-01*G0_0_0 - 2.892857142857140e-01*G0_0_1 - 2.892857142857143e-01*G0_0_2 - 2.892857142857141e-01*G0_1_0 - 1.446428571428574e-01*G0_1_2 - 2.892857142857140e-01*G0_2_0 - 1.446428571428571e-01*G0_2_1;
  block[338] = -2.892857142857140e-01*G0_0_1 - 1.446428571428574e-01*G0_0_2 - 2.892857142857144e-01*G0_1_0 - 5.785714285714283e-01*G0_1_1 - 2.892857142857146e-01*G0_1_2 - 1.446428571428574e-01*G0_2_0 - 2.892857142857143e-01*G0_2_1;
  block[339] = -1.446428571428573e-01*G0_0_1 - 2.892857142857140e-01*G0_0_2 - 1.446428571428575e-01*G0_1_0 - 2.892857142857141e-01*G0_1_2 - 2.892857142857146e-01*G0_2_0 - 2.892857142857145e-01*G0_2_1 - 5.785714285714283e-01*G0_2_2;
  block[340] = 3.214285714285711e-02*G0_0_0 + 3.214285714285714e-02*G0_0_1 + 3.214285714285713e-02*G0_0_2 + 4.821428571428565e-02*G0_1_0 + 4.821428571428565e-02*G0_1_1 + 4.821428571428570e-02*G0_1_2 + 4.821428571428561e-02*G0_2_0 + 4.821428571428563e-02*G0_2_1 + 4.821428571428559e-02*G0_2_2;
  block[341] = -3.214285714285706e-02*G0_0_0;
  block[342] = 1.607142857142854e-02*G0_0_1 + 4.821428571428560e-02*G0_1_1;
  block[343] = 1.607142857142863e-02*G0_0_2 + 4.821428571428559e-02*G0_2_2;
  block[344] = 4.821428571428554e-02*G0_0_0 + 2.410714285714283e-02*G0_0_1 + 2.410714285714290e-02*G0_1_0;
  block[345] = -9.642857142857135e-02*G0_0_0 - 1.205357142857142e-01*G0_0_1 - 1.205357142857144e-01*G0_1_0 - 1.446428571428571e-01*G0_1_1;
  block[346] = 9.642857142857128e-02*G0_0_0 - 2.410714285714270e-02*G0_0_1 + 9.642857142857132e-02*G0_0_2 + 1.205357142857144e-01*G0_1_0 - 4.821428571428545e-02*G0_1_1 + 1.205357142857144e-01*G0_1_2 + 1.205357142857141e-01*G0_2_1;
  block[347] = -4.821428571428595e-02*G0_0_0 - 2.410714285714303e-02*G0_0_1 - 4.821428571428603e-02*G0_0_2 - 1.687500000000001e-01*G0_1_0 - 4.821428571428590e-02*G0_1_1 - 1.687500000000001e-01*G0_1_2 - 2.892857142857141e-01*G0_2_0 - 1.687499999999997e-01*G0_2_1 - 2.892857142857140e-01*G0_2_2;
  block[348] = -2.410714285714307e-02*G0_0_1 - 2.410714285714310e-02*G0_0_2 - 2.410714285714296e-02*G0_1_0 - 1.446428571428572e-01*G0_1_1 - 1.446428571428571e-01*G0_1_2 - 2.410714285714289e-02*G0_2_0 - 1.446428571428571e-01*G0_2_1 - 1.446428571428572e-01*G0_2_2;
  block[349] = -2.410714285714271e-02*G0_0_1 - 2.410714285714268e-02*G0_0_2 - 2.410714285714269e-02*G0_1_0 - 2.410714285714274e-02*G0_2_0;
  block[350] = -4.821428571428581e-02*G0_0_0 - 4.821428571428581e-02*G0_0_1 - 2.410714285714287e-02*G0_0_2 - 2.892857142857139e-01*G0_1_0 - 2.892857142857140e-01*G0_1_1 - 1.687499999999998e-01*G0_1_2 - 1.687500000000000e-01*G0_2_0 - 1.687500000000000e-01*G0_2_1 - 4.821428571428578e-02*G0_2_2;
  block[351] = 9.642857142857131e-02*G0_0_0 + 9.642857142857125e-02*G0_0_1 - 2.410714285714291e-02*G0_0_2 + 1.205357142857140e-01*G0_1_2 + 1.205357142857142e-01*G0_2_0 + 1.205357142857142e-01*G0_2_1 - 4.821428571428554e-02*G0_2_2;
  block[352] = 4.821428571428541e-02*G0_0_0 + 2.410714285714280e-02*G0_0_2 + 2.410714285714272e-02*G0_2_0;
  block[353] = -9.642857142857121e-02*G0_0_0 - 1.205357142857143e-01*G0_0_2 - 1.205357142857142e-01*G0_2_0 - 1.446428571428570e-01*G0_2_2;
  block[354] = -2.410714285714284e-01*G0_0_1 - 9.642857142857129e-02*G0_0_2 - 2.892857142857140e-01*G0_1_1 - 1.205357142857143e-01*G0_1_2 - 1.205357142857142e-01*G0_2_1;
  block[355] = -9.642857142857127e-02*G0_0_1 - 2.410714285714283e-01*G0_0_2 - 1.205357142857142e-01*G0_1_2 - 1.205357142857142e-01*G0_2_1 - 2.892857142857140e-01*G0_2_2;
  block[356] = -5.785714285714277e-01*G0_0_0 - 2.892857142857141e-01*G0_0_1 - 2.892857142857140e-01*G0_0_2 - 2.892857142857140e-01*G0_1_0 - 1.446428571428571e-01*G0_1_2 - 2.892857142857142e-01*G0_2_0 - 1.446428571428574e-01*G0_2_1;
  block[357] = 5.785714285714276e-01*G0_0_0 + 2.892857142857140e-01*G0_0_1 + 2.892857142857141e-01*G0_0_2 + 2.892857142857140e-01*G0_1_0 + 5.785714285714281e-01*G0_1_1 + 2.892857142857141e-01*G0_1_2 + 2.892857142857141e-01*G0_2_0 + 2.892857142857141e-01*G0_2_1 + 5.785714285714278e-01*G0_2_2;
  block[358] = 2.892857142857141e-01*G0_0_1 + 1.446428571428574e-01*G0_0_2 + 2.892857142857141e-01*G0_1_0 + 1.446428571428573e-01*G0_1_2 + 1.446428571428573e-01*G0_2_0 + 1.446428571428573e-01*G0_2_1 + 2.892857142857142e-01*G0_2_2;
  block[359] = 1.446428571428572e-01*G0_0_1 + 2.892857142857140e-01*G0_0_2 + 1.446428571428572e-01*G0_1_0 + 2.892857142857142e-01*G0_1_1 + 1.446428571428571e-01*G0_1_2 + 2.892857142857141e-01*G0_2_0 + 1.446428571428573e-01*G0_2_1;
  block[360] = 4.821428571428571e-02*G0_0_0 + 4.821428571428572e-02*G0_0_1 + 4.821428571428574e-02*G0_0_2 + 3.214285714285718e-02*G0_1_0 + 3.214285714285722e-02*G0_1_1 + 3.214285714285718e-02*G0_1_2 + 4.821428571428574e-02*G0_2_0 + 4.821428571428577e-02*G0_2_1 + 4.821428571428575e-02*G0_2_2;
  block[361] = 4.821428571428563e-02*G0_0_0 + 1.607142857142857e-02*G0_1_0;
  block[362] = -3.214285714285704e-02*G0_1_1;
  block[363] = 1.607142857142852e-02*G0_1_2 + 4.821428571428557e-02*G0_2_2;
  block[364] = -1.446428571428570e-01*G0_0_0 - 1.205357142857143e-01*G0_0_1 - 1.205357142857144e-01*G0_1_0 - 9.642857142857145e-02*G0_1_1;
  block[365] = 2.410714285714260e-02*G0_0_1 + 2.410714285714282e-02*G0_1_0 + 4.821428571428544e-02*G0_1_1;
  block[366] = -2.410714285714286e-02*G0_0_1 - 2.410714285714296e-02*G0_1_0 - 2.410714285714292e-02*G0_1_2 - 2.410714285714283e-02*G0_2_1;
  block[367] = -1.446428571428572e-01*G0_0_0 - 2.410714285714300e-02*G0_0_1 - 1.446428571428572e-01*G0_0_2 - 2.410714285714313e-02*G0_1_0 - 2.410714285714314e-02*G0_1_2 - 1.446428571428573e-01*G0_2_0 - 2.410714285714292e-02*G0_2_1 - 1.446428571428573e-01*G0_2_2;
  block[368] = -4.821428571428580e-02*G0_0_0 - 1.687500000000001e-01*G0_0_1 - 1.687500000000001e-01*G0_0_2 - 2.410714285714301e-02*G0_1_0 - 4.821428571428594e-02*G0_1_1 - 4.821428571428604e-02*G0_1_2 - 1.687499999999999e-01*G0_2_0 - 2.892857142857142e-01*G0_2_1 - 2.892857142857143e-01*G0_2_2;
  block[369] = -4.821428571428547e-02*G0_0_0 + 1.205357142857143e-01*G0_0_1 + 1.205357142857143e-01*G0_0_2 - 2.410714285714273e-02*G0_1_0 + 9.642857142857153e-02*G0_1_1 + 9.642857142857154e-02*G0_1_2 + 1.205357142857142e-01*G0_2_0;
  block[370] = -2.892857142857139e-01*G0_0_0 - 2.892857142857139e-01*G0_0_1 - 1.687499999999999e-01*G0_0_2 - 4.821428571428591e-02*G0_1_0 - 4.821428571428587e-02*G0_1_1 - 2.410714285714298e-02*G0_1_2 - 1.687500000000001e-01*G0_2_0 - 1.687500000000001e-01*G0_2_1 - 4.821428571428590e-02*G0_2_2;
  block[371] = 1.205357142857141e-01*G0_0_2 + 9.642857142857145e-02*G0_1_0 + 9.642857142857145e-02*G0_1_1 - 2.410714285714275e-02*G0_1_2 + 1.205357142857143e-01*G0_2_0 + 1.205357142857143e-01*G0_2_1 - 4.821428571428551e-02*G0_2_2;
  block[372] = -2.892857142857140e-01*G0_0_0 - 1.205357142857142e-01*G0_0_2 - 2.410714285714284e-01*G0_1_0 - 9.642857142857139e-02*G0_1_2 - 1.205357142857143e-01*G0_2_0;
  block[373] = -1.205357142857143e-01*G0_0_2 - 9.642857142857150e-02*G0_1_0 - 2.410714285714285e-01*G0_1_2 - 1.205357142857143e-01*G0_2_0 - 2.892857142857141e-01*G0_2_2;
  block[374] = 4.821428571428552e-02*G0_1_1 + 2.410714285714288e-02*G0_1_2 + 2.410714285714271e-02*G0_2_1;
  block[375] = -9.642857142857147e-02*G0_1_1 - 1.205357142857144e-01*G0_1_2 - 1.205357142857143e-01*G0_2_1 - 1.446428571428571e-01*G0_2_2;
  block[376] = -2.892857142857144e-01*G0_0_1 - 1.446428571428574e-01*G0_0_2 - 2.892857142857140e-01*G0_1_0 - 5.785714285714283e-01*G0_1_1 - 2.892857142857143e-01*G0_1_2 - 1.446428571428574e-01*G0_2_0 - 2.892857142857146e-01*G0_2_1;
  block[377] = 2.892857142857141e-01*G0_0_1 + 1.446428571428573e-01*G0_0_2 + 2.892857142857141e-01*G0_1_0 + 1.446428571428573e-01*G0_1_2 + 1.446428571428574e-01*G0_2_0 + 1.446428571428573e-01*G0_2_1 + 2.892857142857142e-01*G0_2_2;
  block[378] = 5.785714285714281e-01*G0_0_0 + 2.892857142857145e-01*G0_0_1 + 2.892857142857145e-01*G0_0_2 + 2.892857142857145e-01*G0_1_0 + 5.785714285714283e-01*G0_1_1 + 2.892857142857145e-01*G0_1_2 + 2.892857142857145e-01*G0_2_0 + 2.892857142857145e-01*G0_2_1 + 5.785714285714283e-01*G0_2_2;
  block[379] = 2.892857142857142e-01*G0_0_0 + 1.446428571428575e-01*G0_0_1 + 1.446428571428574e-01*G0_0_2 + 1.446428571428575e-01*G0_1_0 + 2.892857142857143e-01*G0_1_2 + 1.446428571428574e-01*G0_2_0 + 2.892857142857142e-01*G0_2_1;
  block[380] = 4.821428571428570e-02*G0_0_0 + 4.821428571428570e-02*G0_0_1 + 4.821428571428567e-02*G0_0_2 + 4.821428571428572e-02*G0_1_0 + 4.821428571428572e-02*G0_1_1 + 4.821428571428573e-02*G0_1_2 + 3.214285714285721e-02*G0_2_0 + 3.214285714285723e-02*G0_2_1 + 3.214285714285722e-02*G0_2_2;
  block[381] = 4.821428571428565e-02*G0_0_0 + 1.607142857142856e-02*G0_2_0;
  block[382] = 4.821428571428561e-02*G0_1_1 + 1.607142857142856e-02*G0_2_1;
  block[383] = -3.214285714285701e-02*G0_2_2;
  block[384] = -2.892857142857141e-01*G0_0_0 - 1.205357142857143e-01*G0_0_1 - 1.205357142857143e-01*G0_1_0 - 2.410714285714285e-01*G0_2_0 - 9.642857142857149e-02*G0_2_1;
  block[385] = -1.205357142857145e-01*G0_0_1 - 1.205357142857144e-01*G0_1_0 - 2.892857142857141e-01*G0_1_1 - 9.642857142857145e-02*G0_2_0 - 2.410714285714285e-01*G0_2_1;
  block[386] = 1.205357142857140e-01*G0_0_1 + 1.205357142857143e-01*G0_1_0 - 4.821428571428553e-02*G0_1_1 + 1.205357142857143e-01*G0_1_2 + 9.642857142857122e-02*G0_2_0 - 2.410714285714268e-02*G0_2_1 + 9.642857142857129e-02*G0_2_2;
  block[387] = -2.892857142857141e-01*G0_0_0 - 1.687499999999998e-01*G0_0_1 - 2.892857142857142e-01*G0_0_2 - 1.687500000000001e-01*G0_1_0 - 4.821428571428588e-02*G0_1_1 - 1.687500000000002e-01*G0_1_2 - 4.821428571428608e-02*G0_2_0 - 2.410714285714323e-02*G0_2_1 - 4.821428571428620e-02*G0_2_2;
  block[388] = -4.821428571428584e-02*G0_0_0 - 1.687500000000001e-01*G0_0_1 - 1.687500000000001e-01*G0_0_2 - 1.687500000000000e-01*G0_1_0 - 2.892857142857143e-01*G0_1_1 - 2.892857142857141e-01*G0_1_2 - 2.410714285714311e-02*G0_2_0 - 4.821428571428606e-02*G0_2_1 - 4.821428571428606e-02*G0_2_2;
  block[389] = -4.821428571428545e-02*G0_0_0 + 1.205357142857144e-01*G0_0_1 + 1.205357142857144e-01*G0_0_2 + 1.205357142857143e-01*G0_1_0 - 2.410714285714265e-02*G0_2_0 + 9.642857142857165e-02*G0_2_1 + 9.642857142857164e-02*G0_2_2;
  block[390] = -1.446428571428570e-01*G0_0_0 - 1.446428571428570e-01*G0_0_1 - 2.410714285714288e-02*G0_0_2 - 1.446428571428571e-01*G0_1_0 - 1.446428571428571e-01*G0_1_1 - 2.410714285714291e-02*G0_1_2 - 2.410714285714294e-02*G0_2_0 - 2.410714285714293e-02*G0_2_1;
  block[391] = -2.410714285714284e-02*G0_0_2 - 2.410714285714286e-02*G0_1_2 - 2.410714285714289e-02*G0_2_0 - 2.410714285714288e-02*G0_2_1;
  block[392] = -1.446428571428571e-01*G0_0_0 - 1.205357142857143e-01*G0_0_2 - 1.205357142857144e-01*G0_2_0 - 9.642857142857147e-02*G0_2_2;
  block[393] = 2.410714285714268e-02*G0_0_2 + 2.410714285714283e-02*G0_2_0 + 4.821428571428552e-02*G0_2_2;
  block[394] = -1.446428571428571e-01*G0_1_1 - 1.205357142857143e-01*G0_1_2 - 1.205357142857143e-01*G0_2_1 - 9.642857142857134e-02*G0_2_2;
  block[395] = 2.410714285714275e-02*G0_1_2 + 2.410714285714287e-02*G0_2_1 + 4.821428571428544e-02*G0_2_2;
  block[396] = -1.446428571428574e-01*G0_0_1 - 2.892857142857146e-01*G0_0_2 - 1.446428571428573e-01*G0_1_0 - 2.892857142857145e-01*G0_1_2 - 2.892857142857140e-01*G0_2_0 - 2.892857142857141e-01*G0_2_1 - 5.785714285714283e-01*G0_2_2;
  block[397] = 1.446428571428572e-01*G0_0_1 + 2.892857142857141e-01*G0_0_2 + 1.446428571428572e-01*G0_1_0 + 2.892857142857141e-01*G0_1_1 + 1.446428571428573e-01*G0_1_2 + 2.892857142857140e-01*G0_2_0 + 1.446428571428571e-01*G0_2_1;
  block[398] = 2.892857142857142e-01*G0_0_0 + 1.446428571428575e-01*G0_0_1 + 1.446428571428574e-01*G0_0_2 + 1.446428571428575e-01*G0_1_0 + 2.892857142857142e-01*G0_1_2 + 1.446428571428574e-01*G0_2_0 + 2.892857142857143e-01*G0_2_1;
  block[399] = 5.785714285714281e-01*G0_0_0 + 2.892857142857145e-01*G0_0_1 + 2.892857142857146e-01*G0_0_2 + 2.892857142857145e-01*G0_1_0 + 5.785714285714281e-01*G0_1_1 + 2.892857142857145e-01*G0_1_2 + 2.892857142857146e-01*G0_2_0 + 2.892857142857145e-01*G0_2_1 + 5.785714285714283e-01*G0_2_2;
}

// No contribution from the boundary
bool BilinearForm::boundary_contribution() const { return false; }

void BilinearForm::eval(real block[], const AffineMap& map, unsigned int facet) const {}

/// This class contains the form to be evaluated, including
/// contributions from the interior and boundary of the domain.

class LinearForm : public dolfin::LinearForm
{
public:

  class TestElement;

  class FunctionElement_0;

  LinearForm(Function& w0);
  

  bool interior_contribution() const;

  void eval(real block[], const AffineMap& map) const;

  bool boundary_contribution() const;

  void eval(real block[], const AffineMap& map, unsigned int facet) const;

};

class LinearForm::TestElement : public dolfin::FiniteElement
{
public:

  TestElement() : dolfin::FiniteElement(), tensordims(0), subelements(0)
  {
    // Element is scalar, don't need to initialize tensordims

    // Element is simple, don't need to initialize subelements
  }

  ~TestElement()
  {
    if ( tensordims ) delete [] tensordims;
    if ( subelements )
    {
      for (unsigned int i = 0; i < elementdim(); i++)
        delete subelements[i];
      delete [] subelements;
    }
  }

  inline unsigned int spacedim() const
  {
    return 20;
  }

  inline unsigned int shapedim() const
  {
    return 3;
  }

  inline unsigned int tensordim(unsigned int i) const
  {
    dolfin_error("Element is scalar.");
    return 0;
  }

  inline unsigned int elementdim() const
  {
    return 1;
  }

  inline unsigned int rank() const
  {
    return 0;
  }

  void nodemap(int nodes[], const Cell& cell, const Mesh& mesh) const
  {
    static unsigned int edge_reordering_0[2][2] = {{0, 1}, {1, 0}};
    nodes[0] = cell.entities(0)[0];
    nodes[1] = cell.entities(0)[1];
    nodes[2] = cell.entities(0)[2];
    nodes[3] = cell.entities(0)[3];
    int alignment = cell.edgeAlignment(0);
    int offset = mesh.topology().size(0);
    nodes[4] = offset + 2*cell.entities(1)[0] + edge_reordering_0[alignment][0];
    nodes[5] = offset + 2*cell.entities(1)[0] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(1);
    nodes[6] = offset + 2*cell.entities(1)[1] + edge_reordering_0[alignment][0];
    nodes[7] = offset + 2*cell.entities(1)[1] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(2);
    nodes[8] = offset + 2*cell.entities(1)[2] + edge_reordering_0[alignment][0];
    nodes[9] = offset + 2*cell.entities(1)[2] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(3);
    nodes[10] = offset + 2*cell.entities(1)[3] + edge_reordering_0[alignment][0];
    nodes[11] = offset + 2*cell.entities(1)[3] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(4);
    nodes[12] = offset + 2*cell.entities(1)[4] + edge_reordering_0[alignment][0];
    nodes[13] = offset + 2*cell.entities(1)[4] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(5);
    nodes[14] = offset + 2*cell.entities(1)[5] + edge_reordering_0[alignment][0];
    nodes[15] = offset + 2*cell.entities(1)[5] + edge_reordering_0[alignment][1];
    offset = offset + 2*mesh.topology().size(1);
    nodes[16] = offset + cell.entities(2)[0];
    nodes[17] = offset + cell.entities(2)[1];
    nodes[18] = offset + cell.entities(2)[2];
    nodes[19] = offset + cell.entities(2)[3];
  }

  void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
  {
    points[0] = map(0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
    points[1] = map(1.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
    points[2] = map(0.000000000000000e+00, 1.000000000000000e+00, 0.000000000000000e+00);
    points[3] = map(0.000000000000000e+00, 0.000000000000000e+00, 1.000000000000000e+00);
    points[4] = map(6.666666666666667e-01, 3.333333333333333e-01, 0.000000000000000e+00);
    points[5] = map(3.333333333333334e-01, 6.666666666666666e-01, 0.000000000000000e+00);
    points[6] = map(0.000000000000000e+00, 6.666666666666667e-01, 0.000000000000000e+00);
    points[7] = map(0.000000000000000e+00, 3.333333333333334e-01, 0.000000000000000e+00);
    points[8] = map(3.333333333333333e-01, 0.000000000000000e+00, 0.000000000000000e+00);
    points[9] = map(6.666666666666666e-01, 0.000000000000000e+00, 0.000000000000000e+00);
    points[10] = map(0.000000000000000e+00, 0.000000000000000e+00, 3.333333333333333e-01);
    points[11] = map(0.000000000000000e+00, 0.000000000000000e+00, 6.666666666666666e-01);
    points[12] = map(6.666666666666667e-01, 0.000000000000000e+00, 3.333333333333333e-01);
    points[13] = map(3.333333333333334e-01, 0.000000000000000e+00, 6.666666666666666e-01);
    points[14] = map(0.000000000000000e+00, 6.666666666666667e-01, 3.333333333333333e-01);
    points[15] = map(0.000000000000000e+00, 3.333333333333334e-01, 6.666666666666666e-01);
    points[16] = map(3.333333333333334e-01, 3.333333333333333e-01, 3.333333333333333e-01);
    points[17] = map(0.000000000000000e+00, 3.333333333333334e-01, 3.333333333333333e-01);
    points[18] = map(3.333333333333333e-01, 0.000000000000000e+00, 3.333333333333334e-01);
    points[19] = map(3.333333333333333e-01, 3.333333333333333e-01, 0.000000000000000e+00);
    components[0] = 0;
    components[1] = 0;
    components[2] = 0;
    components[3] = 0;
    components[4] = 0;
    components[5] = 0;
    components[6] = 0;
    components[7] = 0;
    components[8] = 0;
    components[9] = 0;
    components[10] = 0;
    components[11] = 0;
    components[12] = 0;
    components[13] = 0;
    components[14] = 0;
    components[15] = 0;
    components[16] = 0;
    components[17] = 0;
    components[18] = 0;
    components[19] = 0;
  }

  void vertexeval(uint vertex_nodes[], unsigned int vertex, const Mesh& mesh) const
  {
    // FIXME: Temporary fix for Lagrange elements
    vertex_nodes[0] = vertex;
  }

  const FiniteElement& operator[] (unsigned int i) const
  {
    return *this;
  }

  FiniteElement& operator[] (unsigned int i)
  {
    return *this;
  }

  FiniteElementSpec spec() const
  {
    FiniteElementSpec s("Lagrange", "tetrahedron", 3);
    return s;
  }
  
private:

  unsigned int* tensordims;
  FiniteElement** subelements;

};

class LinearForm::FunctionElement_0 : public dolfin::FiniteElement
{
public:

  FunctionElement_0() : dolfin::FiniteElement(), tensordims(0), subelements(0)
  {
    // Element is scalar, don't need to initialize tensordims

    // Element is simple, don't need to initialize subelements
  }

  ~FunctionElement_0()
  {
    if ( tensordims ) delete [] tensordims;
    if ( subelements )
    {
      for (unsigned int i = 0; i < elementdim(); i++)
        delete subelements[i];
      delete [] subelements;
    }
  }

  inline unsigned int spacedim() const
  {
    return 20;
  }

  inline unsigned int shapedim() const
  {
    return 3;
  }

  inline unsigned int tensordim(unsigned int i) const
  {
    dolfin_error("Element is scalar.");
    return 0;
  }

  inline unsigned int elementdim() const
  {
    return 1;
  }

  inline unsigned int rank() const
  {
    return 0;
  }

  void nodemap(int nodes[], const Cell& cell, const Mesh& mesh) const
  {
    static unsigned int edge_reordering_0[2][2] = {{0, 1}, {1, 0}};
    nodes[0] = cell.entities(0)[0];
    nodes[1] = cell.entities(0)[1];
    nodes[2] = cell.entities(0)[2];
    nodes[3] = cell.entities(0)[3];
    int alignment = cell.edgeAlignment(0);
    int offset = mesh.topology().size(0);
    nodes[4] = offset + 2*cell.entities(1)[0] + edge_reordering_0[alignment][0];
    nodes[5] = offset + 2*cell.entities(1)[0] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(1);
    nodes[6] = offset + 2*cell.entities(1)[1] + edge_reordering_0[alignment][0];
    nodes[7] = offset + 2*cell.entities(1)[1] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(2);
    nodes[8] = offset + 2*cell.entities(1)[2] + edge_reordering_0[alignment][0];
    nodes[9] = offset + 2*cell.entities(1)[2] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(3);
    nodes[10] = offset + 2*cell.entities(1)[3] + edge_reordering_0[alignment][0];
    nodes[11] = offset + 2*cell.entities(1)[3] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(4);
    nodes[12] = offset + 2*cell.entities(1)[4] + edge_reordering_0[alignment][0];
    nodes[13] = offset + 2*cell.entities(1)[4] + edge_reordering_0[alignment][1];
    alignment = cell.edgeAlignment(5);
    nodes[14] = offset + 2*cell.entities(1)[5] + edge_reordering_0[alignment][0];
    nodes[15] = offset + 2*cell.entities(1)[5] + edge_reordering_0[alignment][1];
    offset = offset + 2*mesh.topology().size(1);
    nodes[16] = offset + cell.entities(2)[0];
    nodes[17] = offset + cell.entities(2)[1];
    nodes[18] = offset + cell.entities(2)[2];
    nodes[19] = offset + cell.entities(2)[3];
  }

  void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
  {
    points[0] = map(0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
    points[1] = map(1.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
    points[2] = map(0.000000000000000e+00, 1.000000000000000e+00, 0.000000000000000e+00);
    points[3] = map(0.000000000000000e+00, 0.000000000000000e+00, 1.000000000000000e+00);
    points[4] = map(6.666666666666667e-01, 3.333333333333333e-01, 0.000000000000000e+00);
    points[5] = map(3.333333333333334e-01, 6.666666666666666e-01, 0.000000000000000e+00);
    points[6] = map(0.000000000000000e+00, 6.666666666666667e-01, 0.000000000000000e+00);
    points[7] = map(0.000000000000000e+00, 3.333333333333334e-01, 0.000000000000000e+00);
    points[8] = map(3.333333333333333e-01, 0.000000000000000e+00, 0.000000000000000e+00);
    points[9] = map(6.666666666666666e-01, 0.000000000000000e+00, 0.000000000000000e+00);
    points[10] = map(0.000000000000000e+00, 0.000000000000000e+00, 3.333333333333333e-01);
    points[11] = map(0.000000000000000e+00, 0.000000000000000e+00, 6.666666666666666e-01);
    points[12] = map(6.666666666666667e-01, 0.000000000000000e+00, 3.333333333333333e-01);
    points[13] = map(3.333333333333334e-01, 0.000000000000000e+00, 6.666666666666666e-01);
    points[14] = map(0.000000000000000e+00, 6.666666666666667e-01, 3.333333333333333e-01);
    points[15] = map(0.000000000000000e+00, 3.333333333333334e-01, 6.666666666666666e-01);
    points[16] = map(3.333333333333334e-01, 3.333333333333333e-01, 3.333333333333333e-01);
    points[17] = map(0.000000000000000e+00, 3.333333333333334e-01, 3.333333333333333e-01);
    points[18] = map(3.333333333333333e-01, 0.000000000000000e+00, 3.333333333333334e-01);
    points[19] = map(3.333333333333333e-01, 3.333333333333333e-01, 0.000000000000000e+00);
    components[0] = 0;
    components[1] = 0;
    components[2] = 0;
    components[3] = 0;
    components[4] = 0;
    components[5] = 0;
    components[6] = 0;
    components[7] = 0;
    components[8] = 0;
    components[9] = 0;
    components[10] = 0;
    components[11] = 0;
    components[12] = 0;
    components[13] = 0;
    components[14] = 0;
    components[15] = 0;
    components[16] = 0;
    components[17] = 0;
    components[18] = 0;
    components[19] = 0;
  }

  void vertexeval(uint vertex_nodes[], unsigned int vertex, const Mesh& mesh) const
  {
    // FIXME: Temporary fix for Lagrange elements
    vertex_nodes[0] = vertex;
  }

  const FiniteElement& operator[] (unsigned int i) const
  {
    return *this;
  }

  FiniteElement& operator[] (unsigned int i)
  {
    return *this;
  }

  FiniteElementSpec spec() const
  {
    FiniteElementSpec s("Lagrange", "tetrahedron", 3);
    return s;
  }
  
private:

  unsigned int* tensordims;
  FiniteElement** subelements;

};

LinearForm::LinearForm(Function& w0) : dolfin::LinearForm(1)
{
  // Create finite element for test space
  _test = new TestElement();

  // Add functions
  initFunction(0, w0, new FunctionElement_0());
}

// Contribution from the interior
bool LinearForm::interior_contribution() const { return true; }

void LinearForm::eval(real block[], const AffineMap& map) const
{
  // Compute coefficients
  const real c0_0 = c[0][0];
  const real c0_1 = c[0][1];
  const real c0_2 = c[0][2];
  const real c0_3 = c[0][3];
  const real c0_4 = c[0][4];
  const real c0_5 = c[0][5];
  const real c0_6 = c[0][6];
  const real c0_7 = c[0][7];
  const real c0_8 = c[0][8];
  const real c0_9 = c[0][9];
  const real c0_10 = c[0][10];
  const real c0_11 = c[0][11];
  const real c0_12 = c[0][12];
  const real c0_13 = c[0][13];
  const real c0_14 = c[0][14];
  const real c0_15 = c[0][15];
  const real c0_16 = c[0][16];
  const real c0_17 = c[0][17];
  const real c0_18 = c[0][18];
  const real c0_19 = c[0][19];

  // Compute geometry tensors
  const real G0_0 = map.det*c0_0;
  const real G0_1 = map.det*c0_1;
  const real G0_2 = map.det*c0_2;
  const real G0_3 = map.det*c0_3;
  const real G0_4 = map.det*c0_4;
  const real G0_5 = map.det*c0_5;
  const real G0_6 = map.det*c0_6;
  const real G0_7 = map.det*c0_7;
  const real G0_8 = map.det*c0_8;
  const real G0_9 = map.det*c0_9;
  const real G0_10 = map.det*c0_10;
  const real G0_11 = map.det*c0_11;
  const real G0_12 = map.det*c0_12;
  const real G0_13 = map.det*c0_13;
  const real G0_14 = map.det*c0_14;
  const real G0_15 = map.det*c0_15;
  const real G0_16 = map.det*c0_16;
  const real G0_17 = map.det*c0_17;
  const real G0_18 = map.det*c0_18;
  const real G0_19 = map.det*c0_19;

  // Compute element tensor
  block[0] = 5.952380952380944e-04*G0_0 + 7.440476190476180e-05*G0_1 + 7.440476190476188e-05*G0_2 + 7.440476190476180e-05*G0_3 + 1.116071428571429e-04*G0_4 + 1.116071428571420e-04*G0_5 + 2.232142857142851e-04*G0_6 - 4.464285714285707e-04*G0_7 - 4.464285714285714e-04*G0_8 + 2.232142857142858e-04*G0_9 - 4.464285714285711e-04*G0_10 + 2.232142857142859e-04*G0_11 + 1.116071428571427e-04*G0_12 + 1.116071428571431e-04*G0_13 + 1.116071428571427e-04*G0_14 + 1.116071428571432e-04*G0_15 + 1.339285714285713e-03*G0_16 + 6.696428571428562e-04*G0_17 + 6.696428571428571e-04*G0_18 + 6.696428571428561e-04*G0_19;
  block[1] = 7.440476190476180e-05*G0_0 + 5.952380952380941e-04*G0_1 + 7.440476190476188e-05*G0_2 + 7.440476190476175e-05*G0_3 - 4.464285714285719e-04*G0_4 + 2.232142857142856e-04*G0_5 + 1.116071428571422e-04*G0_6 + 1.116071428571426e-04*G0_7 + 2.232142857142856e-04*G0_8 - 4.464285714285715e-04*G0_9 + 1.116071428571425e-04*G0_10 + 1.116071428571428e-04*G0_11 - 4.464285714285719e-04*G0_12 + 2.232142857142860e-04*G0_13 + 1.116071428571433e-04*G0_14 + 1.116071428571429e-04*G0_15 + 6.696428571428579e-04*G0_16 + 1.339285714285713e-03*G0_17 + 6.696428571428576e-04*G0_18 + 6.696428571428564e-04*G0_19;
  block[2] = 7.440476190476188e-05*G0_0 + 7.440476190476190e-05*G0_1 + 5.952380952380949e-04*G0_2 + 7.440476190476184e-05*G0_3 + 2.232142857142848e-04*G0_4 - 4.464285714285706e-04*G0_5 - 4.464285714285713e-04*G0_6 + 2.232142857142855e-04*G0_7 + 1.116071428571422e-04*G0_8 + 1.116071428571425e-04*G0_9 + 1.116071428571426e-04*G0_10 + 1.116071428571427e-04*G0_11 + 1.116071428571421e-04*G0_12 + 1.116071428571431e-04*G0_13 - 4.464285714285708e-04*G0_14 + 2.232142857142857e-04*G0_15 + 6.696428571428568e-04*G0_16 + 6.696428571428570e-04*G0_17 + 1.339285714285713e-03*G0_18 + 6.696428571428575e-04*G0_19;
  block[3] = 7.440476190476180e-05*G0_0 + 7.440476190476175e-05*G0_1 + 7.440476190476186e-05*G0_2 + 5.952380952380946e-04*G0_3 + 1.116071428571424e-04*G0_4 + 1.116071428571427e-04*G0_5 + 1.116071428571424e-04*G0_6 + 1.116071428571425e-04*G0_7 + 1.116071428571424e-04*G0_8 + 1.116071428571429e-04*G0_9 + 2.232142857142850e-04*G0_10 - 4.464285714285702e-04*G0_11 + 2.232142857142850e-04*G0_12 - 4.464285714285703e-04*G0_13 + 2.232142857142855e-04*G0_14 - 4.464285714285702e-04*G0_15 + 6.696428571428557e-04*G0_16 + 6.696428571428558e-04*G0_17 + 6.696428571428566e-04*G0_18 + 1.339285714285711e-03*G0_19;
  block[4] = 1.116071428571429e-04*G0_0 - 4.464285714285720e-04*G0_1 + 2.232142857142848e-04*G0_2 + 1.116071428571424e-04*G0_3 + 4.017857142857131e-03*G0_4 - 2.008928571428567e-03*G0_5 - 1.004464285714283e-03*G0_6 - 1.004464285714285e-03*G0_8 + 2.008928571428569e-03*G0_9 + 2.008928571428565e-03*G0_12 - 1.004464285714282e-03*G0_13 - 1.004464285714285e-03*G0_14 - 2.008928571428568e-03*G0_17;
  block[5] = 1.116071428571421e-04*G0_0 + 2.232142857142856e-04*G0_1 - 4.464285714285706e-04*G0_2 + 1.116071428571427e-04*G0_3 - 2.008928571428567e-03*G0_4 + 4.017857142857137e-03*G0_5 + 2.008928571428569e-03*G0_6 - 1.004464285714284e-03*G0_7 - 1.004464285714284e-03*G0_9 - 1.004464285714282e-03*G0_12 + 2.008928571428570e-03*G0_14 - 1.004464285714285e-03*G0_15 - 2.008928571428570e-03*G0_18;
  block[6] = 2.232142857142851e-04*G0_0 + 1.116071428571422e-04*G0_1 - 4.464285714285713e-04*G0_2 + 1.116071428571424e-04*G0_3 - 1.004464285714283e-03*G0_4 + 2.008928571428569e-03*G0_5 + 4.017857142857134e-03*G0_6 - 2.008928571428569e-03*G0_7 - 1.004464285714284e-03*G0_8 - 1.004464285714284e-03*G0_10 + 2.008928571428568e-03*G0_14 - 1.004464285714284e-03*G0_15 - 2.008928571428570e-03*G0_18;
  block[7] = -4.464285714285707e-04*G0_0 + 1.116071428571426e-04*G0_1 + 2.232142857142855e-04*G0_2 + 1.116071428571425e-04*G0_3 - 1.004464285714284e-03*G0_5 - 2.008928571428569e-03*G0_6 + 4.017857142857135e-03*G0_7 + 2.008928571428568e-03*G0_8 - 1.004464285714285e-03*G0_9 + 2.008928571428567e-03*G0_10 - 1.004464285714283e-03*G0_11 - 1.004464285714284e-03*G0_14 - 2.008928571428571e-03*G0_16;
  block[8] = -4.464285714285713e-04*G0_0 + 2.232142857142856e-04*G0_1 + 1.116071428571422e-04*G0_2 + 1.116071428571423e-04*G0_3 - 1.004464285714285e-03*G0_4 - 1.004464285714284e-03*G0_6 + 2.008928571428568e-03*G0_7 + 4.017857142857136e-03*G0_8 - 2.008928571428568e-03*G0_9 + 2.008928571428569e-03*G0_10 - 1.004464285714283e-03*G0_11 - 1.004464285714284e-03*G0_12 - 2.008928571428573e-03*G0_16;
  block[9] = 2.232142857142858e-04*G0_0 - 4.464285714285716e-04*G0_1 + 1.116071428571425e-04*G0_2 + 1.116071428571429e-04*G0_3 + 2.008928571428569e-03*G0_4 - 1.004464285714284e-03*G0_5 - 1.004464285714285e-03*G0_7 - 2.008928571428568e-03*G0_8 + 4.017857142857136e-03*G0_9 - 1.004464285714284e-03*G0_10 + 2.008928571428568e-03*G0_12 - 1.004464285714284e-03*G0_13 - 2.008928571428569e-03*G0_17;
  block[10] = -4.464285714285711e-04*G0_0 + 1.116071428571425e-04*G0_1 + 1.116071428571426e-04*G0_2 + 2.232142857142850e-04*G0_3 - 1.004464285714284e-03*G0_6 + 2.008928571428567e-03*G0_7 + 2.008928571428569e-03*G0_8 - 1.004464285714284e-03*G0_9 + 4.017857142857137e-03*G0_10 - 2.008928571428569e-03*G0_11 - 1.004464285714286e-03*G0_13 - 1.004464285714285e-03*G0_15 - 2.008928571428570e-03*G0_16;
  block[11] = 2.232142857142859e-04*G0_0 + 1.116071428571428e-04*G0_1 + 1.116071428571427e-04*G0_2 - 4.464285714285702e-04*G0_3 - 1.004464285714283e-03*G0_7 - 1.004464285714283e-03*G0_8 - 2.008928571428569e-03*G0_10 + 4.017857142857138e-03*G0_11 - 1.004464285714285e-03*G0_12 + 2.008928571428569e-03*G0_13 - 1.004464285714284e-03*G0_14 + 2.008928571428569e-03*G0_15 - 2.008928571428570e-03*G0_19;
  block[12] = 1.116071428571427e-04*G0_0 - 4.464285714285719e-04*G0_1 + 1.116071428571421e-04*G0_2 + 2.232142857142851e-04*G0_3 + 2.008928571428565e-03*G0_4 - 1.004464285714282e-03*G0_5 - 1.004464285714284e-03*G0_8 + 2.008928571428568e-03*G0_9 - 1.004464285714285e-03*G0_11 + 4.017857142857132e-03*G0_12 - 2.008928571428568e-03*G0_13 - 1.004464285714285e-03*G0_15 - 2.008928571428570e-03*G0_17;
  block[13] = 1.116071428571431e-04*G0_0 + 2.232142857142861e-04*G0_1 + 1.116071428571431e-04*G0_2 - 4.464285714285703e-04*G0_3 - 1.004464285714282e-03*G0_4 - 1.004464285714284e-03*G0_9 - 1.004464285714286e-03*G0_10 + 2.008928571428569e-03*G0_11 - 2.008928571428567e-03*G0_12 + 4.017857142857138e-03*G0_13 - 1.004464285714285e-03*G0_14 + 2.008928571428569e-03*G0_15 - 2.008928571428569e-03*G0_19;
  block[14] = 1.116071428571428e-04*G0_0 + 1.116071428571432e-04*G0_1 - 4.464285714285708e-04*G0_2 + 2.232142857142855e-04*G0_3 - 1.004464285714285e-03*G0_4 + 2.008928571428570e-03*G0_5 + 2.008928571428569e-03*G0_6 - 1.004464285714284e-03*G0_7 - 1.004464285714284e-03*G0_11 - 1.004464285714285e-03*G0_13 + 4.017857142857138e-03*G0_14 - 2.008928571428569e-03*G0_15 - 2.008928571428565e-03*G0_18;
  block[15] = 1.116071428571432e-04*G0_0 + 1.116071428571429e-04*G0_1 + 2.232142857142857e-04*G0_2 - 4.464285714285702e-04*G0_3 - 1.004464285714285e-03*G0_5 - 1.004464285714284e-03*G0_6 - 1.004464285714285e-03*G0_10 + 2.008928571428569e-03*G0_11 - 1.004464285714285e-03*G0_12 + 2.008928571428569e-03*G0_13 - 2.008928571428569e-03*G0_14 + 4.017857142857140e-03*G0_15 - 2.008928571428568e-03*G0_19;
  block[16] = 1.339285714285713e-03*G0_0 + 6.696428571428579e-04*G0_1 + 6.696428571428568e-04*G0_2 + 6.696428571428557e-04*G0_3 - 2.008928571428571e-03*G0_7 - 2.008928571428573e-03*G0_8 - 2.008928571428570e-03*G0_10 + 1.607142857142856e-02*G0_16 + 8.035714285714287e-03*G0_17 + 8.035714285714283e-03*G0_18 + 8.035714285714280e-03*G0_19;
  block[17] = 6.696428571428562e-04*G0_0 + 1.339285714285713e-03*G0_1 + 6.696428571428570e-04*G0_2 + 6.696428571428560e-04*G0_3 - 2.008928571428568e-03*G0_4 - 2.008928571428568e-03*G0_9 - 2.008928571428570e-03*G0_12 + 8.035714285714285e-03*G0_16 + 1.607142857142857e-02*G0_17 + 8.035714285714287e-03*G0_18 + 8.035714285714275e-03*G0_19;
  block[18] = 6.696428571428571e-04*G0_0 + 6.696428571428576e-04*G0_1 + 1.339285714285713e-03*G0_2 + 6.696428571428564e-04*G0_3 - 2.008928571428569e-03*G0_5 - 2.008928571428570e-03*G0_6 - 2.008928571428565e-03*G0_14 + 8.035714285714283e-03*G0_16 + 8.035714285714287e-03*G0_17 + 1.607142857142855e-02*G0_18 + 8.035714285714280e-03*G0_19;
  block[19] = 6.696428571428561e-04*G0_0 + 6.696428571428564e-04*G0_1 + 6.696428571428575e-04*G0_2 + 1.339285714285711e-03*G0_3 - 2.008928571428570e-03*G0_11 - 2.008928571428569e-03*G0_13 - 2.008928571428568e-03*G0_15 + 8.035714285714280e-03*G0_16 + 8.035714285714275e-03*G0_17 + 8.035714285714280e-03*G0_18 + 1.607142857142855e-02*G0_19;
}

// No contribution from the boundary
bool LinearForm::boundary_contribution() const { return false; }

void LinearForm::eval(real block[], const AffineMap& map, unsigned int facet) const {}

} }

#endif
