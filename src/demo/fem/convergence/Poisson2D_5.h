// Automatically generated by FFC, the FEniCS Form Compiler, version 0.3.0.
// For further information, go to http://www/fenics.org/ffc/.
// Licensed under the GNU GPL Version 2.

#ifndef __POISSON2D_5_H
#define __POISSON2D_5_H

#include <dolfin/Mesh.h>
#include <dolfin/Cell.h>
#include <dolfin/Point.h>
#include <dolfin/Vector.h>
#include <dolfin/AffineMap.h>
#include <dolfin/FiniteElement.h>
#include <dolfin/FiniteElementSpec.h>
#include <dolfin/LinearForm.h>
#include <dolfin/BilinearForm.h>

namespace dolfin { namespace Poisson2D_5 {

/// This class contains the form to be evaluated, including
/// contributions from the interior and boundary of the domain.

class BilinearForm : public dolfin::BilinearForm
{
public:
  
  class TestElement : public dolfin::FiniteElement
  {
  public:
  
    TestElement() : dolfin::FiniteElement(), tensordims(0), subelements(0)
    {
      // Element is scalar, don't need to initialize tensordims
  
      // Element is simple, don't need to initialize subelements
    }
  
    ~TestElement()
    {
      if ( tensordims ) delete [] tensordims;
      if ( subelements )
      {
        for (unsigned int i = 0; i < elementdim(); i++)
          delete subelements[i];
        delete [] subelements;
      }
    }
  
    inline unsigned int spacedim() const
    {
      return 21;
    }
  
    inline unsigned int shapedim() const
    {
      return 2;
    }
  
    inline unsigned int tensordim(unsigned int i) const
    {
      dolfin_error("Element is scalar.");
      return 0;
    }
  
    inline unsigned int elementdim() const
    {
      return 1;
    }
  
    inline unsigned int rank() const
    {
      return 0;
    }
  
    void nodemap(int nodes[], const Cell& cell, const Mesh& mesh) const
    {
      static unsigned int edge_reordering_0[2][4] = {{0, 1, 2, 3}, {3, 2, 1, 0}};
      nodes[0] = cell.vertexID(0);
      nodes[1] = cell.vertexID(1);
      nodes[2] = cell.vertexID(2);
      int alignment = cell.edgeAlignment(0);
      int offset = mesh.numVertices();
      nodes[3] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][0];
      nodes[4] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][1];
      nodes[5] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][2];
      nodes[6] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][3];
      alignment = cell.edgeAlignment(1);
      nodes[7] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][0];
      nodes[8] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][1];
      nodes[9] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][2];
      nodes[10] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][3];
      alignment = cell.edgeAlignment(2);
      nodes[11] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][0];
      nodes[12] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][1];
      nodes[13] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][2];
      nodes[14] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][3];
      offset = offset + 4*mesh.numEdges();
      nodes[15] = offset + 6*cell.id() + 0;
      nodes[16] = offset + 6*cell.id() + 1;
      nodes[17] = offset + 6*cell.id() + 2;
      nodes[18] = offset + 6*cell.id() + 3;
      nodes[19] = offset + 6*cell.id() + 4;
      nodes[20] = offset + 6*cell.id() + 5;
    }
  
    void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
    {
      points[0] = map(0.000000000000000e+00, 0.000000000000000e+00);
      points[1] = map(1.000000000000000e+00, 0.000000000000000e+00);
      points[2] = map(0.000000000000000e+00, 1.000000000000000e+00);
      points[3] = map(8.000000000000000e-01, 2.000000000000000e-01);
      points[4] = map(6.000000000000000e-01, 4.000000000000000e-01);
      points[5] = map(4.000000000000000e-01, 6.000000000000000e-01);
      points[6] = map(2.000000000000000e-01, 8.000000000000000e-01);
      points[7] = map(0.000000000000000e+00, 8.000000000000000e-01);
      points[8] = map(0.000000000000000e+00, 6.000000000000000e-01);
      points[9] = map(0.000000000000000e+00, 4.000000000000000e-01);
      points[10] = map(0.000000000000000e+00, 2.000000000000000e-01);
      points[11] = map(2.000000000000000e-01, 0.000000000000000e+00);
      points[12] = map(4.000000000000000e-01, 0.000000000000000e+00);
      points[13] = map(6.000000000000000e-01, 0.000000000000000e+00);
      points[14] = map(8.000000000000000e-01, 0.000000000000000e+00);
      points[15] = map(2.000000000000000e-01, 2.000000000000000e-01);
      points[16] = map(4.000000000000000e-01, 2.000000000000000e-01);
      points[17] = map(6.000000000000000e-01, 2.000000000000000e-01);
      points[18] = map(2.000000000000000e-01, 4.000000000000000e-01);
      points[19] = map(4.000000000000000e-01, 4.000000000000000e-01);
      points[20] = map(2.000000000000000e-01, 6.000000000000000e-01);
      components[0] = 0;
      components[1] = 0;
      components[2] = 0;
      components[3] = 0;
      components[4] = 0;
      components[5] = 0;
      components[6] = 0;
      components[7] = 0;
      components[8] = 0;
      components[9] = 0;
      components[10] = 0;
      components[11] = 0;
      components[12] = 0;
      components[13] = 0;
      components[14] = 0;
      components[15] = 0;
      components[16] = 0;
      components[17] = 0;
      components[18] = 0;
      components[19] = 0;
      components[20] = 0;
    }
  
    void vertexeval(real values[], unsigned int vertex, const real x[], const Mesh& mesh) const
    {
      // FIXME: Temporary fix for Lagrange elements
      values[0] = x[vertex];
    }
  
    const FiniteElement& operator[] (unsigned int i) const
    {
      return *this;
    }
  
    FiniteElement& operator[] (unsigned int i)
    {
      return *this;
    }
  
    FiniteElementSpec spec() const
    {
      FiniteElementSpec s("Lagrange", "triangle", 5);
      return s;
    }
    
  private:
  
    unsigned int* tensordims;
    FiniteElement** subelements;
  
  };
    
  class TrialElement : public dolfin::FiniteElement
  {
  public:
  
    TrialElement() : dolfin::FiniteElement(), tensordims(0), subelements(0)
    {
      // Element is scalar, don't need to initialize tensordims
  
      // Element is simple, don't need to initialize subelements
    }
  
    ~TrialElement()
    {
      if ( tensordims ) delete [] tensordims;
      if ( subelements )
      {
        for (unsigned int i = 0; i < elementdim(); i++)
          delete subelements[i];
        delete [] subelements;
      }
    }
  
    inline unsigned int spacedim() const
    {
      return 21;
    }
  
    inline unsigned int shapedim() const
    {
      return 2;
    }
  
    inline unsigned int tensordim(unsigned int i) const
    {
      dolfin_error("Element is scalar.");
      return 0;
    }
  
    inline unsigned int elementdim() const
    {
      return 1;
    }
  
    inline unsigned int rank() const
    {
      return 0;
    }
  
    void nodemap(int nodes[], const Cell& cell, const Mesh& mesh) const
    {
      static unsigned int edge_reordering_0[2][4] = {{0, 1, 2, 3}, {3, 2, 1, 0}};
      nodes[0] = cell.vertexID(0);
      nodes[1] = cell.vertexID(1);
      nodes[2] = cell.vertexID(2);
      int alignment = cell.edgeAlignment(0);
      int offset = mesh.numVertices();
      nodes[3] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][0];
      nodes[4] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][1];
      nodes[5] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][2];
      nodes[6] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][3];
      alignment = cell.edgeAlignment(1);
      nodes[7] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][0];
      nodes[8] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][1];
      nodes[9] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][2];
      nodes[10] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][3];
      alignment = cell.edgeAlignment(2);
      nodes[11] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][0];
      nodes[12] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][1];
      nodes[13] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][2];
      nodes[14] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][3];
      offset = offset + 4*mesh.numEdges();
      nodes[15] = offset + 6*cell.id() + 0;
      nodes[16] = offset + 6*cell.id() + 1;
      nodes[17] = offset + 6*cell.id() + 2;
      nodes[18] = offset + 6*cell.id() + 3;
      nodes[19] = offset + 6*cell.id() + 4;
      nodes[20] = offset + 6*cell.id() + 5;
    }
  
    void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
    {
      points[0] = map(0.000000000000000e+00, 0.000000000000000e+00);
      points[1] = map(1.000000000000000e+00, 0.000000000000000e+00);
      points[2] = map(0.000000000000000e+00, 1.000000000000000e+00);
      points[3] = map(8.000000000000000e-01, 2.000000000000000e-01);
      points[4] = map(6.000000000000000e-01, 4.000000000000000e-01);
      points[5] = map(4.000000000000000e-01, 6.000000000000000e-01);
      points[6] = map(2.000000000000000e-01, 8.000000000000000e-01);
      points[7] = map(0.000000000000000e+00, 8.000000000000000e-01);
      points[8] = map(0.000000000000000e+00, 6.000000000000000e-01);
      points[9] = map(0.000000000000000e+00, 4.000000000000000e-01);
      points[10] = map(0.000000000000000e+00, 2.000000000000000e-01);
      points[11] = map(2.000000000000000e-01, 0.000000000000000e+00);
      points[12] = map(4.000000000000000e-01, 0.000000000000000e+00);
      points[13] = map(6.000000000000000e-01, 0.000000000000000e+00);
      points[14] = map(8.000000000000000e-01, 0.000000000000000e+00);
      points[15] = map(2.000000000000000e-01, 2.000000000000000e-01);
      points[16] = map(4.000000000000000e-01, 2.000000000000000e-01);
      points[17] = map(6.000000000000000e-01, 2.000000000000000e-01);
      points[18] = map(2.000000000000000e-01, 4.000000000000000e-01);
      points[19] = map(4.000000000000000e-01, 4.000000000000000e-01);
      points[20] = map(2.000000000000000e-01, 6.000000000000000e-01);
      components[0] = 0;
      components[1] = 0;
      components[2] = 0;
      components[3] = 0;
      components[4] = 0;
      components[5] = 0;
      components[6] = 0;
      components[7] = 0;
      components[8] = 0;
      components[9] = 0;
      components[10] = 0;
      components[11] = 0;
      components[12] = 0;
      components[13] = 0;
      components[14] = 0;
      components[15] = 0;
      components[16] = 0;
      components[17] = 0;
      components[18] = 0;
      components[19] = 0;
      components[20] = 0;
    }
  
    void vertexeval(real values[], unsigned int vertex, const real x[], const Mesh& mesh) const
    {
      // FIXME: Temporary fix for Lagrange elements
      values[0] = x[vertex];
    }
  
    const FiniteElement& operator[] (unsigned int i) const
    {
      return *this;
    }
  
    FiniteElement& operator[] (unsigned int i)
    {
      return *this;
    }
  
    FiniteElementSpec spec() const
    {
      FiniteElementSpec s("Lagrange", "triangle", 5);
      return s;
    }
    
  private:
  
    unsigned int* tensordims;
    FiniteElement** subelements;
  
  };
  
  BilinearForm() : dolfin::BilinearForm(0)
  {
    // Create finite element for test space
    _test = new TestElement();

    // Create finite element for trial space
    _trial = new TrialElement();
  }

  void eval(real block[], const AffineMap& map) const
  {
    // Compute geometry tensors
    const real G0_0_0 = map.det*(map.g00*map.g00 + map.g01*map.g01);
    const real G0_0_1 = map.det*(map.g00*map.g10 + map.g01*map.g11);
    const real G0_1_0 = map.det*(map.g10*map.g00 + map.g11*map.g01);
    const real G0_1_1 = map.det*(map.g10*map.g10 + map.g11*map.g11);

    // Compute element tensor
    block[0] = 3.424065806878293e-01*G0_0_0 + 3.424065806878293e-01*G0_0_1 + 3.424065806878293e-01*G0_1_0 + 3.424065806878293e-01*G0_1_1;
    block[1] = -4.099840167548513e-02*G0_0_0 - 4.099840167548521e-02*G0_1_0;
    block[2] = -4.099840167548441e-02*G0_0_1 - 4.099840167548453e-02*G0_1_1;
    block[3] = -4.081927910052949e-02*G0_0_0 - 4.081927910052952e-02*G0_0_1 - 4.081927910052945e-02*G0_1_0 - 4.081927910052971e-02*G0_1_1;
    block[4] = -3.797743055555450e-02*G0_0_0 - 3.797743055555533e-02*G0_0_1 - 3.797743055555459e-02*G0_1_0 - 3.797743055555518e-02*G0_1_1;
    block[5] = -3.797743055555602e-02*G0_0_0 - 3.797743055555540e-02*G0_0_1 - 3.797743055555571e-02*G0_1_0 - 3.797743055555534e-02*G0_1_1;
    block[6] = -4.081927910052759e-02*G0_0_0 - 4.081927910052836e-02*G0_0_1 - 4.081927910052784e-02*G0_1_0 - 4.081927910052835e-02*G0_1_1;
    block[7] = 4.081927910052759e-02*G0_0_0 + 2.023740630511446e-01*G0_0_1 + 4.081927910052784e-02*G0_1_0 + 2.023740630511448e-01*G0_1_1;
    block[8] = -6.966834766313748e-02*G0_0_0 - 4.499593529541422e-01*G0_0_1 - 6.966834766313774e-02*G0_1_0 - 4.499593529541427e-01*G0_1_1;
    block[9] = -1.584545855379233e-02*G0_0_0 + 5.942046957671928e-01*G0_0_1 - 1.584545855379225e-02*G0_1_0 + 5.942046957671933e-01*G0_1_1;
    block[10] = 2.022879464285708e-01*G0_0_0 - 6.480275848765400e-01*G0_0_1 + 2.022879464285706e-01*G0_1_0 - 6.480275848765402e-01*G0_1_1;
    block[11] = -6.480275848765409e-01*G0_0_0 + 2.022879464285704e-01*G0_0_1 - 6.480275848765409e-01*G0_1_0 + 2.022879464285705e-01*G0_1_1;
    block[12] = 5.942046957671944e-01*G0_0_0 - 1.584545855379190e-02*G0_0_1 + 5.942046957671941e-01*G0_1_0 - 1.584545855379189e-02*G0_1_1;
    block[13] = -4.499593529541437e-01*G0_0_0 - 6.966834766313905e-02*G0_0_1 - 4.499593529541435e-01*G0_1_0 - 6.966834766313931e-02*G0_1_1;
    block[14] = 2.023740630511460e-01*G0_0_0 + 4.081927910052993e-02*G0_0_1 + 2.023740630511462e-01*G0_1_0 + 4.081927910053011e-02*G0_1_1;
    block[15] = -2.152915564373898e-01*G0_0_0 - 2.152915564373898e-01*G0_0_1 - 2.152915564373895e-01*G0_1_0 - 2.152915564373902e-01*G0_1_1;
    block[16] = -5.382288910934611e-02*G0_0_0 - 5.382288910934648e-02*G0_0_1 - 5.382288910934608e-02*G0_1_0 - 5.382288910934625e-02*G0_1_1;
    block[17] = 1.076457782186945e-01*G0_0_0 + 1.076457782186938e-01*G0_0_1 + 1.076457782186945e-01*G0_1_0 + 1.076457782186938e-01*G0_1_1;
    block[18] = -5.382288910934643e-02*G0_0_0 - 5.382288910934462e-02*G0_0_1 - 5.382288910934634e-02*G0_1_0 - 5.382288910934435e-02*G0_1_1;
    block[19] = 1.076457782186934e-01*G0_0_0 + 1.076457782186938e-01*G0_0_1 + 1.076457782186933e-01*G0_1_0 + 1.076457782186934e-01*G0_1_1;
    block[20] = 1.076457782186936e-01*G0_0_0 + 1.076457782186928e-01*G0_0_1 + 1.076457782186935e-01*G0_1_0 + 1.076457782186929e-01*G0_1_1;
    block[21] = -4.099840167548513e-02*G0_0_0 - 4.099840167548521e-02*G0_0_1;
    block[22] = 3.424065806878291e-01*G0_0_0;
    block[23] = 4.099840167548475e-02*G0_0_1;
    block[24] = 2.022879464285701e-01*G0_0_0 + 8.503155313051103e-01*G0_0_1;
    block[25] = -1.584545855379223e-02*G0_0_0 - 6.100501543209856e-01*G0_0_1;
    block[26] = -6.966834766313909e-02*G0_0_0 + 3.802910052910039e-01*G0_0_1;
    block[27] = 4.081927910052860e-02*G0_0_0 - 1.615547839506170e-01*G0_0_1;
    block[28] = -4.081927910052861e-02*G0_0_0;
    block[29] = -3.797743055555555e-02*G0_0_0;
    block[30] = -3.797743055555586e-02*G0_0_0;
    block[31] = -4.081927910052890e-02*G0_0_0;
    block[32] = 2.023740630511463e-01*G0_0_0 + 1.615547839506161e-01*G0_0_1;
    block[33] = -4.499593529541438e-01*G0_0_0 - 3.802910052910031e-01*G0_0_1;
    block[34] = 5.942046957671943e-01*G0_0_0 + 6.100501543209851e-01*G0_0_1;
    block[35] = -6.480275848765407e-01*G0_0_0 - 8.503155313051102e-01*G0_0_1;
    block[36] = 1.076457782186945e-01*G0_0_0;
    block[37] = -5.382288910934725e-02*G0_0_0;
    block[38] = -2.152915564373886e-01*G0_0_0;
    block[39] = 1.076457782186948e-01*G0_0_0;
    block[40] = -5.382288910934691e-02*G0_0_0;
    block[41] = 1.076457782186948e-01*G0_0_0;
    block[42] = -4.099840167548441e-02*G0_1_0 - 4.099840167548453e-02*G0_1_1;
    block[43] = 4.099840167548475e-02*G0_1_0;
    block[44] = 3.424065806878295e-01*G0_1_1;
    block[45] = -1.615547839506165e-01*G0_1_0 + 4.081927910052902e-02*G0_1_1;
    block[46] = 3.802910052910036e-01*G0_1_0 - 6.966834766313962e-02*G0_1_1;
    block[47] = -6.100501543209852e-01*G0_1_0 - 1.584545855379113e-02*G0_1_1;
    block[48] = 8.503155313051114e-01*G0_1_0 + 2.022879464285703e-01*G0_1_1;
    block[49] = -8.503155313051117e-01*G0_1_0 - 6.480275848765414e-01*G0_1_1;
    block[50] = 6.100501543209860e-01*G0_1_0 + 5.942046957671934e-01*G0_1_1;
    block[51] = -3.802910052910042e-01*G0_1_0 - 4.499593529541419e-01*G0_1_1;
    block[52] = 1.615547839506163e-01*G0_1_0 + 2.023740630511445e-01*G0_1_1;
    block[53] = -4.081927910052856e-02*G0_1_1;
    block[54] = -3.797743055555498e-02*G0_1_1;
    block[55] = -3.797743055555513e-02*G0_1_1;
    block[56] = -4.081927910052866e-02*G0_1_1;
    block[57] = 1.076457782186940e-01*G0_1_1;
    block[58] = 1.076457782186943e-01*G0_1_1;
    block[59] = 1.076457782186941e-01*G0_1_1;
    block[60] = -5.382288910934878e-02*G0_1_1;
    block[61] = -5.382288910934763e-02*G0_1_1;
    block[62] = -2.152915564373867e-01*G0_1_1;
    block[63] = -4.081927910052949e-02*G0_0_0 - 4.081927910052945e-02*G0_0_1 - 4.081927910052952e-02*G0_1_0 - 4.081927910052970e-02*G0_1_1;
    block[64] = 2.022879464285701e-01*G0_0_0 + 8.503155313051102e-01*G0_1_0;
    block[65] = -1.615547839506165e-01*G0_0_1 + 4.081927910052902e-02*G0_1_1;
    block[66] = 1.989293981481472e+00*G0_0_0 + 1.280984760802463e+00*G0_0_1 + 1.280984760802463e+00*G0_1_0 + 2.561969521604925e+00*G0_1_1;
    block[67] = -9.063774526014077e-01*G0_0_0 + 7.965787588183382e-01*G0_0_1 - 5.296172288359778e-01*G0_1_0 - 1.395089285714281e+00*G0_1_1;
    block[68] = 8.181079144620779e-01*G0_0_0 - 4.822530864197506e-01*G0_0_1 + 2.325148809523800e-01*G0_1_0 + 8.956128747795382e-01*G0_1_1;
    block[69] = -3.401606591710738e-01*G0_0_0 + 3.293960813492051e-01*G0_0_1 - 7.104621362433816e-02*G0_1_0 - 3.401606591710748e-01*G0_1_1;
    block[70] = 3.401606591710739e-01*G0_0_0 + 7.104621362433802e-02*G0_0_1 + 7.104621362433820e-02*G0_1_0;
    block[71] = 1.722332451499121e-01*G0_0_0 + 3.014081790123500e-02*G0_0_1 + 3.014081790123599e-02*G0_1_0;
    block[72] = 1.313278494268071e-01*G0_0_0 + 3.014081790123442e-02*G0_0_1 + 3.014081790123246e-02*G0_1_0;
    block[73] = 1.420924272486770e-01*G0_0_0 + 7.104621362433898e-02*G0_0_1 + 7.104621362433972e-02*G0_1_0;
    block[74] = 1.980682319223998e-01*G0_0_0 + 2.691144455467355e-01*G0_0_1 + 2.691144455467381e-01*G0_1_0 + 3.401606591710735e-01*G0_1_1;
    block[75] = -3.595368992504421e-01*G0_0_0 - 6.630979938271581e-01*G0_0_1 - 6.630979938271608e-01*G0_1_0 - 8.956128747795363e-01*G0_1_1;
    block[76] = 2.863377700617295e-01*G0_0_0 + 8.654720568783040e-01*G0_0_1 + 8.654720568783054e-01*G0_1_0 + 1.395089285714280e+00*G0_1_1;
    block[77] = -2.863377700617278e-01*G0_0_0 - 1.280984760802463e+00*G0_0_1 - 1.280984760802464e+00*G0_1_0 - 2.561969521604925e+00*G0_1_1;
    block[78] = -6.674038249559084e-01*G0_0_0 - 2.626556988536164e-01*G0_0_1 - 2.626556988536180e-01*G0_1_0;
    block[79] = 1.356336805555556e+00*G0_0_0 + 5.726755401234590e-01*G0_0_1 + 5.726755401234597e-01*G0_1_0;
    block[80] = -2.820319389329796e+00*G0_0_0 - 1.662050815696643e+00*G0_0_1 - 1.662050815696644e+00*G0_1_0;
    block[81] = -4.198185350529083e-01*G0_0_0 - 7.319912918871035e-02*G0_0_1 - 7.319912918871072e-02*G0_1_0;
    block[82] = 1.194868138227509e+00*G0_0_0 + 5.726755401234519e-01*G0_0_1 + 5.726755401234562e-01*G0_1_0;
    block[83] = -9.903411596119893e-01*G0_0_0 - 2.626556988536157e-01*G0_0_1 - 2.626556988536154e-01*G0_1_0;
    block[84] = -3.797743055555452e-02*G0_0_0 - 3.797743055555461e-02*G0_0_1 - 3.797743055555535e-02*G0_1_0 - 3.797743055555519e-02*G0_1_1;
    block[85] = -1.584545855379220e-02*G0_0_0 - 6.100501543209856e-01*G0_1_0;
    block[86] = 3.802910052910036e-01*G0_0_1 - 6.966834766313963e-02*G0_1_1;
    block[87] = -9.063774526014077e-01*G0_0_0 - 5.296172288359778e-01*G0_0_1 + 7.965787588183384e-01*G0_1_0 - 1.395089285714281e+00*G0_1_1;
    block[88] = 3.074363425925913e+00*G0_0_0 + 1.175491898148143e+00*G0_0_1 + 1.175491898148143e+00*G0_1_0 + 3.694403108465594e+00*G0_1_1;
    block[89] = -1.804143242945320e+00*G0_0_0 + 6.996975584215125e-01*G0_0_1 - 3.509252369929428e-01*G0_1_0 - 1.804143242945320e+00*G0_1_1;
    block[90] = 8.956128747795370e-01*G0_0_0 - 4.822530864197518e-01*G0_0_1 + 2.325148809523785e-01*G0_1_0 + 8.181079144620778e-01*G0_1_1;
    block[91] = -8.956128747795371e-01*G0_0_0 - 2.325148809523804e-01*G0_0_1 - 2.325148809523785e-01*G0_1_0 + 7.104621362433824e-02*G0_1_1;
    block[92] = -2.195973875661379e-01*G0_0_0 - 6.243455136684412e-02*G0_0_1 - 6.243455136684457e-02*G0_1_0 - 1.722332451499248e-02*G0_1_1;
    block[93] = -2.971023478835951e-01*G0_0_0 - 1.485511739417971e-01*G0_0_1 - 1.485511739417944e-01*G0_1_0 - 1.722332451499051e-02*G0_1_1;
    block[94] = 1.313278494268061e-01*G0_0_0 + 1.011870315255714e-01*G0_0_1 + 1.011870315255699e-01*G0_1_0 + 7.104621362433852e-02*G0_1_1;
    block[95] = 1.119516093474385e-01*G0_0_0 + 1.420924272486752e-01*G0_0_1 + 1.420924272486749e-01*G0_1_0 + 1.722332451499094e-01*G0_1_1;
    block[96] = -1.119516093474383e-01*G0_0_0 - 1.571628361992933e-01*G0_0_1 - 1.571628361992911e-01*G0_1_0 - 2.195973875661380e-01*G0_1_1;
    block[97] = 1.033399470899448e-01*G0_0_0 + 1.334807649911808e-01*G0_0_1 + 1.334807649911796e-01*G0_1_0 + 2.669615299823626e-01*G0_1_1;
    block[98] = -4.951705798059839e-02*G0_0_0 + 5.296172288359778e-01*G0_0_1 + 5.296172288359776e-01*G0_1_0 + 1.395089285714280e+00*G0_1_1;
    block[99] = -3.444664902998179e-01*G0_0_0 - 4.478064373897641e-01*G0_0_1 - 4.478064373897658e-01*G0_1_0 - 5.166997354497281e-01*G0_1_1;
    block[100] = 3.875248015872933e-01*G0_0_0 + 8.590133101851788e-01*G0_0_1 + 8.590133101851802e-01*G0_1_0 + 1.011870315255729e+00*G0_1_1;
    block[101] = 7.319912918871270e-01*G0_0_0 - 1.308972663139324e+00*G0_0_1 - 1.308972663139323e+00*G0_1_0 - 3.961364638447958e+00*G0_1_1;
    block[102] = 1.033399470899462e+00*G0_0_0 + 3.746073082010523e-01*G0_0_1 + 3.746073082010520e-01*G0_1_0 + 4.305831128747385e-02*G0_1_1;
    block[103] = -3.810660548941780e+00*G0_0_0 - 1.401548032407398e+00*G0_0_1 - 1.401548032407400e+00*G0_1_0 + 1.011870315255731e+00*G0_1_1;
    block[104] = 2.023740630511456e+00*G0_0_0 + 4.133597883597900e-01*G0_0_1 + 4.133597883597867e-01*G0_1_0 - 5.166997354497317e-01*G0_1_1;
    block[105] = -3.797743055555603e-02*G0_0_0 - 3.797743055555571e-02*G0_0_1 - 3.797743055555540e-02*G0_1_0 - 3.797743055555534e-02*G0_1_1;
    block[106] = -6.966834766313909e-02*G0_0_0 + 3.802910052910038e-01*G0_1_0;
    block[107] = -6.100501543209852e-01*G0_0_1 - 1.584545855379113e-02*G0_1_1;
    block[108] = 8.181079144620781e-01*G0_0_0 + 2.325148809523800e-01*G0_0_1 - 4.822530864197506e-01*G0_1_0 + 8.956128747795382e-01*G0_1_1;
    block[109] = -1.804143242945320e+00*G0_0_0 - 3.509252369929427e-01*G0_0_1 + 6.996975584215124e-01*G0_1_0 - 1.804143242945320e+00*G0_1_1;
    block[110] = 3.694403108465594e+00*G0_0_0 + 1.175491898148142e+00*G0_0_1 + 1.175491898148142e+00*G0_1_0 + 3.074363425925911e+00*G0_1_1;
    block[111] = -1.395089285714279e+00*G0_0_0 + 7.965787588183395e-01*G0_0_1 - 5.296172288359750e-01*G0_1_0 - 9.063774526014065e-01*G0_1_1;
    block[112] = 1.395089285714280e+00*G0_0_0 + 5.296172288359779e-01*G0_0_1 + 5.296172288359752e-01*G0_1_0 - 4.951705798059916e-02*G0_1_1;
    block[113] = 2.669615299823604e-01*G0_0_0 + 1.334807649911815e-01*G0_0_1 + 1.334807649911813e-01*G0_1_0 + 1.033399470899468e-01*G0_1_1;
    block[114] = -2.195973875661370e-01*G0_0_0 - 1.571628361992943e-01*G0_0_1 - 1.571628361992953e-01*G0_1_0 - 1.119516093474421e-01*G0_1_1;
    block[115] = 1.722332451499116e-01*G0_0_0 + 1.420924272486768e-01*G0_0_1 + 1.420924272486784e-01*G0_1_0 + 1.119516093474414e-01*G0_1_1;
    block[116] = 7.104621362434002e-02*G0_0_0 + 1.011870315255715e-01*G0_0_1 + 1.011870315255728e-01*G0_1_0 + 1.313278494268062e-01*G0_1_1;
    block[117] = -1.722332451499125e-02*G0_0_0 - 1.485511739417975e-01*G0_0_1 - 1.485511739417980e-01*G0_1_0 - 2.971023478835944e-01*G0_1_1;
    block[118] = -1.722332451499326e-02*G0_0_0 - 6.243455136684499e-02*G0_0_1 - 6.243455136684394e-02*G0_1_0 - 2.195973875661376e-01*G0_1_1;
    block[119] = 7.104621362433915e-02*G0_0_0 - 2.325148809523802e-01*G0_0_1 - 2.325148809523797e-01*G0_1_0 - 8.956128747795375e-01*G0_1_1;
    block[120] = -5.166997354497365e-01*G0_0_0 - 4.478064373897696e-01*G0_0_1 - 4.478064373897702e-01*G0_1_0 - 3.444664902998223e-01*G0_1_1;
    block[121] = 4.305831128748245e-02*G0_0_0 + 3.746073082010566e-01*G0_0_1 + 3.746073082010576e-01*G0_1_0 + 1.033399470899462e+00*G0_1_1;
    block[122] = -5.166997354497355e-01*G0_0_0 + 4.133597883597890e-01*G0_0_1 + 4.133597883597854e-01*G0_1_0 + 2.023740630511459e+00*G0_1_1;
    block[123] = 1.011870315255729e+00*G0_0_0 + 8.590133101851826e-01*G0_0_1 + 8.590133101851803e-01*G0_1_0 + 3.875248015872997e-01*G0_1_1;
    block[124] = 1.011870315255729e+00*G0_0_0 - 1.401548032407402e+00*G0_0_1 - 1.401548032407397e+00*G0_1_0 - 3.810660548941782e+00*G0_1_1;
    block[125] = -3.961364638447954e+00*G0_0_0 - 1.308972663139325e+00*G0_0_1 - 1.308972663139323e+00*G0_1_0 + 7.319912918871226e-01*G0_1_1;
    block[126] = -4.081927910052759e-02*G0_0_0 - 4.081927910052784e-02*G0_0_1 - 4.081927910052835e-02*G0_1_0 - 4.081927910052834e-02*G0_1_1;
    block[127] = 4.081927910052859e-02*G0_0_0 - 1.615547839506170e-01*G0_1_0;
    block[128] = 8.503155313051115e-01*G0_0_1 + 2.022879464285703e-01*G0_1_1;
    block[129] = -3.401606591710739e-01*G0_0_0 - 7.104621362433816e-02*G0_0_1 + 3.293960813492051e-01*G0_1_0 - 3.401606591710748e-01*G0_1_1;
    block[130] = 8.956128747795370e-01*G0_0_0 + 2.325148809523785e-01*G0_0_1 - 4.822530864197517e-01*G0_1_0 + 8.181079144620778e-01*G0_1_1;
    block[131] = -1.395089285714279e+00*G0_0_0 - 5.296172288359748e-01*G0_0_1 + 7.965787588183395e-01*G0_1_0 - 9.063774526014066e-01*G0_1_1;
    block[132] = 2.561969521604928e+00*G0_0_0 + 1.280984760802462e+00*G0_0_1 + 1.280984760802462e+00*G0_1_0 + 1.989293981481472e+00*G0_1_1;
    block[133] = -2.561969521604929e+00*G0_0_0 - 1.280984760802466e+00*G0_0_1 - 1.280984760802463e+00*G0_1_0 - 2.863377700617284e-01*G0_1_1;
    block[134] = 1.395089285714282e+00*G0_0_0 + 8.654720568783025e-01*G0_0_1 + 8.654720568783028e-01*G0_1_0 + 2.863377700617268e-01*G0_1_1;
    block[135] = -8.956128747795380e-01*G0_0_0 - 6.630979938271544e-01*G0_0_1 - 6.630979938271565e-01*G0_1_0 - 3.595368992504375e-01*G0_1_1;
    block[136] = 3.401606591710727e-01*G0_0_0 + 2.691144455467330e-01*G0_0_1 + 2.691144455467341e-01*G0_1_0 + 1.980682319223961e-01*G0_1_1;
    block[137] = 7.104621362433938e-02*G0_0_1 + 7.104621362433677e-02*G0_1_0 + 1.420924272486764e-01*G0_1_1;
    block[138] = 3.014081790123539e-02*G0_0_1 + 3.014081790123651e-02*G0_1_0 + 1.313278494268074e-01*G0_1_1;
    block[139] = 3.014081790123535e-02*G0_0_1 + 3.014081790123252e-02*G0_1_0 + 1.722332451499106e-01*G0_1_1;
    block[140] = 7.104621362433899e-02*G0_0_1 + 7.104621362433977e-02*G0_1_0 + 3.401606591710749e-01*G0_1_1;
    block[141] = -2.626556988536156e-01*G0_0_1 - 2.626556988536118e-01*G0_1_0 - 6.674038249559048e-01*G0_1_1;
    block[142] = -7.319912918871330e-02*G0_0_1 - 7.319912918871303e-02*G0_1_0 - 4.198185350529078e-01*G0_1_1;
    block[143] = -2.626556988536157e-01*G0_0_1 - 2.626556988536147e-01*G0_1_0 - 9.903411596119891e-01*G0_1_1;
    block[144] = 5.726755401234505e-01*G0_0_1 + 5.726755401234501e-01*G0_1_0 + 1.356336805555546e+00*G0_1_1;
    block[145] = 5.726755401234545e-01*G0_0_1 + 5.726755401234582e-01*G0_1_0 + 1.194868138227508e+00*G0_1_1;
    block[146] = -1.662050815696636e+00*G0_0_1 - 1.662050815696642e+00*G0_1_0 - 2.820319389329788e+00*G0_1_1;
    block[147] = 4.081927910052759e-02*G0_0_0 + 4.081927910052784e-02*G0_0_1 + 2.023740630511446e-01*G0_1_0 + 2.023740630511448e-01*G0_1_1;
    block[148] = -4.081927910052860e-02*G0_0_0;
    block[149] = -8.503155313051116e-01*G0_0_1 - 6.480275848765414e-01*G0_1_1;
    block[150] = 3.401606591710740e-01*G0_0_0 + 7.104621362433819e-02*G0_0_1 + 7.104621362433799e-02*G0_1_0;
    block[151] = -8.956128747795372e-01*G0_0_0 - 2.325148809523785e-01*G0_0_1 - 2.325148809523803e-01*G0_1_0 + 7.104621362433829e-02*G0_1_1;
    block[152] = 1.395089285714280e+00*G0_0_0 + 5.296172288359752e-01*G0_0_1 + 5.296172288359779e-01*G0_1_0 - 4.951705798059916e-02*G0_1_1;
    block[153] = -2.561969521604929e+00*G0_0_0 - 1.280984760802463e+00*G0_0_1 - 1.280984760802466e+00*G0_1_0 - 2.863377700617284e-01*G0_1_1;
    block[154] = 2.561969521604929e+00*G0_0_0 + 1.280984760802466e+00*G0_0_1 + 1.280984760802467e+00*G0_1_0 + 1.989293981481475e+00*G0_1_1;
    block[155] = -1.395089285714282e+00*G0_0_0 - 8.654720568783025e-01*G0_0_1 - 2.191668044532622e+00*G0_1_0 - 2.568428268298049e+00*G0_1_1;
    block[156] = 8.956128747795381e-01*G0_0_0 + 6.630979938271544e-01*G0_0_1 + 1.377865961199291e+00*G0_1_0 + 1.963458994708984e+00*G0_1_1;
    block[157] = -3.401606591710728e-01*G0_0_0 - 2.691144455467330e-01*G0_0_1 - 6.695567405202784e-01*G0_1_0 - 9.386711860670122e-01*G0_1_1;
    block[158] = -7.104621362433938e-02*G0_0_1 - 7.104621362433693e-02*G0_1_0 + 1.980682319223966e-01*G0_1_1;
    block[159] = -3.014081790123545e-02*G0_0_1 - 3.014081790123475e-02*G0_1_0 + 1.119516093474407e-01*G0_1_1;
    block[160] = -3.014081790123533e-02*G0_0_1 - 3.014081790123429e-02*G0_1_0 + 7.104621362433748e-02*G0_1_1;
    block[161] = -7.104621362433902e-02*G0_0_1 - 7.104621362433874e-02*G0_1_0;
    block[162] = 2.626556988536156e-01*G0_0_1 + 2.626556988536113e-01*G0_1_0 - 4.650297619047569e-01*G0_1_1;
    block[163] = 7.319912918871344e-02*G0_0_1 + 7.319912918871239e-02*G0_1_0 - 2.734202766754826e-01*G0_1_1;
    block[164] = 2.626556988536157e-01*G0_0_1 + 2.626556988536167e-01*G0_1_0 - 1.420924272486747e-01*G0_1_1;
    block[165] = -5.726755401234506e-01*G0_0_1 - 5.726755401234517e-01*G0_1_0 + 4.951705798060085e-02*G0_1_1;
    block[166] = -5.726755401234549e-01*G0_0_1 - 5.726755401234591e-01*G0_1_0 + 2.109857253086399e-01*G0_1_1;
    block[167] = 1.662050815696636e+00*G0_0_1 + 1.662050815696644e+00*G0_1_0 + 5.037822420634882e-01*G0_1_1;
    block[168] = -6.966834766313748e-02*G0_0_0 - 6.966834766313774e-02*G0_0_1 - 4.499593529541422e-01*G0_1_0 - 4.499593529541427e-01*G0_1_1;
    block[169] = -3.797743055555554e-02*G0_0_0;
    block[170] = 6.100501543209860e-01*G0_0_1 + 5.942046957671934e-01*G0_1_1;
    block[171] = 1.722332451499120e-01*G0_0_0 + 3.014081790123599e-02*G0_0_1 + 3.014081790123497e-02*G0_1_0;
    block[172] = -2.195973875661379e-01*G0_0_0 - 6.243455136684457e-02*G0_0_1 - 6.243455136684413e-02*G0_1_0 - 1.722332451499248e-02*G0_1_1;
    block[173] = 2.669615299823604e-01*G0_0_0 + 1.334807649911812e-01*G0_0_1 + 1.334807649911814e-01*G0_1_0 + 1.033399470899468e-01*G0_1_1;
    block[174] = 1.395089285714282e+00*G0_0_0 + 8.654720568783028e-01*G0_0_1 + 8.654720568783025e-01*G0_1_0 + 2.863377700617268e-01*G0_1_1;
    block[175] = -1.395089285714282e+00*G0_0_0 - 2.191668044532621e+00*G0_0_1 - 8.654720568783025e-01*G0_1_0 - 2.568428268298049e+00*G0_1_1;
    block[176] = 3.694403108465595e+00*G0_0_0 + 2.518911210317448e+00*G0_0_1 + 2.518911210317449e+00*G0_1_0 + 4.417782738095221e+00*G0_1_1;
    block[177] = -1.804143242945320e+00*G0_0_0 - 1.453218005952370e+00*G0_0_1 - 2.503840801366832e+00*G0_1_0 - 3.957058807319206e+00*G0_1_1;
    block[178] = 8.181079144620748e-01*G0_0_0 + 5.855930335096927e-01*G0_0_1 + 1.300361000881827e+00*G0_1_0 + 1.963458994708984e+00*G0_1_1;
    block[179] = 7.104621362433575e-02*G0_0_0 + 3.035610945767188e-01*G0_0_1 + 3.035610945767180e-01*G0_1_0 - 3.595368992504394e-01*G0_1_1;
    block[180] = -1.722332451498959e-02*G0_0_0 + 4.521122685185351e-02*G0_0_1 + 4.521122685185083e-02*G0_1_0 - 1.119516093474405e-01*G0_1_1;
    block[181] = -1.722332451499278e-02*G0_0_0 + 1.313278494268075e-01*G0_0_1 + 1.313278494268074e-01*G0_1_0 - 1.722332451499097e-02*G0_1_1;
    block[182] = 7.104621362433947e-02*G0_0_0 - 3.014081790123476e-02*G0_0_1 - 3.014081790123468e-02*G0_1_0;
    block[183] = -5.166997354497266e-01*G0_0_0 - 9.300595238095224e-01*G0_0_1 - 9.300595238095172e-01*G0_1_0 + 6.803213183421483e-01*G0_1_1;
    block[184] = 4.305831128747618e-02*G0_0_0 - 3.315489969135805e-01*G0_0_1 - 3.315489969135791e-01*G0_1_0 + 3.272431657848290e-01*G0_1_1;
    block[185] = -5.166997354497364e-01*G0_0_0 - 6.889329805996496e-02*G0_0_1 - 6.889329805996625e-02*G0_1_0 + 3.444664902998321e-02*G0_1_1;
    block[186] = 1.011870315255722e+00*G0_0_0 + 2.413418347663127e+00*G0_0_1 + 2.413418347663127e+00*G0_1_0 + 4.305831128742665e-03*G0_1_1;
    block[187] = 1.011870315255737e+00*G0_0_0 + 1.528570050705468e-01*G0_0_1 + 1.528570050705516e-01*G0_1_0 - 3.186315035273340e-01*G0_1_1;
    block[188] = -3.961364638447955e+00*G0_0_0 - 2.652391975308626e+00*G0_0_1 - 2.652391975308631e+00*G0_1_0 - 6.114280202821795e-01*G0_1_1;
    block[189] = -1.584545855379234e-02*G0_0_0 - 1.584545855379226e-02*G0_0_1 + 5.942046957671928e-01*G0_1_0 + 5.942046957671933e-01*G0_1_1;
    block[190] = -3.797743055555586e-02*G0_0_0;
    block[191] = -3.802910052910042e-01*G0_0_1 - 4.499593529541419e-01*G0_1_1;
    block[192] = 1.313278494268071e-01*G0_0_0 + 3.014081790123245e-02*G0_0_1 + 3.014081790123445e-02*G0_1_0;
    block[193] = -2.971023478835951e-01*G0_0_0 - 1.485511739417944e-01*G0_0_1 - 1.485511739417971e-01*G0_1_0 - 1.722332451499051e-02*G0_1_1;
    block[194] = -2.195973875661369e-01*G0_0_0 - 1.571628361992954e-01*G0_0_1 - 1.571628361992942e-01*G0_1_0 - 1.119516093474420e-01*G0_1_1;
    block[195] = -8.956128747795381e-01*G0_0_0 - 6.630979938271566e-01*G0_0_1 - 6.630979938271544e-01*G0_1_0 - 3.595368992504375e-01*G0_1_1;
    block[196] = 8.956128747795380e-01*G0_0_0 + 1.377865961199290e+00*G0_0_1 + 6.630979938271544e-01*G0_1_0 + 1.963458994708984e+00*G0_1_1;
    block[197] = -1.804143242945320e+00*G0_0_0 - 2.503840801366832e+00*G0_0_1 - 1.453218005952370e+00*G0_1_0 - 3.957058807319206e+00*G0_1_1;
    block[198] = 3.074363425925911e+00*G0_0_0 + 1.898871527777767e+00*G0_0_1 + 1.898871527777767e+00*G0_1_0 + 4.417782738095216e+00*G0_1_1;
    block[199] = -9.063774526014041e-01*G0_0_0 - 3.767602237654278e-01*G0_0_1 - 1.702956211419743e+00*G0_1_0 - 2.568428268298046e+00*G0_1_1;
    block[200] = -4.951705798059698e-02*G0_0_0 - 5.791342868165741e-01*G0_0_1 - 5.791342868165754e-01*G0_1_0 + 2.863377700617282e-01*G0_1_1;
    block[201] = 1.033399470899441e-01*G0_0_0 - 3.014081790123589e-02*G0_0_1 - 3.014081790123387e-02*G0_1_0 + 1.033399470899448e-01*G0_1_1;
    block[202] = -1.119516093474399e-01*G0_0_0 + 4.521122685185330e-02*G0_0_1 + 4.521122685185160e-02*G0_1_0 - 1.722332451499021e-02*G0_1_1;
    block[203] = 1.119516093474414e-01*G0_0_0 - 3.014081790123274e-02*G0_0_1 - 3.014081790123451e-02*G0_1_0;
    block[204] = 7.319912918871172e-01*G0_0_0 + 2.040963955026443e+00*G0_0_1 + 2.040963955026443e+00*G0_1_0 - 6.114280202821867e-01*G0_1_1;
    block[205] = 3.875248015873036e-01*G0_0_0 - 4.714885085978768e-01*G0_0_1 - 4.714885085978801e-01*G0_1_0 - 3.186315035273334e-01*G0_1_1;
    block[206] = -3.444664902998236e-01*G0_0_0 + 1.033399470899415e-01*G0_0_1 + 1.033399470899463e-01*G0_1_0 + 3.444664902998035e-02*G0_1_1;
    block[207] = -3.810660548941776e+00*G0_0_0 - 2.409112516534378e+00*G0_0_1 - 2.409112516534378e+00*G0_1_0 + 4.305831128755544e-03*G0_1_1;
    block[208] = 1.033399470899459e+00*G0_0_0 + 6.587921626984078e-01*G0_0_1 + 6.587921626984062e-01*G0_1_0 + 3.272431657848296e-01*G0_1_1;
    block[209] = 2.023740630511457e+00*G0_0_0 + 1.610380842151664e+00*G0_0_1 + 1.610380842151665e+00*G0_1_0 + 6.803213183421408e-01*G0_1_1;
    block[210] = 2.022879464285708e-01*G0_0_0 + 2.022879464285706e-01*G0_0_1 - 6.480275848765400e-01*G0_1_0 - 6.480275848765402e-01*G0_1_1;
    block[211] = -4.081927910052893e-02*G0_0_0;
    block[212] = 1.615547839506163e-01*G0_0_1 + 2.023740630511445e-01*G0_1_1;
    block[213] = 1.420924272486769e-01*G0_0_0 + 7.104621362433972e-02*G0_0_1 + 7.104621362433897e-02*G0_1_0;
    block[214] = 1.313278494268061e-01*G0_0_0 + 1.011870315255698e-01*G0_0_1 + 1.011870315255714e-01*G0_1_0 + 7.104621362433852e-02*G0_1_1;
    block[215] = 1.722332451499115e-01*G0_0_0 + 1.420924272486784e-01*G0_0_1 + 1.420924272486767e-01*G0_1_0 + 1.119516093474414e-01*G0_1_1;
    block[216] = 3.401606591710727e-01*G0_0_0 + 2.691144455467342e-01*G0_0_1 + 2.691144455467329e-01*G0_1_0 + 1.980682319223961e-01*G0_1_1;
    block[217] = -3.401606591710727e-01*G0_0_0 - 6.695567405202784e-01*G0_0_1 - 2.691144455467330e-01*G0_1_0 - 9.386711860670122e-01*G0_1_1;
    block[218] = 8.181079144620749e-01*G0_0_0 + 1.300361000881827e+00*G0_0_1 + 5.855930335096927e-01*G0_1_0 + 1.963458994708984e+00*G0_1_1;
    block[219] = -9.063774526014040e-01*G0_0_0 - 1.702956211419744e+00*G0_0_1 - 3.767602237654278e-01*G0_1_0 - 2.568428268298046e+00*G0_1_1;
    block[220] = 1.989293981481471e+00*G0_0_0 + 7.083092206790078e-01*G0_0_1 + 7.083092206790078e-01*G0_1_0 + 1.989293981481471e+00*G0_1_1;
    block[221] = -2.863377700617294e-01*G0_0_0 + 9.946469907407337e-01*G0_0_1 + 9.946469907407365e-01*G0_1_0 - 2.863377700617274e-01*G0_1_1;
    block[222] = 2.863377700617300e-01*G0_0_0 - 5.791342868165757e-01*G0_0_1 - 5.791342868165772e-01*G0_1_0 - 4.951705798059858e-02*G0_1_1;
    block[223] = -3.595368992504413e-01*G0_0_0 + 3.035610945767181e-01*G0_0_1 + 3.035610945767194e-01*G0_1_0 + 7.104621362433845e-02*G0_1_1;
    block[224] = 1.980682319223987e-01*G0_0_0 - 7.104621362433895e-02*G0_0_1 - 7.104621362433897e-02*G0_1_0;
    block[225] = -2.820319389329793e+00*G0_0_0 - 1.158268573633149e+00*G0_0_1 - 1.158268573633150e+00*G0_1_0 + 5.037822420634926e-01*G0_1_1;
    block[226] = 1.356336805555552e+00*G0_0_0 + 7.836612654320966e-01*G0_0_1 + 7.836612654320938e-01*G0_1_0 + 2.109857253086389e-01*G0_1_1;
    block[227] = -6.674038249559074e-01*G0_0_0 - 4.047481261022894e-01*G0_0_1 - 4.047481261022911e-01*G0_1_0 - 1.420924272486762e-01*G0_1_1;
    block[228] = 1.194868138227505e+00*G0_0_0 + 6.221925981040504e-01*G0_0_1 + 6.221925981040507e-01*G0_1_0 + 4.951705798059267e-02*G0_1_1;
    block[229] = -4.198185350529057e-01*G0_0_0 - 3.466194058641985e-01*G0_0_1 - 3.466194058641937e-01*G0_1_0 - 2.734202766754815e-01*G0_1_1;
    block[230] = -9.903411596119864e-01*G0_0_0 - 7.276854607583685e-01*G0_0_1 - 7.276854607583697e-01*G0_1_0 - 4.650297619047545e-01*G0_1_1;
    block[231] = -6.480275848765409e-01*G0_0_0 - 6.480275848765410e-01*G0_0_1 + 2.022879464285704e-01*G0_1_0 + 2.022879464285705e-01*G0_1_1;
    block[232] = 2.023740630511463e-01*G0_0_0 + 1.615547839506161e-01*G0_1_0;
    block[233] = -4.081927910052856e-02*G0_1_1;
    block[234] = 1.980682319223998e-01*G0_0_0 + 2.691144455467381e-01*G0_0_1 + 2.691144455467355e-01*G0_1_0 + 3.401606591710736e-01*G0_1_1;
    block[235] = 1.119516093474384e-01*G0_0_0 + 1.420924272486748e-01*G0_0_1 + 1.420924272486752e-01*G0_1_0 + 1.722332451499093e-01*G0_1_1;
    block[236] = 7.104621362434002e-02*G0_0_0 + 1.011870315255728e-01*G0_0_1 + 1.011870315255715e-01*G0_1_0 + 1.313278494268062e-01*G0_1_1;
    block[237] = 7.104621362433676e-02*G0_0_1 + 7.104621362433938e-02*G0_1_0 + 1.420924272486764e-01*G0_1_1;
    block[238] = -7.104621362433697e-02*G0_0_1 - 7.104621362433938e-02*G0_1_0 + 1.980682319223965e-01*G0_1_1;
    block[239] = 7.104621362433576e-02*G0_0_0 + 3.035610945767180e-01*G0_0_1 + 3.035610945767188e-01*G0_1_0 - 3.595368992504394e-01*G0_1_1;
    block[240] = -4.951705798059698e-02*G0_0_0 - 5.791342868165755e-01*G0_0_1 - 5.791342868165741e-01*G0_1_0 + 2.863377700617282e-01*G0_1_1;
    block[241] = -2.863377700617297e-01*G0_0_0 + 9.946469907407365e-01*G0_0_1 + 9.946469907407337e-01*G0_1_0 - 2.863377700617276e-01*G0_1_1;
    block[242] = 1.989293981481474e+00*G0_0_0 + 7.083092206790077e-01*G0_0_1 + 7.083092206790078e-01*G0_1_0 + 1.989293981481469e+00*G0_1_1;
    block[243] = -2.568428268298050e+00*G0_0_0 - 3.767602237654294e-01*G0_0_1 - 1.702956211419743e+00*G0_1_0 - 9.063774526014055e-01*G0_1_1;
    block[244] = 1.963458994708988e+00*G0_0_0 + 5.855930335096978e-01*G0_0_1 + 1.300361000881826e+00*G0_1_0 + 8.181079144620770e-01*G0_1_1;
    block[245] = -9.386711860670163e-01*G0_0_0 - 2.691144455467389e-01*G0_0_1 - 6.695567405202781e-01*G0_1_0 - 3.401606591710732e-01*G0_1_1;
    block[246] = 5.037822420634951e-01*G0_0_0 - 1.158268573633146e+00*G0_0_1 - 1.158268573633148e+00*G0_1_0 - 2.820319389329789e+00*G0_1_1;
    block[247] = 4.951705798059566e-02*G0_0_0 + 6.221925981040490e-01*G0_0_1 + 6.221925981040514e-01*G0_1_0 + 1.194868138227504e+00*G0_1_1;
    block[248] = -4.650297619047605e-01*G0_0_0 - 7.276854607583717e-01*G0_0_1 - 7.276854607583733e-01*G0_1_0 - 9.903411596119878e-01*G0_1_1;
    block[249] = 2.109857253086362e-01*G0_0_0 + 7.836612654320888e-01*G0_0_1 + 7.836612654320910e-01*G0_1_0 + 1.356336805555548e+00*G0_1_1;
    block[250] = -2.734202766754779e-01*G0_0_0 - 3.466194058641928e-01*G0_0_1 - 3.466194058641913e-01*G0_1_0 - 4.198185350529048e-01*G0_1_1;
    block[251] = -1.420924272486759e-01*G0_0_0 - 4.047481261022874e-01*G0_0_1 - 4.047481261022904e-01*G0_1_0 - 6.674038249559042e-01*G0_1_1;
    block[252] = 5.942046957671944e-01*G0_0_0 + 5.942046957671941e-01*G0_0_1 - 1.584545855379188e-02*G0_1_0 - 1.584545855379184e-02*G0_1_1;
    block[253] = -4.499593529541438e-01*G0_0_0 - 3.802910052910031e-01*G0_1_0;
    block[254] = -3.797743055555498e-02*G0_1_1;
    block[255] = -3.595368992504424e-01*G0_0_0 - 6.630979938271608e-01*G0_0_1 - 6.630979938271582e-01*G0_1_0 - 8.956128747795363e-01*G0_1_1;
    block[256] = -1.119516093474382e-01*G0_0_0 - 1.571628361992909e-01*G0_0_1 - 1.571628361992932e-01*G0_1_0 - 2.195973875661380e-01*G0_1_1;
    block[257] = -1.722332451499128e-02*G0_0_0 - 1.485511739417980e-01*G0_0_1 - 1.485511739417975e-01*G0_1_0 - 2.971023478835944e-01*G0_1_1;
    block[258] = 3.014081790123647e-02*G0_0_1 + 3.014081790123539e-02*G0_1_0 + 1.313278494268074e-01*G0_1_1;
    block[259] = -3.014081790123472e-02*G0_0_1 - 3.014081790123545e-02*G0_1_0 + 1.119516093474407e-01*G0_1_1;
    block[260] = -1.722332451498964e-02*G0_0_0 + 4.521122685185099e-02*G0_0_1 + 4.521122685185348e-02*G0_1_0 - 1.119516093474405e-01*G0_1_1;
    block[261] = 1.033399470899441e-01*G0_0_0 - 3.014081790123398e-02*G0_0_1 - 3.014081790123586e-02*G0_1_0 + 1.033399470899448e-01*G0_1_1;
    block[262] = 2.863377700617300e-01*G0_0_0 - 5.791342868165772e-01*G0_0_1 - 5.791342868165756e-01*G0_1_0 - 4.951705798059852e-02*G0_1_1;
    block[263] = -2.568428268298050e+00*G0_0_0 - 1.702956211419743e+00*G0_0_1 - 3.767602237654294e-01*G0_1_0 - 9.063774526014053e-01*G0_1_1;
    block[264] = 4.417782738095219e+00*G0_0_0 + 1.898871527777767e+00*G0_0_1 + 1.898871527777767e+00*G0_1_0 + 3.074363425925912e+00*G0_1_1;
    block[265] = -3.957058807319207e+00*G0_0_0 - 1.453218005952376e+00*G0_0_1 - 2.503840801366831e+00*G0_1_0 - 1.804143242945321e+00*G0_1_1;
    block[266] = 1.963458994708987e+00*G0_0_0 + 6.630979938271618e-01*G0_0_1 + 1.377865961199288e+00*G0_1_0 + 8.956128747795365e-01*G0_1_1;
    block[267] = -6.114280202821897e-01*G0_0_0 + 2.040963955026440e+00*G0_0_1 + 2.040963955026449e+00*G0_1_0 + 7.319912918871216e-01*G0_1_1;
    block[268] = 4.305831128749648e-03*G0_0_0 - 2.409112516534376e+00*G0_0_1 - 2.409112516534387e+00*G0_1_0 - 3.810660548941786e+00*G0_1_1;
    block[269] = 6.803213183421518e-01*G0_0_0 + 1.610380842151667e+00*G0_0_1 + 1.610380842151673e+00*G0_1_0 + 2.023740630511460e+00*G0_1_1;
    block[270] = -3.186315035273295e-01*G0_0_0 - 4.714885085978751e-01*G0_0_1 - 4.714885085978798e-01*G0_1_0 + 3.875248015873014e-01*G0_1_1;
    block[271] = 3.272431657848237e-01*G0_0_0 + 6.587921626984056e-01*G0_0_1 + 6.587921626984083e-01*G0_1_0 + 1.033399470899466e+00*G0_1_1;
    block[272] = 3.444664902998103e-02*G0_0_0 + 1.033399470899431e-01*G0_0_1 + 1.033399470899441e-01*G0_1_0 - 3.444664902998235e-01*G0_1_1;
    block[273] = -4.499593529541437e-01*G0_0_0 - 4.499593529541435e-01*G0_0_1 - 6.966834766313905e-02*G0_1_0 - 6.966834766313930e-02*G0_1_1;
    block[274] = 5.942046957671943e-01*G0_0_0 + 6.100501543209851e-01*G0_1_0;
    block[275] = -3.797743055555514e-02*G0_1_1;
    block[276] = 2.863377700617295e-01*G0_0_0 + 8.654720568783054e-01*G0_0_1 + 8.654720568783039e-01*G0_1_0 + 1.395089285714280e+00*G0_1_1;
    block[277] = 1.033399470899448e-01*G0_0_0 + 1.334807649911795e-01*G0_0_1 + 1.334807649911808e-01*G0_1_0 + 2.669615299823624e-01*G0_1_1;
    block[278] = -1.722332451499325e-02*G0_0_0 - 6.243455136684394e-02*G0_0_1 - 6.243455136684498e-02*G0_1_0 - 2.195973875661376e-01*G0_1_1;
    block[279] = 3.014081790123246e-02*G0_0_1 + 3.014081790123535e-02*G0_1_0 + 1.722332451499105e-01*G0_1_1;
    block[280] = -3.014081790123430e-02*G0_0_1 - 3.014081790123534e-02*G0_1_0 + 7.104621362433750e-02*G0_1_1;
    block[281] = -1.722332451499278e-02*G0_0_0 + 1.313278494268074e-01*G0_0_1 + 1.313278494268075e-01*G0_1_0 - 1.722332451499095e-02*G0_1_1;
    block[282] = -1.119516093474399e-01*G0_0_0 + 4.521122685185149e-02*G0_0_1 + 4.521122685185330e-02*G0_1_0 - 1.722332451499022e-02*G0_1_1;
    block[283] = -3.595368992504411e-01*G0_0_0 + 3.035610945767193e-01*G0_0_1 + 3.035610945767180e-01*G0_1_0 + 7.104621362433844e-02*G0_1_1;
    block[284] = 1.963458994708988e+00*G0_0_0 + 1.300361000881826e+00*G0_0_1 + 5.855930335096977e-01*G0_1_0 + 8.181079144620770e-01*G0_1_1;
    block[285] = -3.957058807319208e+00*G0_0_0 - 2.503840801366831e+00*G0_0_1 - 1.453218005952376e+00*G0_1_0 - 1.804143242945321e+00*G0_1_1;
    block[286] = 4.417782738095219e+00*G0_0_0 + 2.518911210317452e+00*G0_0_1 + 2.518911210317452e+00*G0_1_0 + 3.694403108465598e+00*G0_1_1;
    block[287] = -2.568428268298049e+00*G0_0_0 - 8.654720568783063e-01*G0_0_1 - 2.191668044532619e+00*G0_1_0 - 1.395089285714280e+00*G0_1_1;
    block[288] = 6.803213183421511e-01*G0_0_0 - 9.300595238095163e-01*G0_0_1 - 9.300595238095223e-01*G0_1_0 - 5.166997354497342e-01*G0_1_1;
    block[289] = 4.305831128749012e-03*G0_0_0 + 2.413418347663128e+00*G0_0_1 + 2.413418347663136e+00*G0_1_0 + 1.011870315255734e+00*G0_1_1;
    block[290] = -6.114280202821879e-01*G0_0_0 - 2.652391975308632e+00*G0_0_1 - 2.652391975308637e+00*G0_1_0 - 3.961364638447963e+00*G0_1_1;
    block[291] = 3.272431657848258e-01*G0_0_0 - 3.315489969135839e-01*G0_0_1 - 3.315489969135836e-01*G0_1_0 + 4.305831128747734e-02*G0_1_1;
    block[292] = -3.186315035273309e-01*G0_0_0 + 1.528570050705494e-01*G0_0_1 + 1.528570050705498e-01*G0_1_0 + 1.011870315255729e+00*G0_1_1;
    block[293] = 3.444664902998595e-02*G0_0_0 - 6.889329805996093e-02*G0_0_1 - 6.889329805996240e-02*G0_1_0 - 5.166997354497322e-01*G0_1_1;
    block[294] = 2.023740630511460e-01*G0_0_0 + 2.023740630511462e-01*G0_0_1 + 4.081927910052992e-02*G0_1_0 + 4.081927910053010e-02*G0_1_1;
    block[295] = -6.480275848765407e-01*G0_0_0 - 8.503155313051101e-01*G0_1_0;
    block[296] = -4.081927910052866e-02*G0_1_1;
    block[297] = -2.863377700617278e-01*G0_0_0 - 1.280984760802464e+00*G0_0_1 - 1.280984760802463e+00*G0_1_0 - 2.561969521604925e+00*G0_1_1;
    block[298] = -4.951705798059839e-02*G0_0_0 + 5.296172288359774e-01*G0_0_1 + 5.296172288359778e-01*G0_1_0 + 1.395089285714280e+00*G0_1_1;
    block[299] = 7.104621362433909e-02*G0_0_0 - 2.325148809523797e-01*G0_0_1 - 2.325148809523803e-01*G0_1_0 - 8.956128747795374e-01*G0_1_1;
    block[300] = 7.104621362433980e-02*G0_0_1 + 7.104621362433901e-02*G0_1_0 + 3.401606591710749e-01*G0_1_1;
    block[301] = -7.104621362433873e-02*G0_0_1 - 7.104621362433902e-02*G0_1_0;
    block[302] = 7.104621362433954e-02*G0_0_0 - 3.014081790123466e-02*G0_0_1 - 3.014081790123477e-02*G0_1_0;
    block[303] = 1.119516093474414e-01*G0_0_0 - 3.014081790123450e-02*G0_0_1 - 3.014081790123274e-02*G0_1_0;
    block[304] = 1.980682319223987e-01*G0_0_0 - 7.104621362433899e-02*G0_0_1 - 7.104621362433895e-02*G0_1_0;
    block[305] = -9.386711860670163e-01*G0_0_0 - 6.695567405202781e-01*G0_0_1 - 2.691144455467389e-01*G0_1_0 - 3.401606591710732e-01*G0_1_1;
    block[306] = 1.963458994708987e+00*G0_0_0 + 1.377865961199288e+00*G0_0_1 + 6.630979938271617e-01*G0_1_0 + 8.956128747795364e-01*G0_1_1;
    block[307] = -2.568428268298049e+00*G0_0_0 - 2.191668044532619e+00*G0_0_1 - 8.654720568783063e-01*G0_1_0 - 1.395089285714280e+00*G0_1_1;
    block[308] = 1.989293981481473e+00*G0_0_0 + 1.280984760802464e+00*G0_0_1 + 1.280984760802464e+00*G0_1_0 + 2.561969521604925e+00*G0_1_1;
    block[309] = -4.650297619047606e-01*G0_0_0 + 2.626556988536139e-01*G0_0_1 + 2.626556988536171e-01*G0_1_0;
    block[310] = 4.951705798059831e-02*G0_0_0 - 5.726755401234559e-01*G0_0_1 - 5.726755401234591e-01*G0_1_0;
    block[311] = 5.037822420634914e-01*G0_0_0 + 1.662050815696643e+00*G0_0_1 + 1.662050815696644e+00*G0_1_0;
    block[312] = -2.734202766754821e-01*G0_0_0 + 7.319912918871362e-02*G0_0_1 + 7.319912918871012e-02*G0_1_0;
    block[313] = 2.109857253086390e-01*G0_0_0 - 5.726755401234543e-01*G0_0_1 - 5.726755401234552e-01*G0_1_0;
    block[314] = -1.420924272486788e-01*G0_0_0 + 2.626556988536124e-01*G0_0_1 + 2.626556988536144e-01*G0_1_0;
    block[315] = -2.152915564373898e-01*G0_0_0 - 2.152915564373896e-01*G0_0_1 - 2.152915564373898e-01*G0_1_0 - 2.152915564373902e-01*G0_1_1;
    block[316] = 1.076457782186945e-01*G0_0_0;
    block[317] = 1.076457782186940e-01*G0_1_1;
    block[318] = -6.674038249559083e-01*G0_0_0 - 2.626556988536180e-01*G0_0_1 - 2.626556988536164e-01*G0_1_0;
    block[319] = -3.444664902998177e-01*G0_0_0 - 4.478064373897656e-01*G0_0_1 - 4.478064373897641e-01*G0_1_0 - 5.166997354497281e-01*G0_1_1;
    block[320] = -5.166997354497365e-01*G0_0_0 - 4.478064373897702e-01*G0_0_1 - 4.478064373897696e-01*G0_1_0 - 3.444664902998222e-01*G0_1_1;
    block[321] = -2.626556988536117e-01*G0_0_1 - 2.626556988536156e-01*G0_1_0 - 6.674038249559048e-01*G0_1_1;
    block[322] = 2.626556988536114e-01*G0_0_1 + 2.626556988536156e-01*G0_1_0 - 4.650297619047569e-01*G0_1_1;
    block[323] = -5.166997354497266e-01*G0_0_0 - 9.300595238095174e-01*G0_0_1 - 9.300595238095223e-01*G0_1_0 + 6.803213183421485e-01*G0_1_1;
    block[324] = 7.319912918871174e-01*G0_0_0 + 2.040963955026444e+00*G0_0_1 + 2.040963955026443e+00*G0_1_0 - 6.114280202821867e-01*G0_1_1;
    block[325] = -2.820319389329793e+00*G0_0_0 - 1.158268573633150e+00*G0_0_1 - 1.158268573633149e+00*G0_1_0 + 5.037822420634929e-01*G0_1_1;
    block[326] = 5.037822420634951e-01*G0_0_0 - 1.158268573633148e+00*G0_0_1 - 1.158268573633146e+00*G0_1_0 - 2.820319389329789e+00*G0_1_1;
    block[327] = -6.114280202821898e-01*G0_0_0 + 2.040963955026449e+00*G0_0_1 + 2.040963955026439e+00*G0_1_0 + 7.319912918871216e-01*G0_1_1;
    block[328] = 6.803213183421516e-01*G0_0_0 - 9.300595238095225e-01*G0_0_1 - 9.300595238095163e-01*G0_1_0 - 5.166997354497344e-01*G0_1_1;
    block[329] = -4.650297619047607e-01*G0_0_0 + 2.626556988536171e-01*G0_0_1 + 2.626556988536139e-01*G0_1_0;
    block[330] = 7.061563051146361e+00*G0_0_0 + 3.100198412698395e+00*G0_0_1 + 3.100198412698395e+00*G0_1_0 + 7.061563051146347e+00*G0_1_1;
    block[331] = -6.329571759259244e+00*G0_0_0 - 3.057140101410927e+00*G0_0_1 - 3.057140101410917e+00*G0_1_0 - 1.808449074074056e+00*G0_1_1;
    block[332] = 2.755731922398586e+00*G0_0_0 + 1.377865961199290e+00*G0_0_1 + 1.377865961199289e+00*G0_1_0 + 1.033399470899463e+00*G0_1_1;
    block[333] = -1.808449074074061e+00*G0_0_0 - 3.057140101410915e+00*G0_0_1 - 3.057140101410911e+00*G0_1_0 - 6.329571759259230e+00*G0_1_1;
    block[334] = 1.420924272486760e+00*G0_0_0 + 1.463982583774248e+00*G0_0_1 + 1.463982583774230e+00*G0_1_0 + 1.420924272486758e+00*G0_1_1;
    block[335] = 1.033399470899463e+00*G0_0_0 + 1.377865961199280e+00*G0_0_1 + 1.377865961199292e+00*G0_1_0 + 2.755731922398575e+00*G0_1_1;
    block[336] = -5.382288910934608e-02*G0_0_0 - 5.382288910934608e-02*G0_0_1 - 5.382288910934648e-02*G0_1_0 - 5.382288910934623e-02*G0_1_1;
    block[337] = -5.382288910934721e-02*G0_0_0;
    block[338] = 1.076457782186943e-01*G0_1_1;
    block[339] = 1.356336805555556e+00*G0_0_0 + 5.726755401234598e-01*G0_0_1 + 5.726755401234590e-01*G0_1_0;
    block[340] = 3.875248015872931e-01*G0_0_0 + 8.590133101851801e-01*G0_0_1 + 8.590133101851788e-01*G0_1_0 + 1.011870315255729e+00*G0_1_1;
    block[341] = 4.305831128748241e-02*G0_0_0 + 3.746073082010576e-01*G0_0_1 + 3.746073082010566e-01*G0_1_0 + 1.033399470899462e+00*G0_1_1;
    block[342] = -7.319912918871312e-02*G0_0_1 - 7.319912918871331e-02*G0_1_0 - 4.198185350529078e-01*G0_1_1;
    block[343] = 7.319912918871238e-02*G0_0_1 + 7.319912918871344e-02*G0_1_0 - 2.734202766754827e-01*G0_1_1;
    block[344] = 4.305831128747617e-02*G0_0_0 - 3.315489969135789e-01*G0_0_1 - 3.315489969135805e-01*G0_1_0 + 3.272431657848291e-01*G0_1_1;
    block[345] = 3.875248015873035e-01*G0_0_0 - 4.714885085978804e-01*G0_0_1 - 4.714885085978768e-01*G0_1_0 - 3.186315035273334e-01*G0_1_1;
    block[346] = 1.356336805555552e+00*G0_0_0 + 7.836612654320938e-01*G0_0_1 + 7.836612654320966e-01*G0_1_0 + 2.109857253086388e-01*G0_1_1;
    block[347] = 4.951705798059571e-02*G0_0_0 + 6.221925981040514e-01*G0_0_1 + 6.221925981040491e-01*G0_1_0 + 1.194868138227504e+00*G0_1_1;
    block[348] = 4.305831128749703e-03*G0_0_0 - 2.409112516534387e+00*G0_0_1 - 2.409112516534375e+00*G0_1_0 - 3.810660548941786e+00*G0_1_1;
    block[349] = 4.305831128749012e-03*G0_0_0 + 2.413418347663136e+00*G0_0_1 + 2.413418347663128e+00*G0_1_0 + 1.011870315255734e+00*G0_1_1;
    block[350] = 4.951705798059831e-02*G0_0_0 - 5.726755401234591e-01*G0_0_1 - 5.726755401234559e-01*G0_1_0;
    block[351] = -6.329571759259244e+00*G0_0_0 - 3.057140101410917e+00*G0_0_1 - 3.057140101410927e+00*G0_1_0 - 1.808449074074056e+00*G0_1_1;
    block[352] = 9.946469907407382e+00*G0_0_0 + 4.973234953703691e+00*G0_0_1 + 4.973234953703693e+00*G0_1_0 + 8.654720568783034e+00*G0_1_1;
    block[353] = -6.329571759259252e+00*G0_0_0 - 3.272431657848318e+00*G0_0_1 - 3.272431657848322e+00*G0_1_0 - 2.023740630511462e+00*G0_1_1;
    block[354] = -3.875248015873077e-01*G0_0_0 + 2.551204943783051e+00*G0_0_1 + 2.551204943783052e+00*G0_1_0 - 3.875248015873116e-01*G0_1_1;
    block[355] = -3.875248015872880e-01*G0_0_0 - 2.938729745370362e+00*G0_0_1 - 2.938729745370353e+00*G0_1_0 - 5.877459490740712e+00*G0_1_1;
    block[356] = -8.611662257495868e-02*G0_0_0 - 4.305831128747155e-02*G0_0_1 - 4.305831128747688e-02*G0_1_0 + 1.420924272486769e+00*G0_1_1;
    block[357] = 1.076457782186944e-01*G0_0_0 + 1.076457782186944e-01*G0_0_1 + 1.076457782186938e-01*G0_1_0 + 1.076457782186938e-01*G0_1_1;
    block[358] = -2.152915564373885e-01*G0_0_0;
    block[359] = 1.076457782186941e-01*G0_1_1;
    block[360] = -2.820319389329796e+00*G0_0_0 - 1.662050815696644e+00*G0_0_1 - 1.662050815696644e+00*G0_1_0;
    block[361] = 7.319912918871269e-01*G0_0_0 - 1.308972663139323e+00*G0_0_1 - 1.308972663139324e+00*G0_1_0 - 3.961364638447957e+00*G0_1_1;
    block[362] = -5.166997354497355e-01*G0_0_0 + 4.133597883597854e-01*G0_0_1 + 4.133597883597890e-01*G0_1_0 + 2.023740630511459e+00*G0_1_1;
    block[363] = -2.626556988536148e-01*G0_0_1 - 2.626556988536157e-01*G0_1_0 - 9.903411596119891e-01*G0_1_1;
    block[364] = 2.626556988536167e-01*G0_0_1 + 2.626556988536157e-01*G0_1_0 - 1.420924272486747e-01*G0_1_1;
    block[365] = -5.166997354497366e-01*G0_0_0 - 6.889329805996627e-02*G0_0_1 - 6.889329805996497e-02*G0_1_0 + 3.444664902998321e-02*G0_1_1;
    block[366] = -3.444664902998236e-01*G0_0_0 + 1.033399470899463e-01*G0_0_1 + 1.033399470899415e-01*G0_1_0 + 3.444664902998032e-02*G0_1_1;
    block[367] = -6.674038249559073e-01*G0_0_0 - 4.047481261022910e-01*G0_0_1 - 4.047481261022894e-01*G0_1_0 - 1.420924272486761e-01*G0_1_1;
    block[368] = -4.650297619047607e-01*G0_0_0 - 7.276854607583733e-01*G0_0_1 - 7.276854607583717e-01*G0_1_0 - 9.903411596119878e-01*G0_1_1;
    block[369] = 6.803213183421520e-01*G0_0_0 + 1.610380842151673e+00*G0_0_1 + 1.610380842151667e+00*G0_1_0 + 2.023740630511460e+00*G0_1_1;
    block[370] = -6.114280202821877e-01*G0_0_0 - 2.652391975308636e+00*G0_0_1 - 2.652391975308632e+00*G0_1_0 - 3.961364638447963e+00*G0_1_1;
    block[371] = 5.037822420634916e-01*G0_0_0 + 1.662050815696644e+00*G0_0_1 + 1.662050815696643e+00*G0_1_0;
    block[372] = 2.755731922398586e+00*G0_0_0 + 1.377865961199289e+00*G0_0_1 + 1.377865961199290e+00*G0_1_0 + 1.033399470899463e+00*G0_1_1;
    block[373] = -6.329571759259250e+00*G0_0_0 - 3.272431657848321e+00*G0_0_1 - 3.272431657848319e+00*G0_1_0 - 2.023740630511462e+00*G0_1_1;
    block[374] = 7.061563051146369e+00*G0_0_0 + 3.961364638447962e+00*G0_0_1 + 3.961364638447963e+00*G0_1_0 + 7.922729276895923e+00*G0_1_1;
    block[375] = 1.420924272486773e+00*G0_0_0 - 4.305831128747456e-02*G0_0_1 - 4.305831128746654e-02*G0_1_0 - 8.611662257495120e-02*G0_1_1;
    block[376] = -1.808449074074077e+00*G0_0_0 + 1.248691027336859e+00*G0_0_1 + 1.248691027336849e+00*G0_1_0 - 2.023740630511462e+00*G0_1_1;
    block[377] = 1.033399470899471e+00*G0_0_0 - 3.444664902998241e-01*G0_0_1 - 3.444664902998233e-01*G0_1_0 + 1.033399470899465e+00*G0_1_1;
    block[378] = -5.382288910934641e-02*G0_0_0 - 5.382288910934629e-02*G0_0_1 - 5.382288910934459e-02*G0_1_0 - 5.382288910934438e-02*G0_1_1;
    block[379] = 1.076457782186949e-01*G0_0_0;
    block[380] = -5.382288910934881e-02*G0_1_1;
    block[381] = -4.198185350529082e-01*G0_0_0 - 7.319912918871073e-02*G0_0_1 - 7.319912918871038e-02*G0_1_0;
    block[382] = 1.033399470899462e+00*G0_0_0 + 3.746073082010519e-01*G0_0_1 + 3.746073082010521e-01*G0_1_0 + 4.305831128747380e-02*G0_1_1;
    block[383] = 1.011870315255728e+00*G0_0_0 + 8.590133101851803e-01*G0_0_1 + 8.590133101851823e-01*G0_1_0 + 3.875248015872997e-01*G0_1_1;
    block[384] = 5.726755401234501e-01*G0_0_1 + 5.726755401234505e-01*G0_1_0 + 1.356336805555546e+00*G0_1_1;
    block[385] = -5.726755401234517e-01*G0_0_1 - 5.726755401234505e-01*G0_1_0 + 4.951705798060088e-02*G0_1_1;
    block[386] = 1.011870315255722e+00*G0_0_0 + 2.413418347663126e+00*G0_0_1 + 2.413418347663127e+00*G0_1_0 + 4.305831128742610e-03*G0_1_1;
    block[387] = -3.810660548941776e+00*G0_0_0 - 2.409112516534378e+00*G0_0_1 - 2.409112516534378e+00*G0_1_0 + 4.305831128755461e-03*G0_1_1;
    block[388] = 1.194868138227505e+00*G0_0_0 + 6.221925981040506e-01*G0_0_1 + 6.221925981040501e-01*G0_1_0 + 4.951705798059267e-02*G0_1_1;
    block[389] = 2.109857253086362e-01*G0_0_0 + 7.836612654320909e-01*G0_0_1 + 7.836612654320888e-01*G0_1_0 + 1.356336805555548e+00*G0_1_1;
    block[390] = -3.186315035273294e-01*G0_0_0 - 4.714885085978798e-01*G0_0_1 - 4.714885085978751e-01*G0_1_0 + 3.875248015873014e-01*G0_1_1;
    block[391] = 3.272431657848258e-01*G0_0_0 - 3.315489969135835e-01*G0_0_1 - 3.315489969135838e-01*G0_1_0 + 4.305831128747735e-02*G0_1_1;
    block[392] = -2.734202766754821e-01*G0_0_0 + 7.319912918871012e-02*G0_0_1 + 7.319912918871356e-02*G0_1_0;
    block[393] = -1.808449074074061e+00*G0_0_0 - 3.057140101410911e+00*G0_0_1 - 3.057140101410915e+00*G0_1_0 - 6.329571759259230e+00*G0_1_1;
    block[394] = -3.875248015873077e-01*G0_0_0 + 2.551204943783052e+00*G0_0_1 + 2.551204943783050e+00*G0_1_0 - 3.875248015873116e-01*G0_1_1;
    block[395] = 1.420924272486773e+00*G0_0_0 - 4.305831128746655e-02*G0_0_1 - 4.305831128747434e-02*G0_1_0 - 8.611662257495133e-02*G0_1_1;
    block[396] = 8.654720568783027e+00*G0_0_0 + 4.973234953703672e+00*G0_0_1 + 4.973234953703672e+00*G0_1_0 + 9.946469907407364e+00*G0_1_1;
    block[397] = -5.877459490740709e+00*G0_0_0 - 2.938729745370354e+00*G0_0_1 - 2.938729745370346e+00*G0_1_0 - 3.875248015872924e-01*G0_1_1;
    block[398] = -2.023740630511452e+00*G0_0_0 - 3.272431657848302e+00*G0_0_1 - 3.272431657848311e+00*G0_1_0 - 6.329571759259227e+00*G0_1_1;
    block[399] = 1.076457782186934e-01*G0_0_0 + 1.076457782186933e-01*G0_0_1 + 1.076457782186938e-01*G0_1_0 + 1.076457782186934e-01*G0_1_1;
    block[400] = -5.382288910934691e-02*G0_0_0;
    block[401] = -5.382288910934763e-02*G0_1_1;
    block[402] = 1.194868138227509e+00*G0_0_0 + 5.726755401234563e-01*G0_0_1 + 5.726755401234518e-01*G0_1_0;
    block[403] = -3.810660548941780e+00*G0_0_0 - 1.401548032407400e+00*G0_0_1 - 1.401548032407398e+00*G0_1_0 + 1.011870315255730e+00*G0_1_1;
    block[404] = 1.011870315255729e+00*G0_0_0 - 1.401548032407397e+00*G0_0_1 - 1.401548032407402e+00*G0_1_0 - 3.810660548941782e+00*G0_1_1;
    block[405] = 5.726755401234581e-01*G0_0_1 + 5.726755401234545e-01*G0_1_0 + 1.194868138227508e+00*G0_1_1;
    block[406] = -5.726755401234590e-01*G0_0_1 - 5.726755401234549e-01*G0_1_0 + 2.109857253086399e-01*G0_1_1;
    block[407] = 1.011870315255737e+00*G0_0_0 + 1.528570050705517e-01*G0_0_1 + 1.528570050705468e-01*G0_1_0 - 3.186315035273339e-01*G0_1_1;
    block[408] = 1.033399470899459e+00*G0_0_0 + 6.587921626984061e-01*G0_0_1 + 6.587921626984079e-01*G0_1_0 + 3.272431657848296e-01*G0_1_1;
    block[409] = -4.198185350529056e-01*G0_0_0 - 3.466194058641937e-01*G0_0_1 - 3.466194058641986e-01*G0_1_0 - 2.734202766754814e-01*G0_1_1;
    block[410] = -2.734202766754779e-01*G0_0_0 - 3.466194058641914e-01*G0_0_1 - 3.466194058641928e-01*G0_1_0 - 4.198185350529048e-01*G0_1_1;
    block[411] = 3.272431657848238e-01*G0_0_0 + 6.587921626984085e-01*G0_0_1 + 6.587921626984058e-01*G0_1_0 + 1.033399470899466e+00*G0_1_1;
    block[412] = -3.186315035273309e-01*G0_0_0 + 1.528570050705499e-01*G0_0_1 + 1.528570050705492e-01*G0_1_0 + 1.011870315255728e+00*G0_1_1;
    block[413] = 2.109857253086390e-01*G0_0_0 - 5.726755401234553e-01*G0_0_1 - 5.726755401234543e-01*G0_1_0;
    block[414] = 1.420924272486760e+00*G0_0_0 + 1.463982583774231e+00*G0_0_1 + 1.463982583774248e+00*G0_1_0 + 1.420924272486758e+00*G0_1_1;
    block[415] = -3.875248015872880e-01*G0_0_0 - 2.938729745370353e+00*G0_0_1 - 2.938729745370362e+00*G0_1_0 - 5.877459490740710e+00*G0_1_1;
    block[416] = -1.808449074074077e+00*G0_0_0 + 1.248691027336849e+00*G0_0_1 + 1.248691027336859e+00*G0_1_0 - 2.023740630511462e+00*G0_1_1;
    block[417] = -5.877459490740709e+00*G0_0_0 - 2.938729745370346e+00*G0_0_1 - 2.938729745370355e+00*G0_1_0 - 3.875248015872924e-01*G0_1_1;
    block[418] = 8.654720568783031e+00*G0_0_0 + 3.681485615079343e+00*G0_0_1 + 3.681485615079343e+00*G0_1_0 + 8.654720568783032e+00*G0_1_1;
    block[419] = -2.023740630511462e+00*G0_0_0 + 1.248691027336847e+00*G0_0_1 + 1.248691027336857e+00*G0_1_0 - 1.808449074074069e+00*G0_1_1;
    block[420] = 1.076457782186936e-01*G0_0_0 + 1.076457782186935e-01*G0_0_1 + 1.076457782186928e-01*G0_1_0 + 1.076457782186929e-01*G0_1_1;
    block[421] = 1.076457782186948e-01*G0_0_0;
    block[422] = -2.152915564373867e-01*G0_1_1;
    block[423] = -9.903411596119894e-01*G0_0_0 - 2.626556988536154e-01*G0_0_1 - 2.626556988536156e-01*G0_1_0;
    block[424] = 2.023740630511456e+00*G0_0_0 + 4.133597883597865e-01*G0_0_1 + 4.133597883597900e-01*G0_1_0 - 5.166997354497316e-01*G0_1_1;
    block[425] = -3.961364638447954e+00*G0_0_0 - 1.308972663139323e+00*G0_0_1 - 1.308972663139325e+00*G0_1_0 + 7.319912918871225e-01*G0_1_1;
    block[426] = -1.662050815696642e+00*G0_0_1 - 1.662050815696636e+00*G0_1_0 - 2.820319389329788e+00*G0_1_1;
    block[427] = 1.662050815696644e+00*G0_0_1 + 1.662050815696636e+00*G0_1_0 + 5.037822420634882e-01*G0_1_1;
    block[428] = -3.961364638447955e+00*G0_0_0 - 2.652391975308631e+00*G0_0_1 - 2.652391975308626e+00*G0_1_0 - 6.114280202821796e-01*G0_1_1;
    block[429] = 2.023740630511457e+00*G0_0_0 + 1.610380842151665e+00*G0_0_1 + 1.610380842151664e+00*G0_1_0 + 6.803213183421406e-01*G0_1_1;
    block[430] = -9.903411596119864e-01*G0_0_0 - 7.276854607583698e-01*G0_0_1 - 7.276854607583686e-01*G0_1_0 - 4.650297619047545e-01*G0_1_1;
    block[431] = -1.420924272486760e-01*G0_0_0 - 4.047481261022904e-01*G0_0_1 - 4.047481261022873e-01*G0_1_0 - 6.674038249559042e-01*G0_1_1;
    block[432] = 3.444664902998102e-02*G0_0_0 + 1.033399470899441e-01*G0_0_1 + 1.033399470899430e-01*G0_1_0 - 3.444664902998235e-01*G0_1_1;
    block[433] = 3.444664902998594e-02*G0_0_0 - 6.889329805996240e-02*G0_0_1 - 6.889329805996099e-02*G0_1_0 - 5.166997354497321e-01*G0_1_1;
    block[434] = -1.420924272486788e-01*G0_0_0 + 2.626556988536144e-01*G0_0_1 + 2.626556988536124e-01*G0_1_0;
    block[435] = 1.033399470899463e+00*G0_0_0 + 1.377865961199292e+00*G0_0_1 + 1.377865961199280e+00*G0_1_0 + 2.755731922398575e+00*G0_1_1;
    block[436] = -8.611662257495876e-02*G0_0_0 - 4.305831128747693e-02*G0_0_1 - 4.305831128747171e-02*G0_1_0 + 1.420924272486769e+00*G0_1_1;
    block[437] = 1.033399470899472e+00*G0_0_0 - 3.444664902998233e-01*G0_0_1 - 3.444664902998240e-01*G0_1_0 + 1.033399470899465e+00*G0_1_1;
    block[438] = -2.023740630511452e+00*G0_0_0 - 3.272431657848311e+00*G0_0_1 - 3.272431657848302e+00*G0_1_0 - 6.329571759259227e+00*G0_1_1;
    block[439] = -2.023740630511462e+00*G0_0_0 + 1.248691027336857e+00*G0_0_1 + 1.248691027336847e+00*G0_1_0 - 1.808449074074069e+00*G0_1_1;
    block[440] = 7.922729276895910e+00*G0_0_0 + 3.961364638447950e+00*G0_0_1 + 3.961364638447950e+00*G0_1_0 + 7.061563051146342e+00*G0_1_1;
  }

};

/// This class contains the form to be evaluated, including
/// contributions from the interior and boundary of the domain.

class LinearForm : public dolfin::LinearForm
{
public:
  
  class TestElement : public dolfin::FiniteElement
  {
  public:
  
    TestElement() : dolfin::FiniteElement(), tensordims(0), subelements(0)
    {
      // Element is scalar, don't need to initialize tensordims
  
      // Element is simple, don't need to initialize subelements
    }
  
    ~TestElement()
    {
      if ( tensordims ) delete [] tensordims;
      if ( subelements )
      {
        for (unsigned int i = 0; i < elementdim(); i++)
          delete subelements[i];
        delete [] subelements;
      }
    }
  
    inline unsigned int spacedim() const
    {
      return 21;
    }
  
    inline unsigned int shapedim() const
    {
      return 2;
    }
  
    inline unsigned int tensordim(unsigned int i) const
    {
      dolfin_error("Element is scalar.");
      return 0;
    }
  
    inline unsigned int elementdim() const
    {
      return 1;
    }
  
    inline unsigned int rank() const
    {
      return 0;
    }
  
    void nodemap(int nodes[], const Cell& cell, const Mesh& mesh) const
    {
      static unsigned int edge_reordering_0[2][4] = {{0, 1, 2, 3}, {3, 2, 1, 0}};
      nodes[0] = cell.vertexID(0);
      nodes[1] = cell.vertexID(1);
      nodes[2] = cell.vertexID(2);
      int alignment = cell.edgeAlignment(0);
      int offset = mesh.numVertices();
      nodes[3] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][0];
      nodes[4] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][1];
      nodes[5] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][2];
      nodes[6] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][3];
      alignment = cell.edgeAlignment(1);
      nodes[7] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][0];
      nodes[8] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][1];
      nodes[9] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][2];
      nodes[10] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][3];
      alignment = cell.edgeAlignment(2);
      nodes[11] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][0];
      nodes[12] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][1];
      nodes[13] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][2];
      nodes[14] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][3];
      offset = offset + 4*mesh.numEdges();
      nodes[15] = offset + 6*cell.id() + 0;
      nodes[16] = offset + 6*cell.id() + 1;
      nodes[17] = offset + 6*cell.id() + 2;
      nodes[18] = offset + 6*cell.id() + 3;
      nodes[19] = offset + 6*cell.id() + 4;
      nodes[20] = offset + 6*cell.id() + 5;
    }
  
    void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
    {
      points[0] = map(0.000000000000000e+00, 0.000000000000000e+00);
      points[1] = map(1.000000000000000e+00, 0.000000000000000e+00);
      points[2] = map(0.000000000000000e+00, 1.000000000000000e+00);
      points[3] = map(8.000000000000000e-01, 2.000000000000000e-01);
      points[4] = map(6.000000000000000e-01, 4.000000000000000e-01);
      points[5] = map(4.000000000000000e-01, 6.000000000000000e-01);
      points[6] = map(2.000000000000000e-01, 8.000000000000000e-01);
      points[7] = map(0.000000000000000e+00, 8.000000000000000e-01);
      points[8] = map(0.000000000000000e+00, 6.000000000000000e-01);
      points[9] = map(0.000000000000000e+00, 4.000000000000000e-01);
      points[10] = map(0.000000000000000e+00, 2.000000000000000e-01);
      points[11] = map(2.000000000000000e-01, 0.000000000000000e+00);
      points[12] = map(4.000000000000000e-01, 0.000000000000000e+00);
      points[13] = map(6.000000000000000e-01, 0.000000000000000e+00);
      points[14] = map(8.000000000000000e-01, 0.000000000000000e+00);
      points[15] = map(2.000000000000000e-01, 2.000000000000000e-01);
      points[16] = map(4.000000000000000e-01, 2.000000000000000e-01);
      points[17] = map(6.000000000000000e-01, 2.000000000000000e-01);
      points[18] = map(2.000000000000000e-01, 4.000000000000000e-01);
      points[19] = map(4.000000000000000e-01, 4.000000000000000e-01);
      points[20] = map(2.000000000000000e-01, 6.000000000000000e-01);
      components[0] = 0;
      components[1] = 0;
      components[2] = 0;
      components[3] = 0;
      components[4] = 0;
      components[5] = 0;
      components[6] = 0;
      components[7] = 0;
      components[8] = 0;
      components[9] = 0;
      components[10] = 0;
      components[11] = 0;
      components[12] = 0;
      components[13] = 0;
      components[14] = 0;
      components[15] = 0;
      components[16] = 0;
      components[17] = 0;
      components[18] = 0;
      components[19] = 0;
      components[20] = 0;
    }
  
    void vertexeval(real values[], unsigned int vertex, const real x[], const Mesh& mesh) const
    {
      // FIXME: Temporary fix for Lagrange elements
      values[0] = x[vertex];
    }
  
    const FiniteElement& operator[] (unsigned int i) const
    {
      return *this;
    }
  
    FiniteElement& operator[] (unsigned int i)
    {
      return *this;
    }
  
    FiniteElementSpec spec() const
    {
      FiniteElementSpec s("Lagrange", "triangle", 5);
      return s;
    }
    
  private:
  
    unsigned int* tensordims;
    FiniteElement** subelements;
  
  };
    
  class FunctionElement_0 : public dolfin::FiniteElement
  {
  public:
  
    FunctionElement_0() : dolfin::FiniteElement(), tensordims(0), subelements(0)
    {
      // Element is scalar, don't need to initialize tensordims
  
      // Element is simple, don't need to initialize subelements
    }
  
    ~FunctionElement_0()
    {
      if ( tensordims ) delete [] tensordims;
      if ( subelements )
      {
        for (unsigned int i = 0; i < elementdim(); i++)
          delete subelements[i];
        delete [] subelements;
      }
    }
  
    inline unsigned int spacedim() const
    {
      return 21;
    }
  
    inline unsigned int shapedim() const
    {
      return 2;
    }
  
    inline unsigned int tensordim(unsigned int i) const
    {
      dolfin_error("Element is scalar.");
      return 0;
    }
  
    inline unsigned int elementdim() const
    {
      return 1;
    }
  
    inline unsigned int rank() const
    {
      return 0;
    }
  
    void nodemap(int nodes[], const Cell& cell, const Mesh& mesh) const
    {
      static unsigned int edge_reordering_0[2][4] = {{0, 1, 2, 3}, {3, 2, 1, 0}};
      nodes[0] = cell.vertexID(0);
      nodes[1] = cell.vertexID(1);
      nodes[2] = cell.vertexID(2);
      int alignment = cell.edgeAlignment(0);
      int offset = mesh.numVertices();
      nodes[3] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][0];
      nodes[4] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][1];
      nodes[5] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][2];
      nodes[6] = offset + 4*cell.edgeID(0) + edge_reordering_0[alignment][3];
      alignment = cell.edgeAlignment(1);
      nodes[7] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][0];
      nodes[8] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][1];
      nodes[9] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][2];
      nodes[10] = offset + 4*cell.edgeID(1) + edge_reordering_0[alignment][3];
      alignment = cell.edgeAlignment(2);
      nodes[11] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][0];
      nodes[12] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][1];
      nodes[13] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][2];
      nodes[14] = offset + 4*cell.edgeID(2) + edge_reordering_0[alignment][3];
      offset = offset + 4*mesh.numEdges();
      nodes[15] = offset + 6*cell.id() + 0;
      nodes[16] = offset + 6*cell.id() + 1;
      nodes[17] = offset + 6*cell.id() + 2;
      nodes[18] = offset + 6*cell.id() + 3;
      nodes[19] = offset + 6*cell.id() + 4;
      nodes[20] = offset + 6*cell.id() + 5;
    }
  
    void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
    {
      points[0] = map(0.000000000000000e+00, 0.000000000000000e+00);
      points[1] = map(1.000000000000000e+00, 0.000000000000000e+00);
      points[2] = map(0.000000000000000e+00, 1.000000000000000e+00);
      points[3] = map(8.000000000000000e-01, 2.000000000000000e-01);
      points[4] = map(6.000000000000000e-01, 4.000000000000000e-01);
      points[5] = map(4.000000000000000e-01, 6.000000000000000e-01);
      points[6] = map(2.000000000000000e-01, 8.000000000000000e-01);
      points[7] = map(0.000000000000000e+00, 8.000000000000000e-01);
      points[8] = map(0.000000000000000e+00, 6.000000000000000e-01);
      points[9] = map(0.000000000000000e+00, 4.000000000000000e-01);
      points[10] = map(0.000000000000000e+00, 2.000000000000000e-01);
      points[11] = map(2.000000000000000e-01, 0.000000000000000e+00);
      points[12] = map(4.000000000000000e-01, 0.000000000000000e+00);
      points[13] = map(6.000000000000000e-01, 0.000000000000000e+00);
      points[14] = map(8.000000000000000e-01, 0.000000000000000e+00);
      points[15] = map(2.000000000000000e-01, 2.000000000000000e-01);
      points[16] = map(4.000000000000000e-01, 2.000000000000000e-01);
      points[17] = map(6.000000000000000e-01, 2.000000000000000e-01);
      points[18] = map(2.000000000000000e-01, 4.000000000000000e-01);
      points[19] = map(4.000000000000000e-01, 4.000000000000000e-01);
      points[20] = map(2.000000000000000e-01, 6.000000000000000e-01);
      components[0] = 0;
      components[1] = 0;
      components[2] = 0;
      components[3] = 0;
      components[4] = 0;
      components[5] = 0;
      components[6] = 0;
      components[7] = 0;
      components[8] = 0;
      components[9] = 0;
      components[10] = 0;
      components[11] = 0;
      components[12] = 0;
      components[13] = 0;
      components[14] = 0;
      components[15] = 0;
      components[16] = 0;
      components[17] = 0;
      components[18] = 0;
      components[19] = 0;
      components[20] = 0;
    }
  
    void vertexeval(real values[], unsigned int vertex, const real x[], const Mesh& mesh) const
    {
      // FIXME: Temporary fix for Lagrange elements
      values[0] = x[vertex];
    }
  
    const FiniteElement& operator[] (unsigned int i) const
    {
      return *this;
    }
  
    FiniteElement& operator[] (unsigned int i)
    {
      return *this;
    }
  
    FiniteElementSpec spec() const
    {
      FiniteElementSpec s("Lagrange", "triangle", 5);
      return s;
    }
    
  private:
  
    unsigned int* tensordims;
    FiniteElement** subelements;
  
  };
  
  LinearForm(Function& w0) : dolfin::LinearForm(1)
  {
    // Create finite element for test space
    _test = new TestElement();

    // Add functions
    add(w0, new FunctionElement_0());
  }

  void eval(real block[], const AffineMap& map) const
  {
    // Compute coefficients
    const real c0_0 = c[0][0];
    const real c0_1 = c[0][1];
    const real c0_2 = c[0][2];
    const real c0_3 = c[0][3];
    const real c0_4 = c[0][4];
    const real c0_5 = c[0][5];
    const real c0_6 = c[0][6];
    const real c0_7 = c[0][7];
    const real c0_8 = c[0][8];
    const real c0_9 = c[0][9];
    const real c0_10 = c[0][10];
    const real c0_11 = c[0][11];
    const real c0_12 = c[0][12];
    const real c0_13 = c[0][13];
    const real c0_14 = c[0][14];
    const real c0_15 = c[0][15];
    const real c0_16 = c[0][16];
    const real c0_17 = c[0][17];
    const real c0_18 = c[0][18];
    const real c0_19 = c[0][19];
    const real c0_20 = c[0][20];

    // Compute geometry tensors
    const real G0_0 = map.det*c0_0;
    const real G0_1 = map.det*c0_1;
    const real G0_2 = map.det*c0_2;
    const real G0_3 = map.det*c0_3;
    const real G0_4 = map.det*c0_4;
    const real G0_5 = map.det*c0_5;
    const real G0_6 = map.det*c0_6;
    const real G0_7 = map.det*c0_7;
    const real G0_8 = map.det*c0_8;
    const real G0_9 = map.det*c0_9;
    const real G0_10 = map.det*c0_10;
    const real G0_11 = map.det*c0_11;
    const real G0_12 = map.det*c0_12;
    const real G0_13 = map.det*c0_13;
    const real G0_14 = map.det*c0_14;
    const real G0_15 = map.det*c0_15;
    const real G0_16 = map.det*c0_16;
    const real G0_17 = map.det*c0_17;
    const real G0_18 = map.det*c0_18;
    const real G0_19 = map.det*c0_19;
    const real G0_20 = map.det*c0_20;

    // Compute element tensor
    block[0] = 1.389452561327610e-03*G0_0 + 1.238774567767668e-04*G0_1 + 1.238774567767667e-04*G0_2 + 3.636470107824408e-04*G0_3 + 2.072018131045980e-04*G0_4 + 2.072018131045981e-04*G0_5 + 3.636470107824402e-04*G0_6 - 2.296443268665418e-05*G0_7 + 4.626811267436419e-04*G0_8 - 9.582431457431764e-04*G0_9 + 1.181363486051025e-03*G0_10 + 1.181363486051026e-03*G0_11 - 9.582431457431753e-04*G0_12 + 4.626811267436403e-04*G0_13 - 2.296443268665393e-05*G0_14 + 8.924813612313928e-04*G0_15 - 9.746835918711270e-04*G0_16 + 8.794333881139756e-04*G0_17 - 9.746835918711216e-04*G0_18 + 6.497890612474146e-04*G0_19 + 8.794333881139750e-04*G0_20;
    block[1] = 1.238774567767668e-04*G0_0 + 1.389452561327609e-03*G0_1 + 1.238774567767667e-04*G0_2 + 1.181363486051024e-03*G0_3 - 9.582431457431776e-04*G0_4 + 4.626811267436429e-04*G0_5 - 2.296443268665459e-05*G0_6 + 3.636470107824402e-04*G0_7 + 2.072018131045978e-04*G0_8 + 2.072018131045983e-04*G0_9 + 3.636470107824393e-04*G0_10 - 2.296443268665607e-05*G0_11 + 4.626811267436455e-04*G0_12 - 9.582431457431830e-04*G0_13 + 1.181363486051031e-03*G0_14 + 8.794333881139741e-04*G0_15 - 9.746835918711273e-04*G0_16 + 8.924813612313914e-04*G0_17 + 6.497890612474154e-04*G0_18 - 9.746835918711247e-04*G0_19 + 8.794333881139761e-04*G0_20;
    block[2] = 1.238774567767667e-04*G0_0 + 1.238774567767667e-04*G0_1 + 1.389452561327609e-03*G0_2 - 2.296443268665584e-05*G0_3 + 4.626811267436431e-04*G0_4 - 9.582431457431791e-04*G0_5 + 1.181363486051026e-03*G0_6 + 1.181363486051027e-03*G0_7 - 9.582431457431778e-04*G0_8 + 4.626811267436423e-04*G0_9 - 2.296443268665586e-05*G0_10 + 3.636470107824400e-04*G0_11 + 2.072018131045993e-04*G0_12 + 2.072018131045973e-04*G0_13 + 3.636470107824403e-04*G0_14 + 8.794333881139750e-04*G0_15 + 6.497890612474159e-04*G0_16 + 8.794333881139755e-04*G0_17 - 9.746835918711258e-04*G0_18 - 9.746835918711271e-04*G0_19 + 8.924813612313933e-04*G0_20;
    block[3] = 3.636470107824409e-04*G0_0 + 1.181363486051024e-03*G0_1 - 2.296443268665585e-05*G0_2 + 1.470506570333010e-02*G0_3 - 9.583736254743534e-03*G0_4 + 7.704828125835339e-03*G0_5 - 3.969845820974430e-03*G0_6 - 2.482376885588774e-03*G0_7 - 4.566790591096299e-05*G0_8 - 1.448325016033395e-03*G0_9 - 4.110111531986683e-04*G0_10 - 2.482376885588783e-03*G0_11 + 5.760680131340071e-03*G0_12 - 7.352532851665070e-03*G0_13 + 7.352532851665064e-03*G0_14 + 7.828783870450836e-04*G0_15 - 3.816532136844788e-03*G0_16 + 1.024265889717318e-02*G0_17 - 1.370037177328892e-03*G0_18 + 9.785979838062482e-05*G0_19 - 2.805314220244869e-03*G0_20;
    block[4] = 2.072018131045980e-04*G0_0 - 9.582431457431776e-04*G0_1 + 4.626811267436430e-04*G0_2 - 9.583736254743534e-03*G0_3 + 2.207717051467131e-02*G0_4 - 1.347855623029282e-02*G0_5 + 7.704828125835337e-03*G0_6 + 5.760680131340046e-03*G0_7 - 1.356989204211472e-03*G0_8 + 2.818362193362282e-03*G0_9 - 1.448325016033395e-03*G0_10 - 4.566790591095822e-05*G0_11 - 1.356989204211486e-03*G0_12 + 2.948841924536488e-03*G0_13 - 7.352532851665066e-03*G0_14 + 3.131513548180326e-03*G0_15 - 5.480148709315564e-03*G0_16 - 1.435277042915992e-03*G0_17 - 5.871587902838018e-04*G0_18 + 5.284429112554298e-03*G0_19 + 5.088709515793023e-03*G0_20;
    block[5] = 2.072018131045981e-04*G0_0 + 4.626811267436427e-04*G0_1 - 9.582431457431793e-04*G0_2 + 7.704828125835339e-03*G0_3 - 1.347855623029282e-02*G0_4 + 2.207717051467128e-02*G0_5 - 9.583736254743524e-03*G0_6 - 7.352532851665042e-03*G0_7 + 2.948841924536464e-03*G0_8 - 1.356989204211467e-03*G0_9 - 4.566790591096717e-05*G0_10 - 1.448325016033402e-03*G0_11 + 2.818362193362301e-03*G0_12 - 1.356989204211487e-03*G0_13 + 5.760680131340062e-03*G0_14 + 3.131513548180316e-03*G0_15 - 5.871587902838147e-04*G0_16 + 5.088709515793032e-03*G0_17 - 5.480148709315563e-03*G0_18 + 5.284429112554289e-03*G0_19 - 1.435277042915978e-03*G0_20;
    block[6] = 3.636470107824402e-04*G0_0 - 2.296443268665459e-05*G0_1 + 1.181363486051026e-03*G0_2 - 3.969845820974430e-03*G0_3 + 7.704828125835337e-03*G0_4 - 9.583736254743524e-03*G0_5 + 1.470506570333009e-02*G0_6 + 7.352532851665042e-03*G0_7 - 7.352532851665042e-03*G0_8 + 5.760680131340042e-03*G0_9 - 2.482376885588773e-03*G0_10 - 4.110111531986648e-04*G0_11 - 1.448325016033405e-03*G0_12 - 4.566790591095738e-05*G0_13 - 2.482376885588782e-03*G0_14 + 7.828783870450785e-04*G0_15 - 1.370037177328890e-03*G0_16 - 2.805314220244877e-03*G0_17 - 3.816532136844771e-03*G0_18 + 9.785979838063183e-05*G0_19 + 1.024265889717314e-02*G0_20;
    block[7] = -2.296443268665413e-05*G0_0 + 3.636470107824402e-04*G0_1 + 1.181363486051027e-03*G0_2 - 2.482376885588774e-03*G0_3 + 5.760680131340046e-03*G0_4 - 7.352532851665041e-03*G0_5 + 7.352532851665042e-03*G0_6 + 1.470506570333008e-02*G0_7 - 9.583736254743522e-03*G0_8 + 7.704828125835329e-03*G0_9 - 3.969845820974426e-03*G0_10 - 2.482376885588775e-03*G0_11 - 4.566790591096554e-05*G0_12 - 1.448325016033396e-03*G0_13 - 4.110111531986693e-04*G0_14 - 2.805314220244870e-03*G0_15 - 1.370037177328895e-03*G0_16 + 7.828783870450839e-04*G0_17 + 9.785979838063382e-05*G0_18 - 3.816532136844771e-03*G0_19 + 1.024265889717314e-02*G0_20;
    block[8] = 4.626811267436419e-04*G0_0 + 2.072018131045978e-04*G0_1 - 9.582431457431778e-04*G0_2 - 4.566790591096321e-05*G0_3 - 1.356989204211472e-03*G0_4 + 2.948841924536464e-03*G0_5 - 7.352532851665042e-03*G0_6 - 9.583736254743522e-03*G0_7 + 2.207717051467126e-02*G0_8 - 1.347855623029279e-02*G0_9 + 7.704828125835324e-03*G0_10 + 5.760680131340045e-03*G0_11 - 1.356989204211467e-03*G0_12 + 2.818362193362282e-03*G0_13 - 1.448325016033396e-03*G0_14 + 5.088709515793024e-03*G0_15 - 5.871587902838036e-04*G0_16 + 3.131513548180311e-03*G0_17 + 5.284429112554289e-03*G0_18 - 5.480148709315556e-03*G0_19 - 1.435277042915990e-03*G0_20;
    block[9] = -9.582431457431764e-04*G0_0 + 2.072018131045983e-04*G0_1 + 4.626811267436423e-04*G0_2 - 1.448325016033395e-03*G0_3 + 2.818362193362283e-03*G0_4 - 1.356989204211466e-03*G0_5 + 5.760680131340042e-03*G0_6 + 7.704828125835329e-03*G0_7 - 1.347855623029279e-02*G0_8 + 2.207717051467125e-02*G0_9 - 9.583736254743510e-03*G0_10 - 7.352532851665039e-03*G0_11 + 2.948841924536462e-03*G0_12 - 1.356989204211468e-03*G0_13 - 4.566790591096662e-05*G0_14 - 1.435277042915978e-03*G0_15 - 5.480148709315566e-03*G0_16 + 3.131513548180326e-03*G0_17 + 5.284429112554299e-03*G0_18 - 5.871587902838159e-04*G0_19 + 5.088709515793022e-03*G0_20;
    block[10] = 1.181363486051024e-03*G0_0 + 3.636470107824393e-04*G0_1 - 2.296443268665592e-05*G0_2 - 4.110111531986683e-04*G0_3 - 1.448325016033395e-03*G0_4 - 4.566790591096717e-05*G0_5 - 2.482376885588773e-03*G0_6 - 3.969845820974425e-03*G0_7 + 7.704828125835324e-03*G0_8 - 9.583736254743510e-03*G0_9 + 1.470506570333007e-02*G0_10 + 7.352532851665036e-03*G0_11 - 7.352532851665039e-03*G0_12 + 5.760680131340043e-03*G0_13 - 2.482376885588773e-03*G0_14 + 1.024265889717313e-02*G0_15 - 3.816532136844756e-03*G0_16 + 7.828783870450636e-04*G0_17 + 9.785979838062839e-05*G0_18 - 1.370037177328877e-03*G0_19 - 2.805314220244882e-03*G0_20;
    block[11] = 1.181363486051026e-03*G0_0 - 2.296443268665596e-05*G0_1 + 3.636470107824400e-04*G0_2 - 2.482376885588782e-03*G0_3 - 4.566790591095822e-05*G0_4 - 1.448325016033402e-03*G0_5 - 4.110111531986649e-04*G0_6 - 2.482376885588776e-03*G0_7 + 5.760680131340045e-03*G0_8 - 7.352532851665039e-03*G0_9 + 7.352532851665037e-03*G0_10 + 1.470506570333010e-02*G0_11 - 9.583736254743527e-03*G0_12 + 7.704828125835340e-03*G0_13 - 3.969845820974436e-03*G0_14 + 1.024265889717314e-02*G0_15 + 9.785979838065262e-05*G0_16 - 2.805314220244898e-03*G0_17 - 3.816532136844785e-03*G0_18 - 1.370037177328872e-03*G0_19 + 7.828783870450762e-04*G0_20;
    block[12] = -9.582431457431751e-04*G0_0 + 4.626811267436455e-04*G0_1 + 2.072018131045994e-04*G0_2 + 5.760680131340071e-03*G0_3 - 1.356989204211485e-03*G0_4 + 2.818362193362301e-03*G0_5 - 1.448325016033405e-03*G0_6 - 4.566790591096535e-05*G0_7 - 1.356989204211467e-03*G0_8 + 2.948841924536461e-03*G0_9 - 7.352532851665038e-03*G0_10 - 9.583736254743527e-03*G0_11 + 2.207717051467130e-02*G0_12 - 1.347855623029283e-02*G0_13 + 7.704828125835362e-03*G0_14 - 1.435277042915960e-03*G0_15 + 5.284429112554275e-03*G0_16 + 5.088709515793083e-03*G0_17 - 5.480148709315570e-03*G0_18 - 5.871587902838321e-04*G0_19 + 3.131513548180337e-03*G0_20;
    block[13] = 4.626811267436403e-04*G0_0 - 9.582431457431830e-04*G0_1 + 2.072018131045973e-04*G0_2 - 7.352532851665069e-03*G0_3 + 2.948841924536488e-03*G0_4 - 1.356989204211487e-03*G0_5 - 4.566790591095749e-05*G0_6 - 1.448325016033396e-03*G0_7 + 2.818362193362282e-03*G0_8 - 1.356989204211467e-03*G0_9 + 5.760680131340043e-03*G0_10 + 7.704828125835339e-03*G0_11 - 1.347855623029283e-02*G0_12 + 2.207717051467131e-02*G0_13 - 9.583736254743559e-03*G0_14 + 5.088709515793011e-03*G0_15 + 5.284429112554316e-03*G0_16 - 1.435277042916035e-03*G0_17 - 5.871587902838127e-04*G0_18 - 5.480148709315541e-03*G0_19 + 3.131513548180310e-03*G0_20;
    block[14] = -2.296443268665389e-05*G0_0 + 1.181363486051031e-03*G0_1 + 3.636470107824403e-04*G0_2 + 7.352532851665065e-03*G0_3 - 7.352532851665066e-03*G0_4 + 5.760680131340062e-03*G0_5 - 2.482376885588782e-03*G0_6 - 4.110111531986694e-04*G0_7 - 1.448325016033396e-03*G0_8 - 4.566790591096684e-05*G0_9 - 2.482376885588774e-03*G0_10 - 3.969845820974436e-03*G0_11 + 7.704828125835362e-03*G0_12 - 9.583736254743562e-03*G0_13 + 1.470506570333013e-02*G0_14 - 2.805314220244869e-03*G0_15 + 9.785979838061711e-05*G0_16 + 1.024265889717317e-02*G0_17 - 1.370037177328895e-03*G0_18 - 3.816532136844786e-03*G0_19 + 7.828783870450795e-04*G0_20;
    block[15] = 8.924813612313929e-04*G0_0 + 8.794333881139741e-04*G0_1 + 8.794333881139750e-04*G0_2 + 7.828783870450831e-04*G0_3 + 3.131513548180327e-03*G0_4 + 3.131513548180317e-03*G0_5 + 7.828783870450783e-04*G0_6 - 2.805314220244869e-03*G0_7 + 5.088709515793024e-03*G0_8 - 1.435277042915977e-03*G0_9 + 1.024265889717313e-02*G0_10 + 1.024265889717314e-02*G0_11 - 1.435277042915961e-03*G0_12 + 5.088709515793013e-03*G0_13 - 2.805314220244869e-03*G0_14 + 7.045905483405723e-02*G0_15 - 1.565756774090156e-02*G0_16 + 1.174317580567622e-02*G0_17 - 1.565756774090160e-02*G0_18 + 3.914391935225384e-03*G0_19 + 1.174317580567621e-02*G0_20;
    block[16] = -9.746835918711270e-04*G0_0 - 9.746835918711270e-04*G0_1 + 6.497890612474159e-04*G0_2 - 3.816532136844788e-03*G0_3 - 5.480148709315564e-03*G0_4 - 5.871587902838146e-04*G0_5 - 1.370037177328890e-03*G0_6 - 1.370037177328895e-03*G0_7 - 5.871587902838041e-04*G0_8 - 5.480148709315566e-03*G0_9 - 3.816532136844756e-03*G0_10 + 9.785979838065175e-05*G0_11 + 5.284429112554275e-03*G0_12 + 5.284429112554316e-03*G0_13 + 9.785979838061733e-05*G0_14 - 1.565756774090156e-02*G0_15 + 7.633064273689534e-02*G0_16 - 1.565756774090166e-02*G0_17 - 1.174317580567623e-02*G0_18 - 1.174317580567617e-02*G0_19 + 3.914391935225406e-03*G0_20;
    block[17] = 8.794333881139756e-04*G0_0 + 8.924813612313915e-04*G0_1 + 8.794333881139755e-04*G0_2 + 1.024265889717318e-02*G0_3 - 1.435277042915992e-03*G0_4 + 5.088709515793032e-03*G0_5 - 2.805314220244878e-03*G0_6 + 7.828783870450840e-04*G0_7 + 3.131513548180311e-03*G0_8 + 3.131513548180326e-03*G0_9 + 7.828783870450636e-04*G0_10 - 2.805314220244898e-03*G0_11 + 5.088709515793083e-03*G0_12 - 1.435277042916035e-03*G0_13 + 1.024265889717317e-02*G0_14 + 1.174317580567622e-02*G0_15 - 1.565756774090166e-02*G0_16 + 7.045905483405734e-02*G0_17 + 3.914391935225400e-03*G0_18 - 1.565756774090162e-02*G0_19 + 1.174317580567622e-02*G0_20;
    block[18] = -9.746835918711216e-04*G0_0 + 6.497890612474154e-04*G0_1 - 9.746835918711258e-04*G0_2 - 1.370037177328892e-03*G0_3 - 5.871587902838013e-04*G0_4 - 5.480148709315563e-03*G0_5 - 3.816532136844770e-03*G0_6 + 9.785979838063387e-05*G0_7 + 5.284429112554287e-03*G0_8 + 5.284429112554298e-03*G0_9 + 9.785979838062824e-05*G0_10 - 3.816532136844784e-03*G0_11 - 5.480148709315569e-03*G0_12 - 5.871587902838126e-04*G0_13 - 1.370037177328896e-03*G0_14 - 1.565756774090160e-02*G0_15 - 1.174317580567622e-02*G0_16 + 3.914391935225399e-03*G0_17 + 7.633064273689542e-02*G0_18 - 1.174317580567618e-02*G0_19 - 1.565756774090164e-02*G0_20;
    block[19] = 6.497890612474146e-04*G0_0 - 9.746835918711244e-04*G0_1 - 9.746835918711271e-04*G0_2 + 9.785979838062568e-05*G0_3 + 5.284429112554298e-03*G0_4 + 5.284429112554289e-03*G0_5 + 9.785979838063280e-05*G0_6 - 3.816532136844771e-03*G0_7 - 5.480148709315556e-03*G0_8 - 5.871587902838159e-04*G0_9 - 1.370037177328877e-03*G0_10 - 1.370037177328873e-03*G0_11 - 5.871587902838340e-04*G0_12 - 5.480148709315541e-03*G0_13 - 3.816532136844786e-03*G0_14 + 3.914391935225383e-03*G0_15 - 1.174317580567617e-02*G0_16 - 1.565756774090162e-02*G0_17 - 1.174317580567618e-02*G0_18 + 7.633064273689533e-02*G0_19 - 1.565756774090163e-02*G0_20;
    block[20] = 8.794333881139750e-04*G0_0 + 8.794333881139761e-04*G0_1 + 8.924813612313931e-04*G0_2 - 2.805314220244869e-03*G0_3 + 5.088709515793027e-03*G0_4 - 1.435277042915978e-03*G0_5 + 1.024265889717314e-02*G0_6 + 1.024265889717314e-02*G0_7 - 1.435277042915991e-03*G0_8 + 5.088709515793024e-03*G0_9 - 2.805314220244882e-03*G0_10 + 7.828783870450761e-04*G0_11 + 3.131513548180337e-03*G0_12 + 3.131513548180310e-03*G0_13 + 7.828783870450796e-04*G0_14 + 1.174317580567621e-02*G0_15 + 3.914391935225404e-03*G0_16 + 1.174317580567622e-02*G0_17 - 1.565756774090163e-02*G0_18 - 1.565756774090163e-02*G0_19 + 7.045905483405727e-02*G0_20;
  }

};

} }

#endif
