// This file was automatically generated by FFC, the FEniCS Form Compiler.
// Licensed under the GNU GPL Version 2.

#ifndef __ELASTICITY_H
#define __ELASTICITY_H

#include <dolfin/NewFiniteElement.h>
#include <dolfin/LinearForm.h>
#include <dolfin/BilinearForm.h>

namespace dolfin { namespace Elasticity {

/// This is the finite element for which the form is generated,
/// providing the information neccessary to do assembly.

class FiniteElement : public dolfin::NewFiniteElement
{
public:

  FiniteElement() : dolfin::NewFiniteElement(), tensordims(0)
  {
    tensordims = new unsigned int [1];
    tensordims[0] = 3;
  }

  ~FiniteElement()
  {
    if ( tensordims ) delete [] tensordims;
  }

  inline unsigned int spacedim() const
  {
    return 12;
  }

  inline unsigned int shapedim() const
  {
    return 3;
  }

  inline unsigned int tensordim(unsigned int i) const
  {
    dolfin_assert(i < 1);
    return tensordims[i];
  }

  inline unsigned int rank() const
  {
    return 1;
  }

  // FIXME: Only works for nodal basis
  inline unsigned int dof(unsigned int i, const Cell& cell, const Mesh& mesh) const
  {
    return (i/4) * mesh.noNodes() + cell.nodeID(i % 4);
  }

  // FIXME: Only works for nodal basis
  inline const Point coord(unsigned int i, const Cell& cell, const Mesh& mesh) const
  {
    return cell.node(i % 4).coord();
  }

private:

  unsigned int* tensordims;

};

/// This class contains the form to be evaluated, including
/// contributions from the interior and boundary of the domain.

class BilinearForm : public dolfin::BilinearForm
{
public:

  BilinearForm() : dolfin::BilinearForm()
  {
  }

  bool interior(real* block) const
  {
    // Compute geometry tensors
    real G0_0_0 = det*(g00*g00 + g01*g01 + g02*g02);
    real G0_0_1 = det*(g00*g10 + g01*g11 + g02*g12);
    real G0_0_2 = det*(g00*g20 + g01*g21 + g02*g22);
    real G0_1_0 = det*(g10*g00 + g11*g01 + g12*g02);
    real G0_1_1 = det*(g10*g10 + g11*g11 + g12*g12);
    real G0_1_2 = det*(g10*g20 + g11*g21 + g12*g22);
    real G0_2_0 = det*(g20*g00 + g21*g01 + g22*g02);
    real G0_2_1 = det*(g20*g10 + g21*g11 + g22*g12);
    real G0_2_2 = det*(g20*g20 + g21*g21 + g22*g22);
    real G1_0_0_0_0 = det*g00*g00;
    real G1_0_0_0_1 = det*g00*g10;
    real G1_0_0_0_2 = det*g00*g20;
    real G1_0_0_1_0 = det*g10*g00;
    real G1_0_0_1_1 = det*g10*g10;
    real G1_0_0_1_2 = det*g10*g20;
    real G1_0_0_2_0 = det*g20*g00;
    real G1_0_0_2_1 = det*g20*g10;
    real G1_0_0_2_2 = det*g20*g20;
    real G1_0_1_0_0 = det*g01*g00;
    real G1_0_1_0_1 = det*g01*g10;
    real G1_0_1_0_2 = det*g01*g20;
    real G1_0_1_1_0 = det*g11*g00;
    real G1_0_1_1_1 = det*g11*g10;
    real G1_0_1_1_2 = det*g11*g20;
    real G1_0_1_2_0 = det*g21*g00;
    real G1_0_1_2_1 = det*g21*g10;
    real G1_0_1_2_2 = det*g21*g20;
    real G1_0_2_0_0 = det*g02*g00;
    real G1_0_2_0_1 = det*g02*g10;
    real G1_0_2_0_2 = det*g02*g20;
    real G1_0_2_1_0 = det*g12*g00;
    real G1_0_2_1_1 = det*g12*g10;
    real G1_0_2_1_2 = det*g12*g20;
    real G1_0_2_2_0 = det*g22*g00;
    real G1_0_2_2_1 = det*g22*g10;
    real G1_0_2_2_2 = det*g22*g20;
    real G1_1_0_0_0 = det*g00*g01;
    real G1_1_0_0_1 = det*g00*g11;
    real G1_1_0_0_2 = det*g00*g21;
    real G1_1_0_1_0 = det*g10*g01;
    real G1_1_0_1_1 = det*g10*g11;
    real G1_1_0_1_2 = det*g10*g21;
    real G1_1_0_2_0 = det*g20*g01;
    real G1_1_0_2_1 = det*g20*g11;
    real G1_1_0_2_2 = det*g20*g21;
    real G1_1_1_0_0 = det*g01*g01;
    real G1_1_1_0_1 = det*g01*g11;
    real G1_1_1_0_2 = det*g01*g21;
    real G1_1_1_1_0 = det*g11*g01;
    real G1_1_1_1_1 = det*g11*g11;
    real G1_1_1_1_2 = det*g11*g21;
    real G1_1_1_2_0 = det*g21*g01;
    real G1_1_1_2_1 = det*g21*g11;
    real G1_1_1_2_2 = det*g21*g21;
    real G1_1_2_0_0 = det*g02*g01;
    real G1_1_2_0_1 = det*g02*g11;
    real G1_1_2_0_2 = det*g02*g21;
    real G1_1_2_1_0 = det*g12*g01;
    real G1_1_2_1_1 = det*g12*g11;
    real G1_1_2_1_2 = det*g12*g21;
    real G1_1_2_2_0 = det*g22*g01;
    real G1_1_2_2_1 = det*g22*g11;
    real G1_1_2_2_2 = det*g22*g21;
    real G1_2_0_0_0 = det*g00*g02;
    real G1_2_0_0_1 = det*g00*g12;
    real G1_2_0_0_2 = det*g00*g22;
    real G1_2_0_1_0 = det*g10*g02;
    real G1_2_0_1_1 = det*g10*g12;
    real G1_2_0_1_2 = det*g10*g22;
    real G1_2_0_2_0 = det*g20*g02;
    real G1_2_0_2_1 = det*g20*g12;
    real G1_2_0_2_2 = det*g20*g22;
    real G1_2_1_0_0 = det*g01*g02;
    real G1_2_1_0_1 = det*g01*g12;
    real G1_2_1_0_2 = det*g01*g22;
    real G1_2_1_1_0 = det*g11*g02;
    real G1_2_1_1_1 = det*g11*g12;
    real G1_2_1_1_2 = det*g11*g22;
    real G1_2_1_2_0 = det*g21*g02;
    real G1_2_1_2_1 = det*g21*g12;
    real G1_2_1_2_2 = det*g21*g22;
    real G1_2_2_0_0 = det*g02*g02;
    real G1_2_2_0_1 = det*g02*g12;
    real G1_2_2_0_2 = det*g02*g22;
    real G1_2_2_1_0 = det*g12*g02;
    real G1_2_2_1_1 = det*g12*g12;
    real G1_2_2_1_2 = det*g12*g22;
    real G1_2_2_2_0 = det*g22*g02;
    real G1_2_2_2_1 = det*g22*g12;
    real G1_2_2_2_2 = det*g22*g22;
    real G2_0_0_0_0 = det*g00*g00;
    real G2_0_0_0_1 = det*g00*g10;
    real G2_0_0_0_2 = det*g00*g20;
    real G2_0_0_1_0 = det*g10*g00;
    real G2_0_0_1_1 = det*g10*g10;
    real G2_0_0_1_2 = det*g10*g20;
    real G2_0_0_2_0 = det*g20*g00;
    real G2_0_0_2_1 = det*g20*g10;
    real G2_0_0_2_2 = det*g20*g20;
    real G2_0_1_0_0 = det*g00*g01;
    real G2_0_1_0_1 = det*g00*g11;
    real G2_0_1_0_2 = det*g00*g21;
    real G2_0_1_1_0 = det*g10*g01;
    real G2_0_1_1_1 = det*g10*g11;
    real G2_0_1_1_2 = det*g10*g21;
    real G2_0_1_2_0 = det*g20*g01;
    real G2_0_1_2_1 = det*g20*g11;
    real G2_0_1_2_2 = det*g20*g21;
    real G2_0_2_0_0 = det*g00*g02;
    real G2_0_2_0_1 = det*g00*g12;
    real G2_0_2_0_2 = det*g00*g22;
    real G2_0_2_1_0 = det*g10*g02;
    real G2_0_2_1_1 = det*g10*g12;
    real G2_0_2_1_2 = det*g10*g22;
    real G2_0_2_2_0 = det*g20*g02;
    real G2_0_2_2_1 = det*g20*g12;
    real G2_0_2_2_2 = det*g20*g22;
    real G2_1_0_0_0 = det*g01*g00;
    real G2_1_0_0_1 = det*g01*g10;
    real G2_1_0_0_2 = det*g01*g20;
    real G2_1_0_1_0 = det*g11*g00;
    real G2_1_0_1_1 = det*g11*g10;
    real G2_1_0_1_2 = det*g11*g20;
    real G2_1_0_2_0 = det*g21*g00;
    real G2_1_0_2_1 = det*g21*g10;
    real G2_1_0_2_2 = det*g21*g20;
    real G2_1_1_0_0 = det*g01*g01;
    real G2_1_1_0_1 = det*g01*g11;
    real G2_1_1_0_2 = det*g01*g21;
    real G2_1_1_1_0 = det*g11*g01;
    real G2_1_1_1_1 = det*g11*g11;
    real G2_1_1_1_2 = det*g11*g21;
    real G2_1_1_2_0 = det*g21*g01;
    real G2_1_1_2_1 = det*g21*g11;
    real G2_1_1_2_2 = det*g21*g21;
    real G2_1_2_0_0 = det*g01*g02;
    real G2_1_2_0_1 = det*g01*g12;
    real G2_1_2_0_2 = det*g01*g22;
    real G2_1_2_1_0 = det*g11*g02;
    real G2_1_2_1_1 = det*g11*g12;
    real G2_1_2_1_2 = det*g11*g22;
    real G2_1_2_2_0 = det*g21*g02;
    real G2_1_2_2_1 = det*g21*g12;
    real G2_1_2_2_2 = det*g21*g22;
    real G2_2_0_0_0 = det*g02*g00;
    real G2_2_0_0_1 = det*g02*g10;
    real G2_2_0_0_2 = det*g02*g20;
    real G2_2_0_1_0 = det*g12*g00;
    real G2_2_0_1_1 = det*g12*g10;
    real G2_2_0_1_2 = det*g12*g20;
    real G2_2_0_2_0 = det*g22*g00;
    real G2_2_0_2_1 = det*g22*g10;
    real G2_2_0_2_2 = det*g22*g20;
    real G2_2_1_0_0 = det*g02*g01;
    real G2_2_1_0_1 = det*g02*g11;
    real G2_2_1_0_2 = det*g02*g21;
    real G2_2_1_1_0 = det*g12*g01;
    real G2_2_1_1_1 = det*g12*g11;
    real G2_2_1_1_2 = det*g12*g21;
    real G2_2_1_2_0 = det*g22*g01;
    real G2_2_1_2_1 = det*g22*g11;
    real G2_2_1_2_2 = det*g22*g21;
    real G2_2_2_0_0 = det*g02*g02;
    real G2_2_2_0_1 = det*g02*g12;
    real G2_2_2_0_2 = det*g02*g22;
    real G2_2_2_1_0 = det*g12*g02;
    real G2_2_2_1_1 = det*g12*g12;
    real G2_2_2_1_2 = det*g12*g22;
    real G2_2_2_2_0 = det*g22*g02;
    real G2_2_2_2_1 = det*g22*g12;
    real G2_2_2_2_2 = det*g22*g22;
    real G3_0_0 = det*(g00*g00 + g01*g01 + g02*g02);
    real G3_0_1 = det*(g00*g10 + g01*g11 + g02*g12);
    real G3_0_2 = det*(g00*g20 + g01*g21 + g02*g22);
    real G3_1_0 = det*(g10*g00 + g11*g01 + g12*g02);
    real G3_1_1 = det*(g10*g10 + g11*g11 + g12*g12);
    real G3_1_2 = det*(g10*g20 + g11*g21 + g12*g22);
    real G3_2_0 = det*(g20*g00 + g21*g01 + g22*g02);
    real G3_2_1 = det*(g20*g10 + g21*g11 + g22*g12);
    real G3_2_2 = det*(g20*g20 + g21*g21 + g22*g22);

    // Compute element tensor
    block[0] = 0.166666666667*G0_0_0 + 0.166666666667*G0_0_1 + 0.166666666667*G0_0_2 + 0.166666666667*G0_1_0 + 0.166666666667*G0_1_1 + 0.166666666667*G0_1_2 + 0.166666666667*G0_2_0 + 0.166666666667*G0_2_1 + 0.166666666667*G0_2_2 + 0.166666666667*G1_0_0_0_0 + 0.166666666667*G1_0_0_0_1 + 0.166666666667*G1_0_0_0_2 + 0.166666666667*G1_0_0_1_0 + 0.166666666667*G1_0_0_1_1 + 0.166666666667*G1_0_0_1_2 + 0.166666666667*G1_0_0_2_0 + 0.166666666667*G1_0_0_2_1 + 0.166666666667*G1_0_0_2_2 + 0.166666666667*G2_0_0_0_0 + 0.166666666667*G2_0_0_0_1 + 0.166666666667*G2_0_0_0_2 + 0.166666666667*G2_0_0_1_0 + 0.166666666667*G2_0_0_1_1 + 0.166666666667*G2_0_0_1_2 + 0.166666666667*G2_0_0_2_0 + 0.166666666667*G2_0_0_2_1 + 0.166666666667*G2_0_0_2_2 + 0.166666666667*G3_0_0 + 0.166666666667*G3_0_1 + 0.166666666667*G3_0_2 + 0.166666666667*G3_1_0 + 0.166666666667*G3_1_1 + 0.166666666667*G3_1_2 + 0.166666666667*G3_2_0 + 0.166666666667*G3_2_1 + 0.166666666667*G3_2_2;
    block[1] = -0.166666666667*G0_0_0 - 0.166666666667*G0_1_0 - 0.166666666667*G0_2_0 - 0.166666666667*G1_0_0_0_0 - 0.166666666667*G1_0_0_1_0 - 0.166666666667*G1_0_0_2_0 - 0.166666666667*G2_0_0_0_0 - 0.166666666667*G2_0_0_1_0 - 0.166666666667*G2_0_0_2_0 - 0.166666666667*G3_0_0 - 0.166666666667*G3_1_0 - 0.166666666667*G3_2_0;
    block[2] = -0.166666666667*G0_0_1 - 0.166666666667*G0_1_1 - 0.166666666667*G0_2_1 - 0.166666666667*G1_0_0_0_1 - 0.166666666667*G1_0_0_1_1 - 0.166666666667*G1_0_0_2_1 - 0.166666666667*G2_0_0_0_1 - 0.166666666667*G2_0_0_1_1 - 0.166666666667*G2_0_0_2_1 - 0.166666666667*G3_0_1 - 0.166666666667*G3_1_1 - 0.166666666667*G3_2_1;
    block[3] = -0.166666666667*G0_0_2 - 0.166666666667*G0_1_2 - 0.166666666667*G0_2_2 - 0.166666666667*G1_0_0_0_2 - 0.166666666667*G1_0_0_1_2 - 0.166666666667*G1_0_0_2_2 - 0.166666666667*G2_0_0_0_2 - 0.166666666667*G2_0_0_1_2 - 0.166666666667*G2_0_0_2_2 - 0.166666666667*G3_0_2 - 0.166666666667*G3_1_2 - 0.166666666667*G3_2_2;
    block[4] = 0.166666666667*G1_0_1_0_0 + 0.166666666667*G1_0_1_0_1 + 0.166666666667*G1_0_1_0_2 + 0.166666666667*G1_0_1_1_0 + 0.166666666667*G1_0_1_1_1 + 0.166666666667*G1_0_1_1_2 + 0.166666666667*G1_0_1_2_0 + 0.166666666667*G1_0_1_2_1 + 0.166666666667*G1_0_1_2_2 + 0.166666666667*G2_1_0_0_0 + 0.166666666667*G2_1_0_0_1 + 0.166666666667*G2_1_0_0_2 + 0.166666666667*G2_1_0_1_0 + 0.166666666667*G2_1_0_1_1 + 0.166666666667*G2_1_0_1_2 + 0.166666666667*G2_1_0_2_0 + 0.166666666667*G2_1_0_2_1 + 0.166666666667*G2_1_0_2_2;
    block[5] = -0.166666666667*G1_0_1_0_0 - 0.166666666667*G1_0_1_1_0 - 0.166666666667*G1_0_1_2_0 - 0.166666666667*G2_1_0_0_0 - 0.166666666667*G2_1_0_1_0 - 0.166666666667*G2_1_0_2_0;
    block[6] = -0.166666666667*G1_0_1_0_1 - 0.166666666667*G1_0_1_1_1 - 0.166666666667*G1_0_1_2_1 - 0.166666666667*G2_1_0_0_1 - 0.166666666667*G2_1_0_1_1 - 0.166666666667*G2_1_0_2_1;
    block[7] = -0.166666666667*G1_0_1_0_2 - 0.166666666667*G1_0_1_1_2 - 0.166666666667*G1_0_1_2_2 - 0.166666666667*G2_1_0_0_2 - 0.166666666667*G2_1_0_1_2 - 0.166666666667*G2_1_0_2_2;
    block[8] = 0.166666666667*G1_0_2_0_0 + 0.166666666667*G1_0_2_0_1 + 0.166666666667*G1_0_2_0_2 + 0.166666666667*G1_0_2_1_0 + 0.166666666667*G1_0_2_1_1 + 0.166666666667*G1_0_2_1_2 + 0.166666666667*G1_0_2_2_0 + 0.166666666667*G1_0_2_2_1 + 0.166666666667*G1_0_2_2_2 + 0.166666666667*G2_2_0_0_0 + 0.166666666667*G2_2_0_0_1 + 0.166666666667*G2_2_0_0_2 + 0.166666666667*G2_2_0_1_0 + 0.166666666667*G2_2_0_1_1 + 0.166666666667*G2_2_0_1_2 + 0.166666666667*G2_2_0_2_0 + 0.166666666667*G2_2_0_2_1 + 0.166666666667*G2_2_0_2_2;
    block[9] = -0.166666666667*G1_0_2_0_0 - 0.166666666667*G1_0_2_1_0 - 0.166666666667*G1_0_2_2_0 - 0.166666666667*G2_2_0_0_0 - 0.166666666667*G2_2_0_1_0 - 0.166666666667*G2_2_0_2_0;
    block[10] = -0.166666666667*G1_0_2_0_1 - 0.166666666667*G1_0_2_1_1 - 0.166666666667*G1_0_2_2_1 - 0.166666666667*G2_2_0_0_1 - 0.166666666667*G2_2_0_1_1 - 0.166666666667*G2_2_0_2_1;
    block[11] = -0.166666666667*G1_0_2_0_2 - 0.166666666667*G1_0_2_1_2 - 0.166666666667*G1_0_2_2_2 - 0.166666666667*G2_2_0_0_2 - 0.166666666667*G2_2_0_1_2 - 0.166666666667*G2_2_0_2_2;
    block[12] = -0.166666666667*G0_0_0 - 0.166666666667*G0_0_1 - 0.166666666667*G0_0_2 - 0.166666666667*G1_0_0_0_0 - 0.166666666667*G1_0_0_0_1 - 0.166666666667*G1_0_0_0_2 - 0.166666666667*G2_0_0_0_0 - 0.166666666667*G2_0_0_0_1 - 0.166666666667*G2_0_0_0_2 - 0.166666666667*G3_0_0 - 0.166666666667*G3_0_1 - 0.166666666667*G3_0_2;
    block[13] = 0.166666666667*G0_0_0 + 0.166666666667*G1_0_0_0_0 + 0.166666666667*G2_0_0_0_0 + 0.166666666667*G3_0_0;
    block[14] = 0.166666666667*G0_0_1 + 0.166666666667*G1_0_0_0_1 + 0.166666666667*G2_0_0_0_1 + 0.166666666667*G3_0_1;
    block[15] = 0.166666666667*G0_0_2 + 0.166666666667*G1_0_0_0_2 + 0.166666666667*G2_0_0_0_2 + 0.166666666667*G3_0_2;
    block[16] = -0.166666666667*G1_0_1_0_0 - 0.166666666667*G1_0_1_0_1 - 0.166666666667*G1_0_1_0_2 - 0.166666666667*G2_1_0_0_0 - 0.166666666667*G2_1_0_0_1 - 0.166666666667*G2_1_0_0_2;
    block[17] = 0.166666666667*G1_0_1_0_0 + 0.166666666667*G2_1_0_0_0;
    block[18] = 0.166666666667*G1_0_1_0_1 + 0.166666666667*G2_1_0_0_1;
    block[19] = 0.166666666667*G1_0_1_0_2 + 0.166666666667*G2_1_0_0_2;
    block[20] = -0.166666666667*G1_0_2_0_0 - 0.166666666667*G1_0_2_0_1 - 0.166666666667*G1_0_2_0_2 - 0.166666666667*G2_2_0_0_0 - 0.166666666667*G2_2_0_0_1 - 0.166666666667*G2_2_0_0_2;
    block[21] = 0.166666666667*G1_0_2_0_0 + 0.166666666667*G2_2_0_0_0;
    block[22] = 0.166666666667*G1_0_2_0_1 + 0.166666666667*G2_2_0_0_1;
    block[23] = 0.166666666667*G1_0_2_0_2 + 0.166666666667*G2_2_0_0_2;
    block[24] = -0.166666666667*G0_1_0 - 0.166666666667*G0_1_1 - 0.166666666667*G0_1_2 - 0.166666666667*G1_0_0_1_0 - 0.166666666667*G1_0_0_1_1 - 0.166666666667*G1_0_0_1_2 - 0.166666666667*G2_0_0_1_0 - 0.166666666667*G2_0_0_1_1 - 0.166666666667*G2_0_0_1_2 - 0.166666666667*G3_1_0 - 0.166666666667*G3_1_1 - 0.166666666667*G3_1_2;
    block[25] = 0.166666666667*G0_1_0 + 0.166666666667*G1_0_0_1_0 + 0.166666666667*G2_0_0_1_0 + 0.166666666667*G3_1_0;
    block[26] = 0.166666666667*G0_1_1 + 0.166666666667*G1_0_0_1_1 + 0.166666666667*G2_0_0_1_1 + 0.166666666667*G3_1_1;
    block[27] = 0.166666666667*G0_1_2 + 0.166666666667*G1_0_0_1_2 + 0.166666666667*G2_0_0_1_2 + 0.166666666667*G3_1_2;
    block[28] = -0.166666666667*G1_0_1_1_0 - 0.166666666667*G1_0_1_1_1 - 0.166666666667*G1_0_1_1_2 - 0.166666666667*G2_1_0_1_0 - 0.166666666667*G2_1_0_1_1 - 0.166666666667*G2_1_0_1_2;
    block[29] = 0.166666666667*G1_0_1_1_0 + 0.166666666667*G2_1_0_1_0;
    block[30] = 0.166666666667*G1_0_1_1_1 + 0.166666666667*G2_1_0_1_1;
    block[31] = 0.166666666667*G1_0_1_1_2 + 0.166666666667*G2_1_0_1_2;
    block[32] = -0.166666666667*G1_0_2_1_0 - 0.166666666667*G1_0_2_1_1 - 0.166666666667*G1_0_2_1_2 - 0.166666666667*G2_2_0_1_0 - 0.166666666667*G2_2_0_1_1 - 0.166666666667*G2_2_0_1_2;
    block[33] = 0.166666666667*G1_0_2_1_0 + 0.166666666667*G2_2_0_1_0;
    block[34] = 0.166666666667*G1_0_2_1_1 + 0.166666666667*G2_2_0_1_1;
    block[35] = 0.166666666667*G1_0_2_1_2 + 0.166666666667*G2_2_0_1_2;
    block[36] = -0.166666666667*G0_2_0 - 0.166666666667*G0_2_1 - 0.166666666667*G0_2_2 - 0.166666666667*G1_0_0_2_0 - 0.166666666667*G1_0_0_2_1 - 0.166666666667*G1_0_0_2_2 - 0.166666666667*G2_0_0_2_0 - 0.166666666667*G2_0_0_2_1 - 0.166666666667*G2_0_0_2_2 - 0.166666666667*G3_2_0 - 0.166666666667*G3_2_1 - 0.166666666667*G3_2_2;
    block[37] = 0.166666666667*G0_2_0 + 0.166666666667*G1_0_0_2_0 + 0.166666666667*G2_0_0_2_0 + 0.166666666667*G3_2_0;
    block[38] = 0.166666666667*G0_2_1 + 0.166666666667*G1_0_0_2_1 + 0.166666666667*G2_0_0_2_1 + 0.166666666667*G3_2_1;
    block[39] = 0.166666666667*G0_2_2 + 0.166666666667*G1_0_0_2_2 + 0.166666666667*G2_0_0_2_2 + 0.166666666667*G3_2_2;
    block[40] = -0.166666666667*G1_0_1_2_0 - 0.166666666667*G1_0_1_2_1 - 0.166666666667*G1_0_1_2_2 - 0.166666666667*G2_1_0_2_0 - 0.166666666667*G2_1_0_2_1 - 0.166666666667*G2_1_0_2_2;
    block[41] = 0.166666666667*G1_0_1_2_0 + 0.166666666667*G2_1_0_2_0;
    block[42] = 0.166666666667*G1_0_1_2_1 + 0.166666666667*G2_1_0_2_1;
    block[43] = 0.166666666667*G1_0_1_2_2 + 0.166666666667*G2_1_0_2_2;
    block[44] = -0.166666666667*G1_0_2_2_0 - 0.166666666667*G1_0_2_2_1 - 0.166666666667*G1_0_2_2_2 - 0.166666666667*G2_2_0_2_0 - 0.166666666667*G2_2_0_2_1 - 0.166666666667*G2_2_0_2_2;
    block[45] = 0.166666666667*G1_0_2_2_0 + 0.166666666667*G2_2_0_2_0;
    block[46] = 0.166666666667*G1_0_2_2_1 + 0.166666666667*G2_2_0_2_1;
    block[47] = 0.166666666667*G1_0_2_2_2 + 0.166666666667*G2_2_0_2_2;
    block[48] = 0.166666666667*G1_1_0_0_0 + 0.166666666667*G1_1_0_0_1 + 0.166666666667*G1_1_0_0_2 + 0.166666666667*G1_1_0_1_0 + 0.166666666667*G1_1_0_1_1 + 0.166666666667*G1_1_0_1_2 + 0.166666666667*G1_1_0_2_0 + 0.166666666667*G1_1_0_2_1 + 0.166666666667*G1_1_0_2_2 + 0.166666666667*G2_0_1_0_0 + 0.166666666667*G2_0_1_0_1 + 0.166666666667*G2_0_1_0_2 + 0.166666666667*G2_0_1_1_0 + 0.166666666667*G2_0_1_1_1 + 0.166666666667*G2_0_1_1_2 + 0.166666666667*G2_0_1_2_0 + 0.166666666667*G2_0_1_2_1 + 0.166666666667*G2_0_1_2_2;
    block[49] = -0.166666666667*G1_1_0_0_0 - 0.166666666667*G1_1_0_1_0 - 0.166666666667*G1_1_0_2_0 - 0.166666666667*G2_0_1_0_0 - 0.166666666667*G2_0_1_1_0 - 0.166666666667*G2_0_1_2_0;
    block[50] = -0.166666666667*G1_1_0_0_1 - 0.166666666667*G1_1_0_1_1 - 0.166666666667*G1_1_0_2_1 - 0.166666666667*G2_0_1_0_1 - 0.166666666667*G2_0_1_1_1 - 0.166666666667*G2_0_1_2_1;
    block[51] = -0.166666666667*G1_1_0_0_2 - 0.166666666667*G1_1_0_1_2 - 0.166666666667*G1_1_0_2_2 - 0.166666666667*G2_0_1_0_2 - 0.166666666667*G2_0_1_1_2 - 0.166666666667*G2_0_1_2_2;
    block[52] = 0.166666666667*G0_0_0 + 0.166666666667*G0_0_1 + 0.166666666667*G0_0_2 + 0.166666666667*G0_1_0 + 0.166666666667*G0_1_1 + 0.166666666667*G0_1_2 + 0.166666666667*G0_2_0 + 0.166666666667*G0_2_1 + 0.166666666667*G0_2_2 + 0.166666666667*G1_1_1_0_0 + 0.166666666667*G1_1_1_0_1 + 0.166666666667*G1_1_1_0_2 + 0.166666666667*G1_1_1_1_0 + 0.166666666667*G1_1_1_1_1 + 0.166666666667*G1_1_1_1_2 + 0.166666666667*G1_1_1_2_0 + 0.166666666667*G1_1_1_2_1 + 0.166666666667*G1_1_1_2_2 + 0.166666666667*G2_1_1_0_0 + 0.166666666667*G2_1_1_0_1 + 0.166666666667*G2_1_1_0_2 + 0.166666666667*G2_1_1_1_0 + 0.166666666667*G2_1_1_1_1 + 0.166666666667*G2_1_1_1_2 + 0.166666666667*G2_1_1_2_0 + 0.166666666667*G2_1_1_2_1 + 0.166666666667*G2_1_1_2_2 + 0.166666666667*G3_0_0 + 0.166666666667*G3_0_1 + 0.166666666667*G3_0_2 + 0.166666666667*G3_1_0 + 0.166666666667*G3_1_1 + 0.166666666667*G3_1_2 + 0.166666666667*G3_2_0 + 0.166666666667*G3_2_1 + 0.166666666667*G3_2_2;
    block[53] = -0.166666666667*G0_0_0 - 0.166666666667*G0_1_0 - 0.166666666667*G0_2_0 - 0.166666666667*G1_1_1_0_0 - 0.166666666667*G1_1_1_1_0 - 0.166666666667*G1_1_1_2_0 - 0.166666666667*G2_1_1_0_0 - 0.166666666667*G2_1_1_1_0 - 0.166666666667*G2_1_1_2_0 - 0.166666666667*G3_0_0 - 0.166666666667*G3_1_0 - 0.166666666667*G3_2_0;
    block[54] = -0.166666666667*G0_0_1 - 0.166666666667*G0_1_1 - 0.166666666667*G0_2_1 - 0.166666666667*G1_1_1_0_1 - 0.166666666667*G1_1_1_1_1 - 0.166666666667*G1_1_1_2_1 - 0.166666666667*G2_1_1_0_1 - 0.166666666667*G2_1_1_1_1 - 0.166666666667*G2_1_1_2_1 - 0.166666666667*G3_0_1 - 0.166666666667*G3_1_1 - 0.166666666667*G3_2_1;
    block[55] = -0.166666666667*G0_0_2 - 0.166666666667*G0_1_2 - 0.166666666667*G0_2_2 - 0.166666666667*G1_1_1_0_2 - 0.166666666667*G1_1_1_1_2 - 0.166666666667*G1_1_1_2_2 - 0.166666666667*G2_1_1_0_2 - 0.166666666667*G2_1_1_1_2 - 0.166666666667*G2_1_1_2_2 - 0.166666666667*G3_0_2 - 0.166666666667*G3_1_2 - 0.166666666667*G3_2_2;
    block[56] = 0.166666666667*G1_1_2_0_0 + 0.166666666667*G1_1_2_0_1 + 0.166666666667*G1_1_2_0_2 + 0.166666666667*G1_1_2_1_0 + 0.166666666667*G1_1_2_1_1 + 0.166666666667*G1_1_2_1_2 + 0.166666666667*G1_1_2_2_0 + 0.166666666667*G1_1_2_2_1 + 0.166666666667*G1_1_2_2_2 + 0.166666666667*G2_2_1_0_0 + 0.166666666667*G2_2_1_0_1 + 0.166666666667*G2_2_1_0_2 + 0.166666666667*G2_2_1_1_0 + 0.166666666667*G2_2_1_1_1 + 0.166666666667*G2_2_1_1_2 + 0.166666666667*G2_2_1_2_0 + 0.166666666667*G2_2_1_2_1 + 0.166666666667*G2_2_1_2_2;
    block[57] = -0.166666666667*G1_1_2_0_0 - 0.166666666667*G1_1_2_1_0 - 0.166666666667*G1_1_2_2_0 - 0.166666666667*G2_2_1_0_0 - 0.166666666667*G2_2_1_1_0 - 0.166666666667*G2_2_1_2_0;
    block[58] = -0.166666666667*G1_1_2_0_1 - 0.166666666667*G1_1_2_1_1 - 0.166666666667*G1_1_2_2_1 - 0.166666666667*G2_2_1_0_1 - 0.166666666667*G2_2_1_1_1 - 0.166666666667*G2_2_1_2_1;
    block[59] = -0.166666666667*G1_1_2_0_2 - 0.166666666667*G1_1_2_1_2 - 0.166666666667*G1_1_2_2_2 - 0.166666666667*G2_2_1_0_2 - 0.166666666667*G2_2_1_1_2 - 0.166666666667*G2_2_1_2_2;
    block[60] = -0.166666666667*G1_1_0_0_0 - 0.166666666667*G1_1_0_0_1 - 0.166666666667*G1_1_0_0_2 - 0.166666666667*G2_0_1_0_0 - 0.166666666667*G2_0_1_0_1 - 0.166666666667*G2_0_1_0_2;
    block[61] = 0.166666666667*G1_1_0_0_0 + 0.166666666667*G2_0_1_0_0;
    block[62] = 0.166666666667*G1_1_0_0_1 + 0.166666666667*G2_0_1_0_1;
    block[63] = 0.166666666667*G1_1_0_0_2 + 0.166666666667*G2_0_1_0_2;
    block[64] = -0.166666666667*G0_0_0 - 0.166666666667*G0_0_1 - 0.166666666667*G0_0_2 - 0.166666666667*G1_1_1_0_0 - 0.166666666667*G1_1_1_0_1 - 0.166666666667*G1_1_1_0_2 - 0.166666666667*G2_1_1_0_0 - 0.166666666667*G2_1_1_0_1 - 0.166666666667*G2_1_1_0_2 - 0.166666666667*G3_0_0 - 0.166666666667*G3_0_1 - 0.166666666667*G3_0_2;
    block[65] = 0.166666666667*G0_0_0 + 0.166666666667*G1_1_1_0_0 + 0.166666666667*G2_1_1_0_0 + 0.166666666667*G3_0_0;
    block[66] = 0.166666666667*G0_0_1 + 0.166666666667*G1_1_1_0_1 + 0.166666666667*G2_1_1_0_1 + 0.166666666667*G3_0_1;
    block[67] = 0.166666666667*G0_0_2 + 0.166666666667*G1_1_1_0_2 + 0.166666666667*G2_1_1_0_2 + 0.166666666667*G3_0_2;
    block[68] = -0.166666666667*G1_1_2_0_0 - 0.166666666667*G1_1_2_0_1 - 0.166666666667*G1_1_2_0_2 - 0.166666666667*G2_2_1_0_0 - 0.166666666667*G2_2_1_0_1 - 0.166666666667*G2_2_1_0_2;
    block[69] = 0.166666666667*G1_1_2_0_0 + 0.166666666667*G2_2_1_0_0;
    block[70] = 0.166666666667*G1_1_2_0_1 + 0.166666666667*G2_2_1_0_1;
    block[71] = 0.166666666667*G1_1_2_0_2 + 0.166666666667*G2_2_1_0_2;
    block[72] = -0.166666666667*G1_1_0_1_0 - 0.166666666667*G1_1_0_1_1 - 0.166666666667*G1_1_0_1_2 - 0.166666666667*G2_0_1_1_0 - 0.166666666667*G2_0_1_1_1 - 0.166666666667*G2_0_1_1_2;
    block[73] = 0.166666666667*G1_1_0_1_0 + 0.166666666667*G2_0_1_1_0;
    block[74] = 0.166666666667*G1_1_0_1_1 + 0.166666666667*G2_0_1_1_1;
    block[75] = 0.166666666667*G1_1_0_1_2 + 0.166666666667*G2_0_1_1_2;
    block[76] = -0.166666666667*G0_1_0 - 0.166666666667*G0_1_1 - 0.166666666667*G0_1_2 - 0.166666666667*G1_1_1_1_0 - 0.166666666667*G1_1_1_1_1 - 0.166666666667*G1_1_1_1_2 - 0.166666666667*G2_1_1_1_0 - 0.166666666667*G2_1_1_1_1 - 0.166666666667*G2_1_1_1_2 - 0.166666666667*G3_1_0 - 0.166666666667*G3_1_1 - 0.166666666667*G3_1_2;
    block[77] = 0.166666666667*G0_1_0 + 0.166666666667*G1_1_1_1_0 + 0.166666666667*G2_1_1_1_0 + 0.166666666667*G3_1_0;
    block[78] = 0.166666666667*G0_1_1 + 0.166666666667*G1_1_1_1_1 + 0.166666666667*G2_1_1_1_1 + 0.166666666667*G3_1_1;
    block[79] = 0.166666666667*G0_1_2 + 0.166666666667*G1_1_1_1_2 + 0.166666666667*G2_1_1_1_2 + 0.166666666667*G3_1_2;
    block[80] = -0.166666666667*G1_1_2_1_0 - 0.166666666667*G1_1_2_1_1 - 0.166666666667*G1_1_2_1_2 - 0.166666666667*G2_2_1_1_0 - 0.166666666667*G2_2_1_1_1 - 0.166666666667*G2_2_1_1_2;
    block[81] = 0.166666666667*G1_1_2_1_0 + 0.166666666667*G2_2_1_1_0;
    block[82] = 0.166666666667*G1_1_2_1_1 + 0.166666666667*G2_2_1_1_1;
    block[83] = 0.166666666667*G1_1_2_1_2 + 0.166666666667*G2_2_1_1_2;
    block[84] = -0.166666666667*G1_1_0_2_0 - 0.166666666667*G1_1_0_2_1 - 0.166666666667*G1_1_0_2_2 - 0.166666666667*G2_0_1_2_0 - 0.166666666667*G2_0_1_2_1 - 0.166666666667*G2_0_1_2_2;
    block[85] = 0.166666666667*G1_1_0_2_0 + 0.166666666667*G2_0_1_2_0;
    block[86] = 0.166666666667*G1_1_0_2_1 + 0.166666666667*G2_0_1_2_1;
    block[87] = 0.166666666667*G1_1_0_2_2 + 0.166666666667*G2_0_1_2_2;
    block[88] = -0.166666666667*G0_2_0 - 0.166666666667*G0_2_1 - 0.166666666667*G0_2_2 - 0.166666666667*G1_1_1_2_0 - 0.166666666667*G1_1_1_2_1 - 0.166666666667*G1_1_1_2_2 - 0.166666666667*G2_1_1_2_0 - 0.166666666667*G2_1_1_2_1 - 0.166666666667*G2_1_1_2_2 - 0.166666666667*G3_2_0 - 0.166666666667*G3_2_1 - 0.166666666667*G3_2_2;
    block[89] = 0.166666666667*G0_2_0 + 0.166666666667*G1_1_1_2_0 + 0.166666666667*G2_1_1_2_0 + 0.166666666667*G3_2_0;
    block[90] = 0.166666666667*G0_2_1 + 0.166666666667*G1_1_1_2_1 + 0.166666666667*G2_1_1_2_1 + 0.166666666667*G3_2_1;
    block[91] = 0.166666666667*G0_2_2 + 0.166666666667*G1_1_1_2_2 + 0.166666666667*G2_1_1_2_2 + 0.166666666667*G3_2_2;
    block[92] = -0.166666666667*G1_1_2_2_0 - 0.166666666667*G1_1_2_2_1 - 0.166666666667*G1_1_2_2_2 - 0.166666666667*G2_2_1_2_0 - 0.166666666667*G2_2_1_2_1 - 0.166666666667*G2_2_1_2_2;
    block[93] = 0.166666666667*G1_1_2_2_0 + 0.166666666667*G2_2_1_2_0;
    block[94] = 0.166666666667*G1_1_2_2_1 + 0.166666666667*G2_2_1_2_1;
    block[95] = 0.166666666667*G1_1_2_2_2 + 0.166666666667*G2_2_1_2_2;
    block[96] = 0.166666666667*G1_2_0_0_0 + 0.166666666667*G1_2_0_0_1 + 0.166666666667*G1_2_0_0_2 + 0.166666666667*G1_2_0_1_0 + 0.166666666667*G1_2_0_1_1 + 0.166666666667*G1_2_0_1_2 + 0.166666666667*G1_2_0_2_0 + 0.166666666667*G1_2_0_2_1 + 0.166666666667*G1_2_0_2_2 + 0.166666666667*G2_0_2_0_0 + 0.166666666667*G2_0_2_0_1 + 0.166666666667*G2_0_2_0_2 + 0.166666666667*G2_0_2_1_0 + 0.166666666667*G2_0_2_1_1 + 0.166666666667*G2_0_2_1_2 + 0.166666666667*G2_0_2_2_0 + 0.166666666667*G2_0_2_2_1 + 0.166666666667*G2_0_2_2_2;
    block[97] = -0.166666666667*G1_2_0_0_0 - 0.166666666667*G1_2_0_1_0 - 0.166666666667*G1_2_0_2_0 - 0.166666666667*G2_0_2_0_0 - 0.166666666667*G2_0_2_1_0 - 0.166666666667*G2_0_2_2_0;
    block[98] = -0.166666666667*G1_2_0_0_1 - 0.166666666667*G1_2_0_1_1 - 0.166666666667*G1_2_0_2_1 - 0.166666666667*G2_0_2_0_1 - 0.166666666667*G2_0_2_1_1 - 0.166666666667*G2_0_2_2_1;
    block[99] = -0.166666666667*G1_2_0_0_2 - 0.166666666667*G1_2_0_1_2 - 0.166666666667*G1_2_0_2_2 - 0.166666666667*G2_0_2_0_2 - 0.166666666667*G2_0_2_1_2 - 0.166666666667*G2_0_2_2_2;
    block[100] = 0.166666666667*G1_2_1_0_0 + 0.166666666667*G1_2_1_0_1 + 0.166666666667*G1_2_1_0_2 + 0.166666666667*G1_2_1_1_0 + 0.166666666667*G1_2_1_1_1 + 0.166666666667*G1_2_1_1_2 + 0.166666666667*G1_2_1_2_0 + 0.166666666667*G1_2_1_2_1 + 0.166666666667*G1_2_1_2_2 + 0.166666666667*G2_1_2_0_0 + 0.166666666667*G2_1_2_0_1 + 0.166666666667*G2_1_2_0_2 + 0.166666666667*G2_1_2_1_0 + 0.166666666667*G2_1_2_1_1 + 0.166666666667*G2_1_2_1_2 + 0.166666666667*G2_1_2_2_0 + 0.166666666667*G2_1_2_2_1 + 0.166666666667*G2_1_2_2_2;
    block[101] = -0.166666666667*G1_2_1_0_0 - 0.166666666667*G1_2_1_1_0 - 0.166666666667*G1_2_1_2_0 - 0.166666666667*G2_1_2_0_0 - 0.166666666667*G2_1_2_1_0 - 0.166666666667*G2_1_2_2_0;
    block[102] = -0.166666666667*G1_2_1_0_1 - 0.166666666667*G1_2_1_1_1 - 0.166666666667*G1_2_1_2_1 - 0.166666666667*G2_1_2_0_1 - 0.166666666667*G2_1_2_1_1 - 0.166666666667*G2_1_2_2_1;
    block[103] = -0.166666666667*G1_2_1_0_2 - 0.166666666667*G1_2_1_1_2 - 0.166666666667*G1_2_1_2_2 - 0.166666666667*G2_1_2_0_2 - 0.166666666667*G2_1_2_1_2 - 0.166666666667*G2_1_2_2_2;
    block[104] = 0.166666666667*G0_0_0 + 0.166666666667*G0_0_1 + 0.166666666667*G0_0_2 + 0.166666666667*G0_1_0 + 0.166666666667*G0_1_1 + 0.166666666667*G0_1_2 + 0.166666666667*G0_2_0 + 0.166666666667*G0_2_1 + 0.166666666667*G0_2_2 + 0.166666666667*G1_2_2_0_0 + 0.166666666667*G1_2_2_0_1 + 0.166666666667*G1_2_2_0_2 + 0.166666666667*G1_2_2_1_0 + 0.166666666667*G1_2_2_1_1 + 0.166666666667*G1_2_2_1_2 + 0.166666666667*G1_2_2_2_0 + 0.166666666667*G1_2_2_2_1 + 0.166666666667*G1_2_2_2_2 + 0.166666666667*G2_2_2_0_0 + 0.166666666667*G2_2_2_0_1 + 0.166666666667*G2_2_2_0_2 + 0.166666666667*G2_2_2_1_0 + 0.166666666667*G2_2_2_1_1 + 0.166666666667*G2_2_2_1_2 + 0.166666666667*G2_2_2_2_0 + 0.166666666667*G2_2_2_2_1 + 0.166666666667*G2_2_2_2_2 + 0.166666666667*G3_0_0 + 0.166666666667*G3_0_1 + 0.166666666667*G3_0_2 + 0.166666666667*G3_1_0 + 0.166666666667*G3_1_1 + 0.166666666667*G3_1_2 + 0.166666666667*G3_2_0 + 0.166666666667*G3_2_1 + 0.166666666667*G3_2_2;
    block[105] = -0.166666666667*G0_0_0 - 0.166666666667*G0_1_0 - 0.166666666667*G0_2_0 - 0.166666666667*G1_2_2_0_0 - 0.166666666667*G1_2_2_1_0 - 0.166666666667*G1_2_2_2_0 - 0.166666666667*G2_2_2_0_0 - 0.166666666667*G2_2_2_1_0 - 0.166666666667*G2_2_2_2_0 - 0.166666666667*G3_0_0 - 0.166666666667*G3_1_0 - 0.166666666667*G3_2_0;
    block[106] = -0.166666666667*G0_0_1 - 0.166666666667*G0_1_1 - 0.166666666667*G0_2_1 - 0.166666666667*G1_2_2_0_1 - 0.166666666667*G1_2_2_1_1 - 0.166666666667*G1_2_2_2_1 - 0.166666666667*G2_2_2_0_1 - 0.166666666667*G2_2_2_1_1 - 0.166666666667*G2_2_2_2_1 - 0.166666666667*G3_0_1 - 0.166666666667*G3_1_1 - 0.166666666667*G3_2_1;
    block[107] = -0.166666666667*G0_0_2 - 0.166666666667*G0_1_2 - 0.166666666667*G0_2_2 - 0.166666666667*G1_2_2_0_2 - 0.166666666667*G1_2_2_1_2 - 0.166666666667*G1_2_2_2_2 - 0.166666666667*G2_2_2_0_2 - 0.166666666667*G2_2_2_1_2 - 0.166666666667*G2_2_2_2_2 - 0.166666666667*G3_0_2 - 0.166666666667*G3_1_2 - 0.166666666667*G3_2_2;
    block[108] = -0.166666666667*G1_2_0_0_0 - 0.166666666667*G1_2_0_0_1 - 0.166666666667*G1_2_0_0_2 - 0.166666666667*G2_0_2_0_0 - 0.166666666667*G2_0_2_0_1 - 0.166666666667*G2_0_2_0_2;
    block[109] = 0.166666666667*G1_2_0_0_0 + 0.166666666667*G2_0_2_0_0;
    block[110] = 0.166666666667*G1_2_0_0_1 + 0.166666666667*G2_0_2_0_1;
    block[111] = 0.166666666667*G1_2_0_0_2 + 0.166666666667*G2_0_2_0_2;
    block[112] = -0.166666666667*G1_2_1_0_0 - 0.166666666667*G1_2_1_0_1 - 0.166666666667*G1_2_1_0_2 - 0.166666666667*G2_1_2_0_0 - 0.166666666667*G2_1_2_0_1 - 0.166666666667*G2_1_2_0_2;
    block[113] = 0.166666666667*G1_2_1_0_0 + 0.166666666667*G2_1_2_0_0;
    block[114] = 0.166666666667*G1_2_1_0_1 + 0.166666666667*G2_1_2_0_1;
    block[115] = 0.166666666667*G1_2_1_0_2 + 0.166666666667*G2_1_2_0_2;
    block[116] = -0.166666666667*G0_0_0 - 0.166666666667*G0_0_1 - 0.166666666667*G0_0_2 - 0.166666666667*G1_2_2_0_0 - 0.166666666667*G1_2_2_0_1 - 0.166666666667*G1_2_2_0_2 - 0.166666666667*G2_2_2_0_0 - 0.166666666667*G2_2_2_0_1 - 0.166666666667*G2_2_2_0_2 - 0.166666666667*G3_0_0 - 0.166666666667*G3_0_1 - 0.166666666667*G3_0_2;
    block[117] = 0.166666666667*G0_0_0 + 0.166666666667*G1_2_2_0_0 + 0.166666666667*G2_2_2_0_0 + 0.166666666667*G3_0_0;
    block[118] = 0.166666666667*G0_0_1 + 0.166666666667*G1_2_2_0_1 + 0.166666666667*G2_2_2_0_1 + 0.166666666667*G3_0_1;
    block[119] = 0.166666666667*G0_0_2 + 0.166666666667*G1_2_2_0_2 + 0.166666666667*G2_2_2_0_2 + 0.166666666667*G3_0_2;
    block[120] = -0.166666666667*G1_2_0_1_0 - 0.166666666667*G1_2_0_1_1 - 0.166666666667*G1_2_0_1_2 - 0.166666666667*G2_0_2_1_0 - 0.166666666667*G2_0_2_1_1 - 0.166666666667*G2_0_2_1_2;
    block[121] = 0.166666666667*G1_2_0_1_0 + 0.166666666667*G2_0_2_1_0;
    block[122] = 0.166666666667*G1_2_0_1_1 + 0.166666666667*G2_0_2_1_1;
    block[123] = 0.166666666667*G1_2_0_1_2 + 0.166666666667*G2_0_2_1_2;
    block[124] = -0.166666666667*G1_2_1_1_0 - 0.166666666667*G1_2_1_1_1 - 0.166666666667*G1_2_1_1_2 - 0.166666666667*G2_1_2_1_0 - 0.166666666667*G2_1_2_1_1 - 0.166666666667*G2_1_2_1_2;
    block[125] = 0.166666666667*G1_2_1_1_0 + 0.166666666667*G2_1_2_1_0;
    block[126] = 0.166666666667*G1_2_1_1_1 + 0.166666666667*G2_1_2_1_1;
    block[127] = 0.166666666667*G1_2_1_1_2 + 0.166666666667*G2_1_2_1_2;
    block[128] = -0.166666666667*G0_1_0 - 0.166666666667*G0_1_1 - 0.166666666667*G0_1_2 - 0.166666666667*G1_2_2_1_0 - 0.166666666667*G1_2_2_1_1 - 0.166666666667*G1_2_2_1_2 - 0.166666666667*G2_2_2_1_0 - 0.166666666667*G2_2_2_1_1 - 0.166666666667*G2_2_2_1_2 - 0.166666666667*G3_1_0 - 0.166666666667*G3_1_1 - 0.166666666667*G3_1_2;
    block[129] = 0.166666666667*G0_1_0 + 0.166666666667*G1_2_2_1_0 + 0.166666666667*G2_2_2_1_0 + 0.166666666667*G3_1_0;
    block[130] = 0.166666666667*G0_1_1 + 0.166666666667*G1_2_2_1_1 + 0.166666666667*G2_2_2_1_1 + 0.166666666667*G3_1_1;
    block[131] = 0.166666666667*G0_1_2 + 0.166666666667*G1_2_2_1_2 + 0.166666666667*G2_2_2_1_2 + 0.166666666667*G3_1_2;
    block[132] = -0.166666666667*G1_2_0_2_0 - 0.166666666667*G1_2_0_2_1 - 0.166666666667*G1_2_0_2_2 - 0.166666666667*G2_0_2_2_0 - 0.166666666667*G2_0_2_2_1 - 0.166666666667*G2_0_2_2_2;
    block[133] = 0.166666666667*G1_2_0_2_0 + 0.166666666667*G2_0_2_2_0;
    block[134] = 0.166666666667*G1_2_0_2_1 + 0.166666666667*G2_0_2_2_1;
    block[135] = 0.166666666667*G1_2_0_2_2 + 0.166666666667*G2_0_2_2_2;
    block[136] = -0.166666666667*G1_2_1_2_0 - 0.166666666667*G1_2_1_2_1 - 0.166666666667*G1_2_1_2_2 - 0.166666666667*G2_1_2_2_0 - 0.166666666667*G2_1_2_2_1 - 0.166666666667*G2_1_2_2_2;
    block[137] = 0.166666666667*G1_2_1_2_0 + 0.166666666667*G2_1_2_2_0;
    block[138] = 0.166666666667*G1_2_1_2_1 + 0.166666666667*G2_1_2_2_1;
    block[139] = 0.166666666667*G1_2_1_2_2 + 0.166666666667*G2_1_2_2_2;
    block[140] = -0.166666666667*G0_2_0 - 0.166666666667*G0_2_1 - 0.166666666667*G0_2_2 - 0.166666666667*G1_2_2_2_0 - 0.166666666667*G1_2_2_2_1 - 0.166666666667*G1_2_2_2_2 - 0.166666666667*G2_2_2_2_0 - 0.166666666667*G2_2_2_2_1 - 0.166666666667*G2_2_2_2_2 - 0.166666666667*G3_2_0 - 0.166666666667*G3_2_1 - 0.166666666667*G3_2_2;
    block[141] = 0.166666666667*G0_2_0 + 0.166666666667*G1_2_2_2_0 + 0.166666666667*G2_2_2_2_0 + 0.166666666667*G3_2_0;
    block[142] = 0.166666666667*G0_2_1 + 0.166666666667*G1_2_2_2_1 + 0.166666666667*G2_2_2_2_1 + 0.166666666667*G3_2_1;
    block[143] = 0.166666666667*G0_2_2 + 0.166666666667*G1_2_2_2_2 + 0.166666666667*G2_2_2_2_2 + 0.166666666667*G3_2_2;

    return true;
  }

};


} }

#endif
