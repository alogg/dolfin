// Automatically generated by FFC, the FEniCS Form Compiler, version 0.1.9.
// For further information, go to http://www/fenics.org/ffc/.
// Licensed under the GNU GPL Version 2.

#ifndef __ELASTICITYUPDATEDJAUMANN_H
#define __ELASTICITYUPDATEDJAUMANN_H

#include <dolfin/FiniteElement.h>
#include <dolfin/LinearForm.h>
#include <dolfin/BilinearForm.h>

namespace dolfin { namespace ElasticityUpdatedJaumann {

/// This class contains the form to be evaluated, including
/// contributions from the interior and boundary of the domain.

class LinearForm : public dolfin::LinearForm
{
public:
    
  class TestElement : public dolfin::FiniteElement
  {
  public:

    TestElement() : dolfin::FiniteElement(), tensordims(0)
    {
      tensordims = new unsigned int [1];
      tensordims[0] = 9;
    }

    ~TestElement()
    {
      if ( tensordims ) delete [] tensordims;
    }

    inline unsigned int spacedim() const
    {
      return 9;
    }

    inline unsigned int shapedim() const
    {
      return 3;
    }

    inline unsigned int tensordim(unsigned int i) const
    {
      dolfin_assert(i < 1);
      return tensordims[i];
    }

    inline unsigned int rank() const
    {
      return 1;
    }

    void dofmap(int dofs[], const Cell& cell, const Mesh& mesh) const
    {
      dofs[0] = cell.id();
      int offset = mesh.noCells();
      dofs[1] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[2] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[3] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[4] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[5] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[6] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[7] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[8] = offset + cell.id();
    }

    void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
    {
      points[0] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[1] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[2] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[3] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[4] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[5] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[6] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[7] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[8] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      components[0] = 0;
      components[1] = 1;
      components[2] = 2;
      components[3] = 3;
      components[4] = 4;
      components[5] = 5;
      components[6] = 6;
      components[7] = 7;
      components[8] = 8;
    }

  private:

    unsigned int* tensordims;

  };
    
  class FunctionElement_0 : public dolfin::FiniteElement
  {
  public:

    FunctionElement_0() : dolfin::FiniteElement(), tensordims(0)
    {
      tensordims = new unsigned int [1];
      tensordims[0] = 3;
    }

    ~FunctionElement_0()
    {
      if ( tensordims ) delete [] tensordims;
    }

    inline unsigned int spacedim() const
    {
      return 12;
    }

    inline unsigned int shapedim() const
    {
      return 3;
    }

    inline unsigned int tensordim(unsigned int i) const
    {
      dolfin_assert(i < 1);
      return tensordims[i];
    }

    inline unsigned int rank() const
    {
      return 1;
    }

    void dofmap(int dofs[], const Cell& cell, const Mesh& mesh) const
    {
      dofs[0] = cell.nodeID(0);
      dofs[1] = cell.nodeID(1);
      dofs[2] = cell.nodeID(2);
      dofs[3] = cell.nodeID(3);
      int offset = mesh.noNodes();
      dofs[4] = offset + cell.nodeID(0);
      dofs[5] = offset + cell.nodeID(1);
      dofs[6] = offset + cell.nodeID(2);
      dofs[7] = offset + cell.nodeID(3);
      offset = offset + mesh.noNodes();
      dofs[8] = offset + cell.nodeID(0);
      dofs[9] = offset + cell.nodeID(1);
      dofs[10] = offset + cell.nodeID(2);
      dofs[11] = offset + cell.nodeID(3);
    }

    void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
    {
      points[0] = map(0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
      points[1] = map(1.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
      points[2] = map(0.000000000000000e+00, 1.000000000000000e+00, 0.000000000000000e+00);
      points[3] = map(0.000000000000000e+00, 0.000000000000000e+00, 1.000000000000000e+00);
      points[4] = map(0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
      points[5] = map(1.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
      points[6] = map(0.000000000000000e+00, 1.000000000000000e+00, 0.000000000000000e+00);
      points[7] = map(0.000000000000000e+00, 0.000000000000000e+00, 1.000000000000000e+00);
      points[8] = map(0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
      points[9] = map(1.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
      points[10] = map(0.000000000000000e+00, 1.000000000000000e+00, 0.000000000000000e+00);
      points[11] = map(0.000000000000000e+00, 0.000000000000000e+00, 1.000000000000000e+00);
      components[0] = 0;
      components[1] = 0;
      components[2] = 0;
      components[3] = 0;
      components[4] = 1;
      components[5] = 1;
      components[6] = 1;
      components[7] = 1;
      components[8] = 2;
      components[9] = 2;
      components[10] = 2;
      components[11] = 2;
    }

  private:

    unsigned int* tensordims;

  };
    
  class FunctionElement_1 : public dolfin::FiniteElement
  {
  public:

    FunctionElement_1() : dolfin::FiniteElement(), tensordims(0)
    {
      tensordims = new unsigned int [1];
      tensordims[0] = 9;
    }

    ~FunctionElement_1()
    {
      if ( tensordims ) delete [] tensordims;
    }

    inline unsigned int spacedim() const
    {
      return 9;
    }

    inline unsigned int shapedim() const
    {
      return 3;
    }

    inline unsigned int tensordim(unsigned int i) const
    {
      dolfin_assert(i < 1);
      return tensordims[i];
    }

    inline unsigned int rank() const
    {
      return 1;
    }

    void dofmap(int dofs[], const Cell& cell, const Mesh& mesh) const
    {
      dofs[0] = cell.id();
      int offset = mesh.noCells();
      dofs[1] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[2] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[3] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[4] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[5] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[6] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[7] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[8] = offset + cell.id();
    }

    void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
    {
      points[0] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[1] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[2] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[3] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[4] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[5] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[6] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[7] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[8] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      components[0] = 0;
      components[1] = 1;
      components[2] = 2;
      components[3] = 3;
      components[4] = 4;
      components[5] = 5;
      components[6] = 6;
      components[7] = 7;
      components[8] = 8;
    }

  private:

    unsigned int* tensordims;

  };

  LinearForm(Function& w0, Function& w1) : dolfin::LinearForm(2)
  {
    // Create finite element for test space
    _test = new TestElement();
        
    // Add functions
    add(w0, new FunctionElement_0());
    add(w1, new FunctionElement_1());
  }

  void eval(real block[], const AffineMap& map) const
  {
    // Compute geometry tensors
    real G0_0_0_0 = map.det*c[0][0]*c[1][0]*map.g00;
    real G0_0_0_1 = map.det*c[0][0]*c[1][0]*map.g10;
    real G0_0_0_2 = map.det*c[0][0]*c[1][0]*map.g20;
    real G0_0_1_0 = map.det*c[0][1]*c[1][0]*map.g00;
    real G0_0_2_1 = map.det*c[0][2]*c[1][0]*map.g10;
    real G0_0_3_2 = map.det*c[0][3]*c[1][0]*map.g20;
    real G1_0_0_0 = map.det*c[0][0]*c[1][0]*map.g00;
    real G1_0_0_1 = map.det*c[0][0]*c[1][0]*map.g10;
    real G1_0_0_2 = map.det*c[0][0]*c[1][0]*map.g20;
    real G1_0_1_0 = map.det*c[0][1]*c[1][0]*map.g00;
    real G1_0_2_1 = map.det*c[0][2]*c[1][0]*map.g10;
    real G1_0_3_2 = map.det*c[0][3]*c[1][0]*map.g20;
    real G2_3_0_0 = map.det*c[0][0]*c[1][3]*map.g01;
    real G2_3_0_1 = map.det*c[0][0]*c[1][3]*map.g11;
    real G2_3_0_2 = map.det*c[0][0]*c[1][3]*map.g21;
    real G2_3_1_0 = map.det*c[0][1]*c[1][3]*map.g01;
    real G2_3_2_1 = map.det*c[0][2]*c[1][3]*map.g11;
    real G2_3_3_2 = map.det*c[0][3]*c[1][3]*map.g21;
    real G3_3_4_0 = map.det*c[0][4]*c[1][3]*map.g00;
    real G3_3_4_1 = map.det*c[0][4]*c[1][3]*map.g10;
    real G3_3_4_2 = map.det*c[0][4]*c[1][3]*map.g20;
    real G3_3_5_0 = map.det*c[0][5]*c[1][3]*map.g00;
    real G3_3_6_1 = map.det*c[0][6]*c[1][3]*map.g10;
    real G3_3_7_2 = map.det*c[0][7]*c[1][3]*map.g20;
    real G4_6_0_0 = map.det*c[0][0]*c[1][6]*map.g02;
    real G4_6_0_1 = map.det*c[0][0]*c[1][6]*map.g12;
    real G4_6_0_2 = map.det*c[0][0]*c[1][6]*map.g22;
    real G4_6_1_0 = map.det*c[0][1]*c[1][6]*map.g02;
    real G4_6_2_1 = map.det*c[0][2]*c[1][6]*map.g12;
    real G4_6_3_2 = map.det*c[0][3]*c[1][6]*map.g22;
    real G5_6_8_0 = map.det*c[0][8]*c[1][6]*map.g00;
    real G5_6_8_1 = map.det*c[0][8]*c[1][6]*map.g10;
    real G5_6_8_2 = map.det*c[0][8]*c[1][6]*map.g20;
    real G5_6_9_0 = map.det*c[0][9]*c[1][6]*map.g00;
    real G5_6_10_1 = map.det*c[0][10]*c[1][6]*map.g10;
    real G5_6_11_2 = map.det*c[0][11]*c[1][6]*map.g20;
    real G6_0_0_0 = map.det*c[1][0]*c[0][0]*map.g00;
    real G6_0_0_1 = map.det*c[1][0]*c[0][0]*map.g10;
    real G6_0_0_2 = map.det*c[1][0]*c[0][0]*map.g20;
    real G6_0_1_0 = map.det*c[1][0]*c[0][1]*map.g00;
    real G6_0_2_1 = map.det*c[1][0]*c[0][2]*map.g10;
    real G6_0_3_2 = map.det*c[1][0]*c[0][3]*map.g20;
    real G7_0_0_0 = map.det*c[1][0]*c[0][0]*map.g00;
    real G7_0_0_1 = map.det*c[1][0]*c[0][0]*map.g10;
    real G7_0_0_2 = map.det*c[1][0]*c[0][0]*map.g20;
    real G7_0_1_0 = map.det*c[1][0]*c[0][1]*map.g00;
    real G7_0_2_1 = map.det*c[1][0]*c[0][2]*map.g10;
    real G7_0_3_2 = map.det*c[1][0]*c[0][3]*map.g20;
    real G8_1_4_0 = map.det*c[1][1]*c[0][4]*map.g00;
    real G8_1_4_1 = map.det*c[1][1]*c[0][4]*map.g10;
    real G8_1_4_2 = map.det*c[1][1]*c[0][4]*map.g20;
    real G8_1_5_0 = map.det*c[1][1]*c[0][5]*map.g00;
    real G8_1_6_1 = map.det*c[1][1]*c[0][6]*map.g10;
    real G8_1_7_2 = map.det*c[1][1]*c[0][7]*map.g20;
    real G9_1_0_0 = map.det*c[1][1]*c[0][0]*map.g01;
    real G9_1_0_1 = map.det*c[1][1]*c[0][0]*map.g11;
    real G9_1_0_2 = map.det*c[1][1]*c[0][0]*map.g21;
    real G9_1_1_0 = map.det*c[1][1]*c[0][1]*map.g01;
    real G9_1_2_1 = map.det*c[1][1]*c[0][2]*map.g11;
    real G9_1_3_2 = map.det*c[1][1]*c[0][3]*map.g21;
    real G10_2_8_0 = map.det*c[1][2]*c[0][8]*map.g00;
    real G10_2_8_1 = map.det*c[1][2]*c[0][8]*map.g10;
    real G10_2_8_2 = map.det*c[1][2]*c[0][8]*map.g20;
    real G10_2_9_0 = map.det*c[1][2]*c[0][9]*map.g00;
    real G10_2_10_1 = map.det*c[1][2]*c[0][10]*map.g10;
    real G10_2_11_2 = map.det*c[1][2]*c[0][11]*map.g20;
    real G11_2_0_0 = map.det*c[1][2]*c[0][0]*map.g02;
    real G11_2_0_1 = map.det*c[1][2]*c[0][0]*map.g12;
    real G11_2_0_2 = map.det*c[1][2]*c[0][0]*map.g22;
    real G11_2_1_0 = map.det*c[1][2]*c[0][1]*map.g02;
    real G11_2_2_1 = map.det*c[1][2]*c[0][2]*map.g12;
    real G11_2_3_2 = map.det*c[1][2]*c[0][3]*map.g22;
    real G12_1_0_0 = map.det*c[0][0]*c[1][1]*map.g00;
    real G12_1_0_1 = map.det*c[0][0]*c[1][1]*map.g10;
    real G12_1_0_2 = map.det*c[0][0]*c[1][1]*map.g20;
    real G12_1_1_0 = map.det*c[0][1]*c[1][1]*map.g00;
    real G12_1_2_1 = map.det*c[0][2]*c[1][1]*map.g10;
    real G12_1_3_2 = map.det*c[0][3]*c[1][1]*map.g20;
    real G13_1_0_0 = map.det*c[0][0]*c[1][1]*map.g00;
    real G13_1_0_1 = map.det*c[0][0]*c[1][1]*map.g10;
    real G13_1_0_2 = map.det*c[0][0]*c[1][1]*map.g20;
    real G13_1_1_0 = map.det*c[0][1]*c[1][1]*map.g00;
    real G13_1_2_1 = map.det*c[0][2]*c[1][1]*map.g10;
    real G13_1_3_2 = map.det*c[0][3]*c[1][1]*map.g20;
    real G14_4_0_0 = map.det*c[0][0]*c[1][4]*map.g01;
    real G14_4_0_1 = map.det*c[0][0]*c[1][4]*map.g11;
    real G14_4_0_2 = map.det*c[0][0]*c[1][4]*map.g21;
    real G14_4_1_0 = map.det*c[0][1]*c[1][4]*map.g01;
    real G14_4_2_1 = map.det*c[0][2]*c[1][4]*map.g11;
    real G14_4_3_2 = map.det*c[0][3]*c[1][4]*map.g21;
    real G15_4_4_0 = map.det*c[0][4]*c[1][4]*map.g00;
    real G15_4_4_1 = map.det*c[0][4]*c[1][4]*map.g10;
    real G15_4_4_2 = map.det*c[0][4]*c[1][4]*map.g20;
    real G15_4_5_0 = map.det*c[0][5]*c[1][4]*map.g00;
    real G15_4_6_1 = map.det*c[0][6]*c[1][4]*map.g10;
    real G15_4_7_2 = map.det*c[0][7]*c[1][4]*map.g20;
    real G16_7_0_0 = map.det*c[0][0]*c[1][7]*map.g02;
    real G16_7_0_1 = map.det*c[0][0]*c[1][7]*map.g12;
    real G16_7_0_2 = map.det*c[0][0]*c[1][7]*map.g22;
    real G16_7_1_0 = map.det*c[0][1]*c[1][7]*map.g02;
    real G16_7_2_1 = map.det*c[0][2]*c[1][7]*map.g12;
    real G16_7_3_2 = map.det*c[0][3]*c[1][7]*map.g22;
    real G17_7_8_0 = map.det*c[0][8]*c[1][7]*map.g00;
    real G17_7_8_1 = map.det*c[0][8]*c[1][7]*map.g10;
    real G17_7_8_2 = map.det*c[0][8]*c[1][7]*map.g20;
    real G17_7_9_0 = map.det*c[0][9]*c[1][7]*map.g00;
    real G17_7_10_1 = map.det*c[0][10]*c[1][7]*map.g10;
    real G17_7_11_2 = map.det*c[0][11]*c[1][7]*map.g20;
    real G18_0_0_0 = map.det*c[1][0]*c[0][0]*map.g01;
    real G18_0_0_1 = map.det*c[1][0]*c[0][0]*map.g11;
    real G18_0_0_2 = map.det*c[1][0]*c[0][0]*map.g21;
    real G18_0_1_0 = map.det*c[1][0]*c[0][1]*map.g01;
    real G18_0_2_1 = map.det*c[1][0]*c[0][2]*map.g11;
    real G18_0_3_2 = map.det*c[1][0]*c[0][3]*map.g21;
    real G19_0_4_0 = map.det*c[1][0]*c[0][4]*map.g00;
    real G19_0_4_1 = map.det*c[1][0]*c[0][4]*map.g10;
    real G19_0_4_2 = map.det*c[1][0]*c[0][4]*map.g20;
    real G19_0_5_0 = map.det*c[1][0]*c[0][5]*map.g00;
    real G19_0_6_1 = map.det*c[1][0]*c[0][6]*map.g10;
    real G19_0_7_2 = map.det*c[1][0]*c[0][7]*map.g20;
    real G20_1_4_0 = map.det*c[1][1]*c[0][4]*map.g01;
    real G20_1_4_1 = map.det*c[1][1]*c[0][4]*map.g11;
    real G20_1_4_2 = map.det*c[1][1]*c[0][4]*map.g21;
    real G20_1_5_0 = map.det*c[1][1]*c[0][5]*map.g01;
    real G20_1_6_1 = map.det*c[1][1]*c[0][6]*map.g11;
    real G20_1_7_2 = map.det*c[1][1]*c[0][7]*map.g21;
    real G21_1_4_0 = map.det*c[1][1]*c[0][4]*map.g01;
    real G21_1_4_1 = map.det*c[1][1]*c[0][4]*map.g11;
    real G21_1_4_2 = map.det*c[1][1]*c[0][4]*map.g21;
    real G21_1_5_0 = map.det*c[1][1]*c[0][5]*map.g01;
    real G21_1_6_1 = map.det*c[1][1]*c[0][6]*map.g11;
    real G21_1_7_2 = map.det*c[1][1]*c[0][7]*map.g21;
    real G22_2_8_0 = map.det*c[1][2]*c[0][8]*map.g01;
    real G22_2_8_1 = map.det*c[1][2]*c[0][8]*map.g11;
    real G22_2_8_2 = map.det*c[1][2]*c[0][8]*map.g21;
    real G22_2_9_0 = map.det*c[1][2]*c[0][9]*map.g01;
    real G22_2_10_1 = map.det*c[1][2]*c[0][10]*map.g11;
    real G22_2_11_2 = map.det*c[1][2]*c[0][11]*map.g21;
    real G23_2_4_0 = map.det*c[1][2]*c[0][4]*map.g02;
    real G23_2_4_1 = map.det*c[1][2]*c[0][4]*map.g12;
    real G23_2_4_2 = map.det*c[1][2]*c[0][4]*map.g22;
    real G23_2_5_0 = map.det*c[1][2]*c[0][5]*map.g02;
    real G23_2_6_1 = map.det*c[1][2]*c[0][6]*map.g12;
    real G23_2_7_2 = map.det*c[1][2]*c[0][7]*map.g22;
    real G24_2_0_0 = map.det*c[0][0]*c[1][2]*map.g00;
    real G24_2_0_1 = map.det*c[0][0]*c[1][2]*map.g10;
    real G24_2_0_2 = map.det*c[0][0]*c[1][2]*map.g20;
    real G24_2_1_0 = map.det*c[0][1]*c[1][2]*map.g00;
    real G24_2_2_1 = map.det*c[0][2]*c[1][2]*map.g10;
    real G24_2_3_2 = map.det*c[0][3]*c[1][2]*map.g20;
    real G25_2_0_0 = map.det*c[0][0]*c[1][2]*map.g00;
    real G25_2_0_1 = map.det*c[0][0]*c[1][2]*map.g10;
    real G25_2_0_2 = map.det*c[0][0]*c[1][2]*map.g20;
    real G25_2_1_0 = map.det*c[0][1]*c[1][2]*map.g00;
    real G25_2_2_1 = map.det*c[0][2]*c[1][2]*map.g10;
    real G25_2_3_2 = map.det*c[0][3]*c[1][2]*map.g20;
    real G26_5_0_0 = map.det*c[0][0]*c[1][5]*map.g01;
    real G26_5_0_1 = map.det*c[0][0]*c[1][5]*map.g11;
    real G26_5_0_2 = map.det*c[0][0]*c[1][5]*map.g21;
    real G26_5_1_0 = map.det*c[0][1]*c[1][5]*map.g01;
    real G26_5_2_1 = map.det*c[0][2]*c[1][5]*map.g11;
    real G26_5_3_2 = map.det*c[0][3]*c[1][5]*map.g21;
    real G27_5_4_0 = map.det*c[0][4]*c[1][5]*map.g00;
    real G27_5_4_1 = map.det*c[0][4]*c[1][5]*map.g10;
    real G27_5_4_2 = map.det*c[0][4]*c[1][5]*map.g20;
    real G27_5_5_0 = map.det*c[0][5]*c[1][5]*map.g00;
    real G27_5_6_1 = map.det*c[0][6]*c[1][5]*map.g10;
    real G27_5_7_2 = map.det*c[0][7]*c[1][5]*map.g20;
    real G28_8_0_0 = map.det*c[0][0]*c[1][8]*map.g02;
    real G28_8_0_1 = map.det*c[0][0]*c[1][8]*map.g12;
    real G28_8_0_2 = map.det*c[0][0]*c[1][8]*map.g22;
    real G28_8_1_0 = map.det*c[0][1]*c[1][8]*map.g02;
    real G28_8_2_1 = map.det*c[0][2]*c[1][8]*map.g12;
    real G28_8_3_2 = map.det*c[0][3]*c[1][8]*map.g22;
    real G29_8_8_0 = map.det*c[0][8]*c[1][8]*map.g00;
    real G29_8_8_1 = map.det*c[0][8]*c[1][8]*map.g10;
    real G29_8_8_2 = map.det*c[0][8]*c[1][8]*map.g20;
    real G29_8_9_0 = map.det*c[0][9]*c[1][8]*map.g00;
    real G29_8_10_1 = map.det*c[0][10]*c[1][8]*map.g10;
    real G29_8_11_2 = map.det*c[0][11]*c[1][8]*map.g20;
    real G30_0_0_0 = map.det*c[1][0]*c[0][0]*map.g02;
    real G30_0_0_1 = map.det*c[1][0]*c[0][0]*map.g12;
    real G30_0_0_2 = map.det*c[1][0]*c[0][0]*map.g22;
    real G30_0_1_0 = map.det*c[1][0]*c[0][1]*map.g02;
    real G30_0_2_1 = map.det*c[1][0]*c[0][2]*map.g12;
    real G30_0_3_2 = map.det*c[1][0]*c[0][3]*map.g22;
    real G31_0_8_0 = map.det*c[1][0]*c[0][8]*map.g00;
    real G31_0_8_1 = map.det*c[1][0]*c[0][8]*map.g10;
    real G31_0_8_2 = map.det*c[1][0]*c[0][8]*map.g20;
    real G31_0_9_0 = map.det*c[1][0]*c[0][9]*map.g00;
    real G31_0_10_1 = map.det*c[1][0]*c[0][10]*map.g10;
    real G31_0_11_2 = map.det*c[1][0]*c[0][11]*map.g20;
    real G32_1_4_0 = map.det*c[1][1]*c[0][4]*map.g02;
    real G32_1_4_1 = map.det*c[1][1]*c[0][4]*map.g12;
    real G32_1_4_2 = map.det*c[1][1]*c[0][4]*map.g22;
    real G32_1_5_0 = map.det*c[1][1]*c[0][5]*map.g02;
    real G32_1_6_1 = map.det*c[1][1]*c[0][6]*map.g12;
    real G32_1_7_2 = map.det*c[1][1]*c[0][7]*map.g22;
    real G33_1_8_0 = map.det*c[1][1]*c[0][8]*map.g01;
    real G33_1_8_1 = map.det*c[1][1]*c[0][8]*map.g11;
    real G33_1_8_2 = map.det*c[1][1]*c[0][8]*map.g21;
    real G33_1_9_0 = map.det*c[1][1]*c[0][9]*map.g01;
    real G33_1_10_1 = map.det*c[1][1]*c[0][10]*map.g11;
    real G33_1_11_2 = map.det*c[1][1]*c[0][11]*map.g21;
    real G34_2_8_0 = map.det*c[1][2]*c[0][8]*map.g02;
    real G34_2_8_1 = map.det*c[1][2]*c[0][8]*map.g12;
    real G34_2_8_2 = map.det*c[1][2]*c[0][8]*map.g22;
    real G34_2_9_0 = map.det*c[1][2]*c[0][9]*map.g02;
    real G34_2_10_1 = map.det*c[1][2]*c[0][10]*map.g12;
    real G34_2_11_2 = map.det*c[1][2]*c[0][11]*map.g22;
    real G35_2_8_0 = map.det*c[1][2]*c[0][8]*map.g02;
    real G35_2_8_1 = map.det*c[1][2]*c[0][8]*map.g12;
    real G35_2_8_2 = map.det*c[1][2]*c[0][8]*map.g22;
    real G35_2_9_0 = map.det*c[1][2]*c[0][9]*map.g02;
    real G35_2_10_1 = map.det*c[1][2]*c[0][10]*map.g12;
    real G35_2_11_2 = map.det*c[1][2]*c[0][11]*map.g22;
    real G36_0_4_0 = map.det*c[0][4]*c[1][0]*map.g00;
    real G36_0_4_1 = map.det*c[0][4]*c[1][0]*map.g10;
    real G36_0_4_2 = map.det*c[0][4]*c[1][0]*map.g20;
    real G36_0_5_0 = map.det*c[0][5]*c[1][0]*map.g00;
    real G36_0_6_1 = map.det*c[0][6]*c[1][0]*map.g10;
    real G36_0_7_2 = map.det*c[0][7]*c[1][0]*map.g20;
    real G37_0_0_0 = map.det*c[0][0]*c[1][0]*map.g01;
    real G37_0_0_1 = map.det*c[0][0]*c[1][0]*map.g11;
    real G37_0_0_2 = map.det*c[0][0]*c[1][0]*map.g21;
    real G37_0_1_0 = map.det*c[0][1]*c[1][0]*map.g01;
    real G37_0_2_1 = map.det*c[0][2]*c[1][0]*map.g11;
    real G37_0_3_2 = map.det*c[0][3]*c[1][0]*map.g21;
    real G38_3_4_0 = map.det*c[0][4]*c[1][3]*map.g01;
    real G38_3_4_1 = map.det*c[0][4]*c[1][3]*map.g11;
    real G38_3_4_2 = map.det*c[0][4]*c[1][3]*map.g21;
    real G38_3_5_0 = map.det*c[0][5]*c[1][3]*map.g01;
    real G38_3_6_1 = map.det*c[0][6]*c[1][3]*map.g11;
    real G38_3_7_2 = map.det*c[0][7]*c[1][3]*map.g21;
    real G39_3_4_0 = map.det*c[0][4]*c[1][3]*map.g01;
    real G39_3_4_1 = map.det*c[0][4]*c[1][3]*map.g11;
    real G39_3_4_2 = map.det*c[0][4]*c[1][3]*map.g21;
    real G39_3_5_0 = map.det*c[0][5]*c[1][3]*map.g01;
    real G39_3_6_1 = map.det*c[0][6]*c[1][3]*map.g11;
    real G39_3_7_2 = map.det*c[0][7]*c[1][3]*map.g21;
    real G40_6_4_0 = map.det*c[0][4]*c[1][6]*map.g02;
    real G40_6_4_1 = map.det*c[0][4]*c[1][6]*map.g12;
    real G40_6_4_2 = map.det*c[0][4]*c[1][6]*map.g22;
    real G40_6_5_0 = map.det*c[0][5]*c[1][6]*map.g02;
    real G40_6_6_1 = map.det*c[0][6]*c[1][6]*map.g12;
    real G40_6_7_2 = map.det*c[0][7]*c[1][6]*map.g22;
    real G41_6_8_0 = map.det*c[0][8]*c[1][6]*map.g01;
    real G41_6_8_1 = map.det*c[0][8]*c[1][6]*map.g11;
    real G41_6_8_2 = map.det*c[0][8]*c[1][6]*map.g21;
    real G41_6_9_0 = map.det*c[0][9]*c[1][6]*map.g01;
    real G41_6_10_1 = map.det*c[0][10]*c[1][6]*map.g11;
    real G41_6_11_2 = map.det*c[0][11]*c[1][6]*map.g21;
    real G42_3_0_0 = map.det*c[1][3]*c[0][0]*map.g00;
    real G42_3_0_1 = map.det*c[1][3]*c[0][0]*map.g10;
    real G42_3_0_2 = map.det*c[1][3]*c[0][0]*map.g20;
    real G42_3_1_0 = map.det*c[1][3]*c[0][1]*map.g00;
    real G42_3_2_1 = map.det*c[1][3]*c[0][2]*map.g10;
    real G42_3_3_2 = map.det*c[1][3]*c[0][3]*map.g20;
    real G43_3_0_0 = map.det*c[1][3]*c[0][0]*map.g00;
    real G43_3_0_1 = map.det*c[1][3]*c[0][0]*map.g10;
    real G43_3_0_2 = map.det*c[1][3]*c[0][0]*map.g20;
    real G43_3_1_0 = map.det*c[1][3]*c[0][1]*map.g00;
    real G43_3_2_1 = map.det*c[1][3]*c[0][2]*map.g10;
    real G43_3_3_2 = map.det*c[1][3]*c[0][3]*map.g20;
    real G44_4_4_0 = map.det*c[1][4]*c[0][4]*map.g00;
    real G44_4_4_1 = map.det*c[1][4]*c[0][4]*map.g10;
    real G44_4_4_2 = map.det*c[1][4]*c[0][4]*map.g20;
    real G44_4_5_0 = map.det*c[1][4]*c[0][5]*map.g00;
    real G44_4_6_1 = map.det*c[1][4]*c[0][6]*map.g10;
    real G44_4_7_2 = map.det*c[1][4]*c[0][7]*map.g20;
    real G45_4_0_0 = map.det*c[1][4]*c[0][0]*map.g01;
    real G45_4_0_1 = map.det*c[1][4]*c[0][0]*map.g11;
    real G45_4_0_2 = map.det*c[1][4]*c[0][0]*map.g21;
    real G45_4_1_0 = map.det*c[1][4]*c[0][1]*map.g01;
    real G45_4_2_1 = map.det*c[1][4]*c[0][2]*map.g11;
    real G45_4_3_2 = map.det*c[1][4]*c[0][3]*map.g21;
    real G46_5_8_0 = map.det*c[1][5]*c[0][8]*map.g00;
    real G46_5_8_1 = map.det*c[1][5]*c[0][8]*map.g10;
    real G46_5_8_2 = map.det*c[1][5]*c[0][8]*map.g20;
    real G46_5_9_0 = map.det*c[1][5]*c[0][9]*map.g00;
    real G46_5_10_1 = map.det*c[1][5]*c[0][10]*map.g10;
    real G46_5_11_2 = map.det*c[1][5]*c[0][11]*map.g20;
    real G47_5_0_0 = map.det*c[1][5]*c[0][0]*map.g02;
    real G47_5_0_1 = map.det*c[1][5]*c[0][0]*map.g12;
    real G47_5_0_2 = map.det*c[1][5]*c[0][0]*map.g22;
    real G47_5_1_0 = map.det*c[1][5]*c[0][1]*map.g02;
    real G47_5_2_1 = map.det*c[1][5]*c[0][2]*map.g12;
    real G47_5_3_2 = map.det*c[1][5]*c[0][3]*map.g22;
    real G48_1_4_0 = map.det*c[0][4]*c[1][1]*map.g00;
    real G48_1_4_1 = map.det*c[0][4]*c[1][1]*map.g10;
    real G48_1_4_2 = map.det*c[0][4]*c[1][1]*map.g20;
    real G48_1_5_0 = map.det*c[0][5]*c[1][1]*map.g00;
    real G48_1_6_1 = map.det*c[0][6]*c[1][1]*map.g10;
    real G48_1_7_2 = map.det*c[0][7]*c[1][1]*map.g20;
    real G49_1_0_0 = map.det*c[0][0]*c[1][1]*map.g01;
    real G49_1_0_1 = map.det*c[0][0]*c[1][1]*map.g11;
    real G49_1_0_2 = map.det*c[0][0]*c[1][1]*map.g21;
    real G49_1_1_0 = map.det*c[0][1]*c[1][1]*map.g01;
    real G49_1_2_1 = map.det*c[0][2]*c[1][1]*map.g11;
    real G49_1_3_2 = map.det*c[0][3]*c[1][1]*map.g21;
    real G50_4_4_0 = map.det*c[0][4]*c[1][4]*map.g01;
    real G50_4_4_1 = map.det*c[0][4]*c[1][4]*map.g11;
    real G50_4_4_2 = map.det*c[0][4]*c[1][4]*map.g21;
    real G50_4_5_0 = map.det*c[0][5]*c[1][4]*map.g01;
    real G50_4_6_1 = map.det*c[0][6]*c[1][4]*map.g11;
    real G50_4_7_2 = map.det*c[0][7]*c[1][4]*map.g21;
    real G51_4_4_0 = map.det*c[0][4]*c[1][4]*map.g01;
    real G51_4_4_1 = map.det*c[0][4]*c[1][4]*map.g11;
    real G51_4_4_2 = map.det*c[0][4]*c[1][4]*map.g21;
    real G51_4_5_0 = map.det*c[0][5]*c[1][4]*map.g01;
    real G51_4_6_1 = map.det*c[0][6]*c[1][4]*map.g11;
    real G51_4_7_2 = map.det*c[0][7]*c[1][4]*map.g21;
    real G52_7_4_0 = map.det*c[0][4]*c[1][7]*map.g02;
    real G52_7_4_1 = map.det*c[0][4]*c[1][7]*map.g12;
    real G52_7_4_2 = map.det*c[0][4]*c[1][7]*map.g22;
    real G52_7_5_0 = map.det*c[0][5]*c[1][7]*map.g02;
    real G52_7_6_1 = map.det*c[0][6]*c[1][7]*map.g12;
    real G52_7_7_2 = map.det*c[0][7]*c[1][7]*map.g22;
    real G53_7_8_0 = map.det*c[0][8]*c[1][7]*map.g01;
    real G53_7_8_1 = map.det*c[0][8]*c[1][7]*map.g11;
    real G53_7_8_2 = map.det*c[0][8]*c[1][7]*map.g21;
    real G53_7_9_0 = map.det*c[0][9]*c[1][7]*map.g01;
    real G53_7_10_1 = map.det*c[0][10]*c[1][7]*map.g11;
    real G53_7_11_2 = map.det*c[0][11]*c[1][7]*map.g21;
    real G54_3_0_0 = map.det*c[1][3]*c[0][0]*map.g01;
    real G54_3_0_1 = map.det*c[1][3]*c[0][0]*map.g11;
    real G54_3_0_2 = map.det*c[1][3]*c[0][0]*map.g21;
    real G54_3_1_0 = map.det*c[1][3]*c[0][1]*map.g01;
    real G54_3_2_1 = map.det*c[1][3]*c[0][2]*map.g11;
    real G54_3_3_2 = map.det*c[1][3]*c[0][3]*map.g21;
    real G55_3_4_0 = map.det*c[1][3]*c[0][4]*map.g00;
    real G55_3_4_1 = map.det*c[1][3]*c[0][4]*map.g10;
    real G55_3_4_2 = map.det*c[1][3]*c[0][4]*map.g20;
    real G55_3_5_0 = map.det*c[1][3]*c[0][5]*map.g00;
    real G55_3_6_1 = map.det*c[1][3]*c[0][6]*map.g10;
    real G55_3_7_2 = map.det*c[1][3]*c[0][7]*map.g20;
    real G56_4_4_0 = map.det*c[1][4]*c[0][4]*map.g01;
    real G56_4_4_1 = map.det*c[1][4]*c[0][4]*map.g11;
    real G56_4_4_2 = map.det*c[1][4]*c[0][4]*map.g21;
    real G56_4_5_0 = map.det*c[1][4]*c[0][5]*map.g01;
    real G56_4_6_1 = map.det*c[1][4]*c[0][6]*map.g11;
    real G56_4_7_2 = map.det*c[1][4]*c[0][7]*map.g21;
    real G57_4_4_0 = map.det*c[1][4]*c[0][4]*map.g01;
    real G57_4_4_1 = map.det*c[1][4]*c[0][4]*map.g11;
    real G57_4_4_2 = map.det*c[1][4]*c[0][4]*map.g21;
    real G57_4_5_0 = map.det*c[1][4]*c[0][5]*map.g01;
    real G57_4_6_1 = map.det*c[1][4]*c[0][6]*map.g11;
    real G57_4_7_2 = map.det*c[1][4]*c[0][7]*map.g21;
    real G58_5_8_0 = map.det*c[1][5]*c[0][8]*map.g01;
    real G58_5_8_1 = map.det*c[1][5]*c[0][8]*map.g11;
    real G58_5_8_2 = map.det*c[1][5]*c[0][8]*map.g21;
    real G58_5_9_0 = map.det*c[1][5]*c[0][9]*map.g01;
    real G58_5_10_1 = map.det*c[1][5]*c[0][10]*map.g11;
    real G58_5_11_2 = map.det*c[1][5]*c[0][11]*map.g21;
    real G59_5_4_0 = map.det*c[1][5]*c[0][4]*map.g02;
    real G59_5_4_1 = map.det*c[1][5]*c[0][4]*map.g12;
    real G59_5_4_2 = map.det*c[1][5]*c[0][4]*map.g22;
    real G59_5_5_0 = map.det*c[1][5]*c[0][5]*map.g02;
    real G59_5_6_1 = map.det*c[1][5]*c[0][6]*map.g12;
    real G59_5_7_2 = map.det*c[1][5]*c[0][7]*map.g22;
    real G60_2_4_0 = map.det*c[0][4]*c[1][2]*map.g00;
    real G60_2_4_1 = map.det*c[0][4]*c[1][2]*map.g10;
    real G60_2_4_2 = map.det*c[0][4]*c[1][2]*map.g20;
    real G60_2_5_0 = map.det*c[0][5]*c[1][2]*map.g00;
    real G60_2_6_1 = map.det*c[0][6]*c[1][2]*map.g10;
    real G60_2_7_2 = map.det*c[0][7]*c[1][2]*map.g20;
    real G61_2_0_0 = map.det*c[0][0]*c[1][2]*map.g01;
    real G61_2_0_1 = map.det*c[0][0]*c[1][2]*map.g11;
    real G61_2_0_2 = map.det*c[0][0]*c[1][2]*map.g21;
    real G61_2_1_0 = map.det*c[0][1]*c[1][2]*map.g01;
    real G61_2_2_1 = map.det*c[0][2]*c[1][2]*map.g11;
    real G61_2_3_2 = map.det*c[0][3]*c[1][2]*map.g21;
    real G62_5_4_0 = map.det*c[0][4]*c[1][5]*map.g01;
    real G62_5_4_1 = map.det*c[0][4]*c[1][5]*map.g11;
    real G62_5_4_2 = map.det*c[0][4]*c[1][5]*map.g21;
    real G62_5_5_0 = map.det*c[0][5]*c[1][5]*map.g01;
    real G62_5_6_1 = map.det*c[0][6]*c[1][5]*map.g11;
    real G62_5_7_2 = map.det*c[0][7]*c[1][5]*map.g21;
    real G63_5_4_0 = map.det*c[0][4]*c[1][5]*map.g01;
    real G63_5_4_1 = map.det*c[0][4]*c[1][5]*map.g11;
    real G63_5_4_2 = map.det*c[0][4]*c[1][5]*map.g21;
    real G63_5_5_0 = map.det*c[0][5]*c[1][5]*map.g01;
    real G63_5_6_1 = map.det*c[0][6]*c[1][5]*map.g11;
    real G63_5_7_2 = map.det*c[0][7]*c[1][5]*map.g21;
    real G64_8_4_0 = map.det*c[0][4]*c[1][8]*map.g02;
    real G64_8_4_1 = map.det*c[0][4]*c[1][8]*map.g12;
    real G64_8_4_2 = map.det*c[0][4]*c[1][8]*map.g22;
    real G64_8_5_0 = map.det*c[0][5]*c[1][8]*map.g02;
    real G64_8_6_1 = map.det*c[0][6]*c[1][8]*map.g12;
    real G64_8_7_2 = map.det*c[0][7]*c[1][8]*map.g22;
    real G65_8_8_0 = map.det*c[0][8]*c[1][8]*map.g01;
    real G65_8_8_1 = map.det*c[0][8]*c[1][8]*map.g11;
    real G65_8_8_2 = map.det*c[0][8]*c[1][8]*map.g21;
    real G65_8_9_0 = map.det*c[0][9]*c[1][8]*map.g01;
    real G65_8_10_1 = map.det*c[0][10]*c[1][8]*map.g11;
    real G65_8_11_2 = map.det*c[0][11]*c[1][8]*map.g21;
    real G66_3_0_0 = map.det*c[1][3]*c[0][0]*map.g02;
    real G66_3_0_1 = map.det*c[1][3]*c[0][0]*map.g12;
    real G66_3_0_2 = map.det*c[1][3]*c[0][0]*map.g22;
    real G66_3_1_0 = map.det*c[1][3]*c[0][1]*map.g02;
    real G66_3_2_1 = map.det*c[1][3]*c[0][2]*map.g12;
    real G66_3_3_2 = map.det*c[1][3]*c[0][3]*map.g22;
    real G67_3_8_0 = map.det*c[1][3]*c[0][8]*map.g00;
    real G67_3_8_1 = map.det*c[1][3]*c[0][8]*map.g10;
    real G67_3_8_2 = map.det*c[1][3]*c[0][8]*map.g20;
    real G67_3_9_0 = map.det*c[1][3]*c[0][9]*map.g00;
    real G67_3_10_1 = map.det*c[1][3]*c[0][10]*map.g10;
    real G67_3_11_2 = map.det*c[1][3]*c[0][11]*map.g20;
    real G68_4_4_0 = map.det*c[1][4]*c[0][4]*map.g02;
    real G68_4_4_1 = map.det*c[1][4]*c[0][4]*map.g12;
    real G68_4_4_2 = map.det*c[1][4]*c[0][4]*map.g22;
    real G68_4_5_0 = map.det*c[1][4]*c[0][5]*map.g02;
    real G68_4_6_1 = map.det*c[1][4]*c[0][6]*map.g12;
    real G68_4_7_2 = map.det*c[1][4]*c[0][7]*map.g22;
    real G69_4_8_0 = map.det*c[1][4]*c[0][8]*map.g01;
    real G69_4_8_1 = map.det*c[1][4]*c[0][8]*map.g11;
    real G69_4_8_2 = map.det*c[1][4]*c[0][8]*map.g21;
    real G69_4_9_0 = map.det*c[1][4]*c[0][9]*map.g01;
    real G69_4_10_1 = map.det*c[1][4]*c[0][10]*map.g11;
    real G69_4_11_2 = map.det*c[1][4]*c[0][11]*map.g21;
    real G70_5_8_0 = map.det*c[1][5]*c[0][8]*map.g02;
    real G70_5_8_1 = map.det*c[1][5]*c[0][8]*map.g12;
    real G70_5_8_2 = map.det*c[1][5]*c[0][8]*map.g22;
    real G70_5_9_0 = map.det*c[1][5]*c[0][9]*map.g02;
    real G70_5_10_1 = map.det*c[1][5]*c[0][10]*map.g12;
    real G70_5_11_2 = map.det*c[1][5]*c[0][11]*map.g22;
    real G71_5_8_0 = map.det*c[1][5]*c[0][8]*map.g02;
    real G71_5_8_1 = map.det*c[1][5]*c[0][8]*map.g12;
    real G71_5_8_2 = map.det*c[1][5]*c[0][8]*map.g22;
    real G71_5_9_0 = map.det*c[1][5]*c[0][9]*map.g02;
    real G71_5_10_1 = map.det*c[1][5]*c[0][10]*map.g12;
    real G71_5_11_2 = map.det*c[1][5]*c[0][11]*map.g22;
    real G72_0_8_0 = map.det*c[0][8]*c[1][0]*map.g00;
    real G72_0_8_1 = map.det*c[0][8]*c[1][0]*map.g10;
    real G72_0_8_2 = map.det*c[0][8]*c[1][0]*map.g20;
    real G72_0_9_0 = map.det*c[0][9]*c[1][0]*map.g00;
    real G72_0_10_1 = map.det*c[0][10]*c[1][0]*map.g10;
    real G72_0_11_2 = map.det*c[0][11]*c[1][0]*map.g20;
    real G73_0_0_0 = map.det*c[0][0]*c[1][0]*map.g02;
    real G73_0_0_1 = map.det*c[0][0]*c[1][0]*map.g12;
    real G73_0_0_2 = map.det*c[0][0]*c[1][0]*map.g22;
    real G73_0_1_0 = map.det*c[0][1]*c[1][0]*map.g02;
    real G73_0_2_1 = map.det*c[0][2]*c[1][0]*map.g12;
    real G73_0_3_2 = map.det*c[0][3]*c[1][0]*map.g22;
    real G74_3_8_0 = map.det*c[0][8]*c[1][3]*map.g01;
    real G74_3_8_1 = map.det*c[0][8]*c[1][3]*map.g11;
    real G74_3_8_2 = map.det*c[0][8]*c[1][3]*map.g21;
    real G74_3_9_0 = map.det*c[0][9]*c[1][3]*map.g01;
    real G74_3_10_1 = map.det*c[0][10]*c[1][3]*map.g11;
    real G74_3_11_2 = map.det*c[0][11]*c[1][3]*map.g21;
    real G75_3_4_0 = map.det*c[0][4]*c[1][3]*map.g02;
    real G75_3_4_1 = map.det*c[0][4]*c[1][3]*map.g12;
    real G75_3_4_2 = map.det*c[0][4]*c[1][3]*map.g22;
    real G75_3_5_0 = map.det*c[0][5]*c[1][3]*map.g02;
    real G75_3_6_1 = map.det*c[0][6]*c[1][3]*map.g12;
    real G75_3_7_2 = map.det*c[0][7]*c[1][3]*map.g22;
    real G76_6_8_0 = map.det*c[0][8]*c[1][6]*map.g02;
    real G76_6_8_1 = map.det*c[0][8]*c[1][6]*map.g12;
    real G76_6_8_2 = map.det*c[0][8]*c[1][6]*map.g22;
    real G76_6_9_0 = map.det*c[0][9]*c[1][6]*map.g02;
    real G76_6_10_1 = map.det*c[0][10]*c[1][6]*map.g12;
    real G76_6_11_2 = map.det*c[0][11]*c[1][6]*map.g22;
    real G77_6_8_0 = map.det*c[0][8]*c[1][6]*map.g02;
    real G77_6_8_1 = map.det*c[0][8]*c[1][6]*map.g12;
    real G77_6_8_2 = map.det*c[0][8]*c[1][6]*map.g22;
    real G77_6_9_0 = map.det*c[0][9]*c[1][6]*map.g02;
    real G77_6_10_1 = map.det*c[0][10]*c[1][6]*map.g12;
    real G77_6_11_2 = map.det*c[0][11]*c[1][6]*map.g22;
    real G78_6_0_0 = map.det*c[1][6]*c[0][0]*map.g00;
    real G78_6_0_1 = map.det*c[1][6]*c[0][0]*map.g10;
    real G78_6_0_2 = map.det*c[1][6]*c[0][0]*map.g20;
    real G78_6_1_0 = map.det*c[1][6]*c[0][1]*map.g00;
    real G78_6_2_1 = map.det*c[1][6]*c[0][2]*map.g10;
    real G78_6_3_2 = map.det*c[1][6]*c[0][3]*map.g20;
    real G79_6_0_0 = map.det*c[1][6]*c[0][0]*map.g00;
    real G79_6_0_1 = map.det*c[1][6]*c[0][0]*map.g10;
    real G79_6_0_2 = map.det*c[1][6]*c[0][0]*map.g20;
    real G79_6_1_0 = map.det*c[1][6]*c[0][1]*map.g00;
    real G79_6_2_1 = map.det*c[1][6]*c[0][2]*map.g10;
    real G79_6_3_2 = map.det*c[1][6]*c[0][3]*map.g20;
    real G80_7_4_0 = map.det*c[1][7]*c[0][4]*map.g00;
    real G80_7_4_1 = map.det*c[1][7]*c[0][4]*map.g10;
    real G80_7_4_2 = map.det*c[1][7]*c[0][4]*map.g20;
    real G80_7_5_0 = map.det*c[1][7]*c[0][5]*map.g00;
    real G80_7_6_1 = map.det*c[1][7]*c[0][6]*map.g10;
    real G80_7_7_2 = map.det*c[1][7]*c[0][7]*map.g20;
    real G81_7_0_0 = map.det*c[1][7]*c[0][0]*map.g01;
    real G81_7_0_1 = map.det*c[1][7]*c[0][0]*map.g11;
    real G81_7_0_2 = map.det*c[1][7]*c[0][0]*map.g21;
    real G81_7_1_0 = map.det*c[1][7]*c[0][1]*map.g01;
    real G81_7_2_1 = map.det*c[1][7]*c[0][2]*map.g11;
    real G81_7_3_2 = map.det*c[1][7]*c[0][3]*map.g21;
    real G82_8_8_0 = map.det*c[1][8]*c[0][8]*map.g00;
    real G82_8_8_1 = map.det*c[1][8]*c[0][8]*map.g10;
    real G82_8_8_2 = map.det*c[1][8]*c[0][8]*map.g20;
    real G82_8_9_0 = map.det*c[1][8]*c[0][9]*map.g00;
    real G82_8_10_1 = map.det*c[1][8]*c[0][10]*map.g10;
    real G82_8_11_2 = map.det*c[1][8]*c[0][11]*map.g20;
    real G83_8_0_0 = map.det*c[1][8]*c[0][0]*map.g02;
    real G83_8_0_1 = map.det*c[1][8]*c[0][0]*map.g12;
    real G83_8_0_2 = map.det*c[1][8]*c[0][0]*map.g22;
    real G83_8_1_0 = map.det*c[1][8]*c[0][1]*map.g02;
    real G83_8_2_1 = map.det*c[1][8]*c[0][2]*map.g12;
    real G83_8_3_2 = map.det*c[1][8]*c[0][3]*map.g22;
    real G84_1_8_0 = map.det*c[0][8]*c[1][1]*map.g00;
    real G84_1_8_1 = map.det*c[0][8]*c[1][1]*map.g10;
    real G84_1_8_2 = map.det*c[0][8]*c[1][1]*map.g20;
    real G84_1_9_0 = map.det*c[0][9]*c[1][1]*map.g00;
    real G84_1_10_1 = map.det*c[0][10]*c[1][1]*map.g10;
    real G84_1_11_2 = map.det*c[0][11]*c[1][1]*map.g20;
    real G85_1_0_0 = map.det*c[0][0]*c[1][1]*map.g02;
    real G85_1_0_1 = map.det*c[0][0]*c[1][1]*map.g12;
    real G85_1_0_2 = map.det*c[0][0]*c[1][1]*map.g22;
    real G85_1_1_0 = map.det*c[0][1]*c[1][1]*map.g02;
    real G85_1_2_1 = map.det*c[0][2]*c[1][1]*map.g12;
    real G85_1_3_2 = map.det*c[0][3]*c[1][1]*map.g22;
    real G86_4_8_0 = map.det*c[0][8]*c[1][4]*map.g01;
    real G86_4_8_1 = map.det*c[0][8]*c[1][4]*map.g11;
    real G86_4_8_2 = map.det*c[0][8]*c[1][4]*map.g21;
    real G86_4_9_0 = map.det*c[0][9]*c[1][4]*map.g01;
    real G86_4_10_1 = map.det*c[0][10]*c[1][4]*map.g11;
    real G86_4_11_2 = map.det*c[0][11]*c[1][4]*map.g21;
    real G87_4_4_0 = map.det*c[0][4]*c[1][4]*map.g02;
    real G87_4_4_1 = map.det*c[0][4]*c[1][4]*map.g12;
    real G87_4_4_2 = map.det*c[0][4]*c[1][4]*map.g22;
    real G87_4_5_0 = map.det*c[0][5]*c[1][4]*map.g02;
    real G87_4_6_1 = map.det*c[0][6]*c[1][4]*map.g12;
    real G87_4_7_2 = map.det*c[0][7]*c[1][4]*map.g22;
    real G88_7_8_0 = map.det*c[0][8]*c[1][7]*map.g02;
    real G88_7_8_1 = map.det*c[0][8]*c[1][7]*map.g12;
    real G88_7_8_2 = map.det*c[0][8]*c[1][7]*map.g22;
    real G88_7_9_0 = map.det*c[0][9]*c[1][7]*map.g02;
    real G88_7_10_1 = map.det*c[0][10]*c[1][7]*map.g12;
    real G88_7_11_2 = map.det*c[0][11]*c[1][7]*map.g22;
    real G89_7_8_0 = map.det*c[0][8]*c[1][7]*map.g02;
    real G89_7_8_1 = map.det*c[0][8]*c[1][7]*map.g12;
    real G89_7_8_2 = map.det*c[0][8]*c[1][7]*map.g22;
    real G89_7_9_0 = map.det*c[0][9]*c[1][7]*map.g02;
    real G89_7_10_1 = map.det*c[0][10]*c[1][7]*map.g12;
    real G89_7_11_2 = map.det*c[0][11]*c[1][7]*map.g22;
    real G90_6_0_0 = map.det*c[1][6]*c[0][0]*map.g01;
    real G90_6_0_1 = map.det*c[1][6]*c[0][0]*map.g11;
    real G90_6_0_2 = map.det*c[1][6]*c[0][0]*map.g21;
    real G90_6_1_0 = map.det*c[1][6]*c[0][1]*map.g01;
    real G90_6_2_1 = map.det*c[1][6]*c[0][2]*map.g11;
    real G90_6_3_2 = map.det*c[1][6]*c[0][3]*map.g21;
    real G91_6_4_0 = map.det*c[1][6]*c[0][4]*map.g00;
    real G91_6_4_1 = map.det*c[1][6]*c[0][4]*map.g10;
    real G91_6_4_2 = map.det*c[1][6]*c[0][4]*map.g20;
    real G91_6_5_0 = map.det*c[1][6]*c[0][5]*map.g00;
    real G91_6_6_1 = map.det*c[1][6]*c[0][6]*map.g10;
    real G91_6_7_2 = map.det*c[1][6]*c[0][7]*map.g20;
    real G92_7_4_0 = map.det*c[1][7]*c[0][4]*map.g01;
    real G92_7_4_1 = map.det*c[1][7]*c[0][4]*map.g11;
    real G92_7_4_2 = map.det*c[1][7]*c[0][4]*map.g21;
    real G92_7_5_0 = map.det*c[1][7]*c[0][5]*map.g01;
    real G92_7_6_1 = map.det*c[1][7]*c[0][6]*map.g11;
    real G92_7_7_2 = map.det*c[1][7]*c[0][7]*map.g21;
    real G93_7_4_0 = map.det*c[1][7]*c[0][4]*map.g01;
    real G93_7_4_1 = map.det*c[1][7]*c[0][4]*map.g11;
    real G93_7_4_2 = map.det*c[1][7]*c[0][4]*map.g21;
    real G93_7_5_0 = map.det*c[1][7]*c[0][5]*map.g01;
    real G93_7_6_1 = map.det*c[1][7]*c[0][6]*map.g11;
    real G93_7_7_2 = map.det*c[1][7]*c[0][7]*map.g21;
    real G94_8_8_0 = map.det*c[1][8]*c[0][8]*map.g01;
    real G94_8_8_1 = map.det*c[1][8]*c[0][8]*map.g11;
    real G94_8_8_2 = map.det*c[1][8]*c[0][8]*map.g21;
    real G94_8_9_0 = map.det*c[1][8]*c[0][9]*map.g01;
    real G94_8_10_1 = map.det*c[1][8]*c[0][10]*map.g11;
    real G94_8_11_2 = map.det*c[1][8]*c[0][11]*map.g21;
    real G95_8_4_0 = map.det*c[1][8]*c[0][4]*map.g02;
    real G95_8_4_1 = map.det*c[1][8]*c[0][4]*map.g12;
    real G95_8_4_2 = map.det*c[1][8]*c[0][4]*map.g22;
    real G95_8_5_0 = map.det*c[1][8]*c[0][5]*map.g02;
    real G95_8_6_1 = map.det*c[1][8]*c[0][6]*map.g12;
    real G95_8_7_2 = map.det*c[1][8]*c[0][7]*map.g22;
    real G96_2_8_0 = map.det*c[0][8]*c[1][2]*map.g00;
    real G96_2_8_1 = map.det*c[0][8]*c[1][2]*map.g10;
    real G96_2_8_2 = map.det*c[0][8]*c[1][2]*map.g20;
    real G96_2_9_0 = map.det*c[0][9]*c[1][2]*map.g00;
    real G96_2_10_1 = map.det*c[0][10]*c[1][2]*map.g10;
    real G96_2_11_2 = map.det*c[0][11]*c[1][2]*map.g20;
    real G97_2_0_0 = map.det*c[0][0]*c[1][2]*map.g02;
    real G97_2_0_1 = map.det*c[0][0]*c[1][2]*map.g12;
    real G97_2_0_2 = map.det*c[0][0]*c[1][2]*map.g22;
    real G97_2_1_0 = map.det*c[0][1]*c[1][2]*map.g02;
    real G97_2_2_1 = map.det*c[0][2]*c[1][2]*map.g12;
    real G97_2_3_2 = map.det*c[0][3]*c[1][2]*map.g22;
    real G98_5_8_0 = map.det*c[0][8]*c[1][5]*map.g01;
    real G98_5_8_1 = map.det*c[0][8]*c[1][5]*map.g11;
    real G98_5_8_2 = map.det*c[0][8]*c[1][5]*map.g21;
    real G98_5_9_0 = map.det*c[0][9]*c[1][5]*map.g01;
    real G98_5_10_1 = map.det*c[0][10]*c[1][5]*map.g11;
    real G98_5_11_2 = map.det*c[0][11]*c[1][5]*map.g21;
    real G99_5_4_0 = map.det*c[0][4]*c[1][5]*map.g02;
    real G99_5_4_1 = map.det*c[0][4]*c[1][5]*map.g12;
    real G99_5_4_2 = map.det*c[0][4]*c[1][5]*map.g22;
    real G99_5_5_0 = map.det*c[0][5]*c[1][5]*map.g02;
    real G99_5_6_1 = map.det*c[0][6]*c[1][5]*map.g12;
    real G99_5_7_2 = map.det*c[0][7]*c[1][5]*map.g22;
    real G100_8_8_0 = map.det*c[0][8]*c[1][8]*map.g02;
    real G100_8_8_1 = map.det*c[0][8]*c[1][8]*map.g12;
    real G100_8_8_2 = map.det*c[0][8]*c[1][8]*map.g22;
    real G100_8_9_0 = map.det*c[0][9]*c[1][8]*map.g02;
    real G100_8_10_1 = map.det*c[0][10]*c[1][8]*map.g12;
    real G100_8_11_2 = map.det*c[0][11]*c[1][8]*map.g22;
    real G101_8_8_0 = map.det*c[0][8]*c[1][8]*map.g02;
    real G101_8_8_1 = map.det*c[0][8]*c[1][8]*map.g12;
    real G101_8_8_2 = map.det*c[0][8]*c[1][8]*map.g22;
    real G101_8_9_0 = map.det*c[0][9]*c[1][8]*map.g02;
    real G101_8_10_1 = map.det*c[0][10]*c[1][8]*map.g12;
    real G101_8_11_2 = map.det*c[0][11]*c[1][8]*map.g22;
    real G102_6_0_0 = map.det*c[1][6]*c[0][0]*map.g02;
    real G102_6_0_1 = map.det*c[1][6]*c[0][0]*map.g12;
    real G102_6_0_2 = map.det*c[1][6]*c[0][0]*map.g22;
    real G102_6_1_0 = map.det*c[1][6]*c[0][1]*map.g02;
    real G102_6_2_1 = map.det*c[1][6]*c[0][2]*map.g12;
    real G102_6_3_2 = map.det*c[1][6]*c[0][3]*map.g22;
    real G103_6_8_0 = map.det*c[1][6]*c[0][8]*map.g00;
    real G103_6_8_1 = map.det*c[1][6]*c[0][8]*map.g10;
    real G103_6_8_2 = map.det*c[1][6]*c[0][8]*map.g20;
    real G103_6_9_0 = map.det*c[1][6]*c[0][9]*map.g00;
    real G103_6_10_1 = map.det*c[1][6]*c[0][10]*map.g10;
    real G103_6_11_2 = map.det*c[1][6]*c[0][11]*map.g20;
    real G104_7_4_0 = map.det*c[1][7]*c[0][4]*map.g02;
    real G104_7_4_1 = map.det*c[1][7]*c[0][4]*map.g12;
    real G104_7_4_2 = map.det*c[1][7]*c[0][4]*map.g22;
    real G104_7_5_0 = map.det*c[1][7]*c[0][5]*map.g02;
    real G104_7_6_1 = map.det*c[1][7]*c[0][6]*map.g12;
    real G104_7_7_2 = map.det*c[1][7]*c[0][7]*map.g22;
    real G105_7_8_0 = map.det*c[1][7]*c[0][8]*map.g01;
    real G105_7_8_1 = map.det*c[1][7]*c[0][8]*map.g11;
    real G105_7_8_2 = map.det*c[1][7]*c[0][8]*map.g21;
    real G105_7_9_0 = map.det*c[1][7]*c[0][9]*map.g01;
    real G105_7_10_1 = map.det*c[1][7]*c[0][10]*map.g11;
    real G105_7_11_2 = map.det*c[1][7]*c[0][11]*map.g21;
    real G106_8_8_0 = map.det*c[1][8]*c[0][8]*map.g02;
    real G106_8_8_1 = map.det*c[1][8]*c[0][8]*map.g12;
    real G106_8_8_2 = map.det*c[1][8]*c[0][8]*map.g22;
    real G106_8_9_0 = map.det*c[1][8]*c[0][9]*map.g02;
    real G106_8_10_1 = map.det*c[1][8]*c[0][10]*map.g12;
    real G106_8_11_2 = map.det*c[1][8]*c[0][11]*map.g22;
    real G107_8_8_0 = map.det*c[1][8]*c[0][8]*map.g02;
    real G107_8_8_1 = map.det*c[1][8]*c[0][8]*map.g12;
    real G107_8_8_2 = map.det*c[1][8]*c[0][8]*map.g22;
    real G107_8_9_0 = map.det*c[1][8]*c[0][9]*map.g02;
    real G107_8_10_1 = map.det*c[1][8]*c[0][10]*map.g12;
    real G107_8_11_2 = map.det*c[1][8]*c[0][11]*map.g22;

    // Compute element tensor
    block[0] = -8.333333333333323e-02*G0_0_0_0 - 8.333333333333323e-02*G0_0_0_1 - 8.333333333333322e-02*G0_0_0_2 + 8.333333333333323e-02*G0_0_1_0 + 8.333333333333323e-02*G0_0_2_1 + 8.333333333333323e-02*G0_0_3_2 + 8.333333333333323e-02*G1_0_0_0 + 8.333333333333323e-02*G1_0_0_1 + 8.333333333333322e-02*G1_0_0_2 - 8.333333333333323e-02*G1_0_1_0 - 8.333333333333323e-02*G1_0_2_1 - 8.333333333333323e-02*G1_0_3_2 - 8.333333333333323e-02*G2_3_0_0 - 8.333333333333323e-02*G2_3_0_1 - 8.333333333333322e-02*G2_3_0_2 + 8.333333333333323e-02*G2_3_1_0 + 8.333333333333323e-02*G2_3_2_1 + 8.333333333333323e-02*G2_3_3_2 + 8.333333333333323e-02*G3_3_4_0 + 8.333333333333323e-02*G3_3_4_1 + 8.333333333333323e-02*G3_3_4_2 - 8.333333333333323e-02*G3_3_5_0 - 8.333333333333323e-02*G3_3_6_1 - 8.333333333333323e-02*G3_3_7_2 - 8.333333333333323e-02*G4_6_0_0 - 8.333333333333323e-02*G4_6_0_1 - 8.333333333333322e-02*G4_6_0_2 + 8.333333333333323e-02*G4_6_1_0 + 8.333333333333323e-02*G4_6_2_1 + 8.333333333333323e-02*G4_6_3_2 + 8.333333333333323e-02*G5_6_8_0 + 8.333333333333323e-02*G5_6_8_1 + 8.333333333333323e-02*G5_6_8_2 - 8.333333333333323e-02*G5_6_9_0 - 8.333333333333323e-02*G5_6_10_1 - 8.333333333333323e-02*G5_6_11_2 + 8.333333333333323e-02*G6_0_0_0 + 8.333333333333323e-02*G6_0_0_1 + 8.333333333333322e-02*G6_0_0_2 - 8.333333333333323e-02*G6_0_1_0 - 8.333333333333323e-02*G6_0_2_1 - 8.333333333333323e-02*G6_0_3_2 - 8.333333333333323e-02*G7_0_0_0 - 8.333333333333323e-02*G7_0_0_1 - 8.333333333333322e-02*G7_0_0_2 + 8.333333333333323e-02*G7_0_1_0 + 8.333333333333323e-02*G7_0_2_1 + 8.333333333333323e-02*G7_0_3_2 + 8.333333333333323e-02*G8_1_4_0 + 8.333333333333323e-02*G8_1_4_1 + 8.333333333333323e-02*G8_1_4_2 - 8.333333333333323e-02*G8_1_5_0 - 8.333333333333323e-02*G8_1_6_1 - 8.333333333333323e-02*G8_1_7_2 - 8.333333333333323e-02*G9_1_0_0 - 8.333333333333323e-02*G9_1_0_1 - 8.333333333333322e-02*G9_1_0_2 + 8.333333333333323e-02*G9_1_1_0 + 8.333333333333323e-02*G9_1_2_1 + 8.333333333333323e-02*G9_1_3_2 + 8.333333333333323e-02*G10_2_8_0 + 8.333333333333323e-02*G10_2_8_1 + 8.333333333333323e-02*G10_2_8_2 - 8.333333333333323e-02*G10_2_9_0 - 8.333333333333323e-02*G10_2_10_1 - 8.333333333333323e-02*G10_2_11_2 - 8.333333333333323e-02*G11_2_0_0 - 8.333333333333323e-02*G11_2_0_1 - 8.333333333333322e-02*G11_2_0_2 + 8.333333333333323e-02*G11_2_1_0 + 8.333333333333323e-02*G11_2_2_1 + 8.333333333333323e-02*G11_2_3_2;
    block[1] = -8.333333333333323e-02*G12_1_0_0 - 8.333333333333323e-02*G12_1_0_1 - 8.333333333333322e-02*G12_1_0_2 + 8.333333333333323e-02*G12_1_1_0 + 8.333333333333323e-02*G12_1_2_1 + 8.333333333333323e-02*G12_1_3_2 + 8.333333333333323e-02*G13_1_0_0 + 8.333333333333323e-02*G13_1_0_1 + 8.333333333333322e-02*G13_1_0_2 - 8.333333333333323e-02*G13_1_1_0 - 8.333333333333323e-02*G13_1_2_1 - 8.333333333333323e-02*G13_1_3_2 - 8.333333333333323e-02*G14_4_0_0 - 8.333333333333323e-02*G14_4_0_1 - 8.333333333333322e-02*G14_4_0_2 + 8.333333333333323e-02*G14_4_1_0 + 8.333333333333323e-02*G14_4_2_1 + 8.333333333333323e-02*G14_4_3_2 + 8.333333333333323e-02*G15_4_4_0 + 8.333333333333323e-02*G15_4_4_1 + 8.333333333333323e-02*G15_4_4_2 - 8.333333333333323e-02*G15_4_5_0 - 8.333333333333323e-02*G15_4_6_1 - 8.333333333333323e-02*G15_4_7_2 - 8.333333333333323e-02*G16_7_0_0 - 8.333333333333323e-02*G16_7_0_1 - 8.333333333333322e-02*G16_7_0_2 + 8.333333333333323e-02*G16_7_1_0 + 8.333333333333323e-02*G16_7_2_1 + 8.333333333333323e-02*G16_7_3_2 + 8.333333333333323e-02*G17_7_8_0 + 8.333333333333323e-02*G17_7_8_1 + 8.333333333333323e-02*G17_7_8_2 - 8.333333333333323e-02*G17_7_9_0 - 8.333333333333323e-02*G17_7_10_1 - 8.333333333333323e-02*G17_7_11_2 + 8.333333333333323e-02*G18_0_0_0 + 8.333333333333323e-02*G18_0_0_1 + 8.333333333333322e-02*G18_0_0_2 - 8.333333333333323e-02*G18_0_1_0 - 8.333333333333323e-02*G18_0_2_1 - 8.333333333333323e-02*G18_0_3_2 - 8.333333333333323e-02*G19_0_4_0 - 8.333333333333323e-02*G19_0_4_1 - 8.333333333333323e-02*G19_0_4_2 + 8.333333333333323e-02*G19_0_5_0 + 8.333333333333323e-02*G19_0_6_1 + 8.333333333333323e-02*G19_0_7_2 + 8.333333333333323e-02*G20_1_4_0 + 8.333333333333323e-02*G20_1_4_1 + 8.333333333333323e-02*G20_1_4_2 - 8.333333333333323e-02*G20_1_5_0 - 8.333333333333323e-02*G20_1_6_1 - 8.333333333333323e-02*G20_1_7_2 - 8.333333333333323e-02*G21_1_4_0 - 8.333333333333323e-02*G21_1_4_1 - 8.333333333333323e-02*G21_1_4_2 + 8.333333333333323e-02*G21_1_5_0 + 8.333333333333323e-02*G21_1_6_1 + 8.333333333333323e-02*G21_1_7_2 + 8.333333333333323e-02*G22_2_8_0 + 8.333333333333323e-02*G22_2_8_1 + 8.333333333333323e-02*G22_2_8_2 - 8.333333333333323e-02*G22_2_9_0 - 8.333333333333323e-02*G22_2_10_1 - 8.333333333333323e-02*G22_2_11_2 - 8.333333333333323e-02*G23_2_4_0 - 8.333333333333323e-02*G23_2_4_1 - 8.333333333333323e-02*G23_2_4_2 + 8.333333333333323e-02*G23_2_5_0 + 8.333333333333323e-02*G23_2_6_1 + 8.333333333333323e-02*G23_2_7_2;
    block[2] = -8.333333333333323e-02*G24_2_0_0 - 8.333333333333323e-02*G24_2_0_1 - 8.333333333333322e-02*G24_2_0_2 + 8.333333333333323e-02*G24_2_1_0 + 8.333333333333323e-02*G24_2_2_1 + 8.333333333333323e-02*G24_2_3_2 + 8.333333333333323e-02*G25_2_0_0 + 8.333333333333323e-02*G25_2_0_1 + 8.333333333333322e-02*G25_2_0_2 - 8.333333333333323e-02*G25_2_1_0 - 8.333333333333323e-02*G25_2_2_1 - 8.333333333333323e-02*G25_2_3_2 - 8.333333333333323e-02*G26_5_0_0 - 8.333333333333323e-02*G26_5_0_1 - 8.333333333333322e-02*G26_5_0_2 + 8.333333333333323e-02*G26_5_1_0 + 8.333333333333323e-02*G26_5_2_1 + 8.333333333333323e-02*G26_5_3_2 + 8.333333333333323e-02*G27_5_4_0 + 8.333333333333323e-02*G27_5_4_1 + 8.333333333333323e-02*G27_5_4_2 - 8.333333333333323e-02*G27_5_5_0 - 8.333333333333323e-02*G27_5_6_1 - 8.333333333333323e-02*G27_5_7_2 - 8.333333333333323e-02*G28_8_0_0 - 8.333333333333323e-02*G28_8_0_1 - 8.333333333333322e-02*G28_8_0_2 + 8.333333333333323e-02*G28_8_1_0 + 8.333333333333323e-02*G28_8_2_1 + 8.333333333333323e-02*G28_8_3_2 + 8.333333333333323e-02*G29_8_8_0 + 8.333333333333323e-02*G29_8_8_1 + 8.333333333333323e-02*G29_8_8_2 - 8.333333333333323e-02*G29_8_9_0 - 8.333333333333323e-02*G29_8_10_1 - 8.333333333333323e-02*G29_8_11_2 + 8.333333333333323e-02*G30_0_0_0 + 8.333333333333323e-02*G30_0_0_1 + 8.333333333333322e-02*G30_0_0_2 - 8.333333333333323e-02*G30_0_1_0 - 8.333333333333323e-02*G30_0_2_1 - 8.333333333333323e-02*G30_0_3_2 - 8.333333333333323e-02*G31_0_8_0 - 8.333333333333323e-02*G31_0_8_1 - 8.333333333333323e-02*G31_0_8_2 + 8.333333333333323e-02*G31_0_9_0 + 8.333333333333323e-02*G31_0_10_1 + 8.333333333333323e-02*G31_0_11_2 + 8.333333333333323e-02*G32_1_4_0 + 8.333333333333323e-02*G32_1_4_1 + 8.333333333333323e-02*G32_1_4_2 - 8.333333333333323e-02*G32_1_5_0 - 8.333333333333323e-02*G32_1_6_1 - 8.333333333333323e-02*G32_1_7_2 - 8.333333333333323e-02*G33_1_8_0 - 8.333333333333323e-02*G33_1_8_1 - 8.333333333333323e-02*G33_1_8_2 + 8.333333333333323e-02*G33_1_9_0 + 8.333333333333323e-02*G33_1_10_1 + 8.333333333333323e-02*G33_1_11_2 + 8.333333333333323e-02*G34_2_8_0 + 8.333333333333323e-02*G34_2_8_1 + 8.333333333333323e-02*G34_2_8_2 - 8.333333333333323e-02*G34_2_9_0 - 8.333333333333323e-02*G34_2_10_1 - 8.333333333333323e-02*G34_2_11_2 - 8.333333333333323e-02*G35_2_8_0 - 8.333333333333323e-02*G35_2_8_1 - 8.333333333333323e-02*G35_2_8_2 + 8.333333333333323e-02*G35_2_9_0 + 8.333333333333323e-02*G35_2_10_1 + 8.333333333333323e-02*G35_2_11_2;
    block[3] = -8.333333333333323e-02*G36_0_4_0 - 8.333333333333323e-02*G36_0_4_1 - 8.333333333333323e-02*G36_0_4_2 + 8.333333333333323e-02*G36_0_5_0 + 8.333333333333323e-02*G36_0_6_1 + 8.333333333333323e-02*G36_0_7_2 + 8.333333333333323e-02*G37_0_0_0 + 8.333333333333323e-02*G37_0_0_1 + 8.333333333333322e-02*G37_0_0_2 - 8.333333333333323e-02*G37_0_1_0 - 8.333333333333323e-02*G37_0_2_1 - 8.333333333333323e-02*G37_0_3_2 - 8.333333333333323e-02*G38_3_4_0 - 8.333333333333323e-02*G38_3_4_1 - 8.333333333333323e-02*G38_3_4_2 + 8.333333333333323e-02*G38_3_5_0 + 8.333333333333323e-02*G38_3_6_1 + 8.333333333333323e-02*G38_3_7_2 + 8.333333333333323e-02*G39_3_4_0 + 8.333333333333323e-02*G39_3_4_1 + 8.333333333333323e-02*G39_3_4_2 - 8.333333333333323e-02*G39_3_5_0 - 8.333333333333323e-02*G39_3_6_1 - 8.333333333333323e-02*G39_3_7_2 - 8.333333333333323e-02*G40_6_4_0 - 8.333333333333323e-02*G40_6_4_1 - 8.333333333333323e-02*G40_6_4_2 + 8.333333333333323e-02*G40_6_5_0 + 8.333333333333323e-02*G40_6_6_1 + 8.333333333333323e-02*G40_6_7_2 + 8.333333333333323e-02*G41_6_8_0 + 8.333333333333323e-02*G41_6_8_1 + 8.333333333333323e-02*G41_6_8_2 - 8.333333333333323e-02*G41_6_9_0 - 8.333333333333323e-02*G41_6_10_1 - 8.333333333333323e-02*G41_6_11_2 + 8.333333333333323e-02*G42_3_0_0 + 8.333333333333323e-02*G42_3_0_1 + 8.333333333333322e-02*G42_3_0_2 - 8.333333333333323e-02*G42_3_1_0 - 8.333333333333323e-02*G42_3_2_1 - 8.333333333333323e-02*G42_3_3_2 - 8.333333333333323e-02*G43_3_0_0 - 8.333333333333323e-02*G43_3_0_1 - 8.333333333333322e-02*G43_3_0_2 + 8.333333333333323e-02*G43_3_1_0 + 8.333333333333323e-02*G43_3_2_1 + 8.333333333333323e-02*G43_3_3_2 + 8.333333333333323e-02*G44_4_4_0 + 8.333333333333323e-02*G44_4_4_1 + 8.333333333333323e-02*G44_4_4_2 - 8.333333333333323e-02*G44_4_5_0 - 8.333333333333323e-02*G44_4_6_1 - 8.333333333333323e-02*G44_4_7_2 - 8.333333333333323e-02*G45_4_0_0 - 8.333333333333323e-02*G45_4_0_1 - 8.333333333333322e-02*G45_4_0_2 + 8.333333333333323e-02*G45_4_1_0 + 8.333333333333323e-02*G45_4_2_1 + 8.333333333333323e-02*G45_4_3_2 + 8.333333333333323e-02*G46_5_8_0 + 8.333333333333323e-02*G46_5_8_1 + 8.333333333333323e-02*G46_5_8_2 - 8.333333333333323e-02*G46_5_9_0 - 8.333333333333323e-02*G46_5_10_1 - 8.333333333333323e-02*G46_5_11_2 - 8.333333333333323e-02*G47_5_0_0 - 8.333333333333323e-02*G47_5_0_1 - 8.333333333333322e-02*G47_5_0_2 + 8.333333333333323e-02*G47_5_1_0 + 8.333333333333323e-02*G47_5_2_1 + 8.333333333333323e-02*G47_5_3_2;
    block[4] = -8.333333333333323e-02*G48_1_4_0 - 8.333333333333323e-02*G48_1_4_1 - 8.333333333333323e-02*G48_1_4_2 + 8.333333333333323e-02*G48_1_5_0 + 8.333333333333323e-02*G48_1_6_1 + 8.333333333333323e-02*G48_1_7_2 + 8.333333333333323e-02*G49_1_0_0 + 8.333333333333323e-02*G49_1_0_1 + 8.333333333333322e-02*G49_1_0_2 - 8.333333333333323e-02*G49_1_1_0 - 8.333333333333323e-02*G49_1_2_1 - 8.333333333333323e-02*G49_1_3_2 - 8.333333333333323e-02*G50_4_4_0 - 8.333333333333323e-02*G50_4_4_1 - 8.333333333333323e-02*G50_4_4_2 + 8.333333333333323e-02*G50_4_5_0 + 8.333333333333323e-02*G50_4_6_1 + 8.333333333333323e-02*G50_4_7_2 + 8.333333333333323e-02*G51_4_4_0 + 8.333333333333323e-02*G51_4_4_1 + 8.333333333333323e-02*G51_4_4_2 - 8.333333333333323e-02*G51_4_5_0 - 8.333333333333323e-02*G51_4_6_1 - 8.333333333333323e-02*G51_4_7_2 - 8.333333333333323e-02*G52_7_4_0 - 8.333333333333323e-02*G52_7_4_1 - 8.333333333333323e-02*G52_7_4_2 + 8.333333333333323e-02*G52_7_5_0 + 8.333333333333323e-02*G52_7_6_1 + 8.333333333333323e-02*G52_7_7_2 + 8.333333333333323e-02*G53_7_8_0 + 8.333333333333323e-02*G53_7_8_1 + 8.333333333333323e-02*G53_7_8_2 - 8.333333333333323e-02*G53_7_9_0 - 8.333333333333323e-02*G53_7_10_1 - 8.333333333333323e-02*G53_7_11_2 + 8.333333333333323e-02*G54_3_0_0 + 8.333333333333323e-02*G54_3_0_1 + 8.333333333333322e-02*G54_3_0_2 - 8.333333333333323e-02*G54_3_1_0 - 8.333333333333323e-02*G54_3_2_1 - 8.333333333333323e-02*G54_3_3_2 - 8.333333333333323e-02*G55_3_4_0 - 8.333333333333323e-02*G55_3_4_1 - 8.333333333333323e-02*G55_3_4_2 + 8.333333333333323e-02*G55_3_5_0 + 8.333333333333323e-02*G55_3_6_1 + 8.333333333333323e-02*G55_3_7_2 + 8.333333333333323e-02*G56_4_4_0 + 8.333333333333323e-02*G56_4_4_1 + 8.333333333333323e-02*G56_4_4_2 - 8.333333333333323e-02*G56_4_5_0 - 8.333333333333323e-02*G56_4_6_1 - 8.333333333333323e-02*G56_4_7_2 - 8.333333333333323e-02*G57_4_4_0 - 8.333333333333323e-02*G57_4_4_1 - 8.333333333333323e-02*G57_4_4_2 + 8.333333333333323e-02*G57_4_5_0 + 8.333333333333323e-02*G57_4_6_1 + 8.333333333333323e-02*G57_4_7_2 + 8.333333333333323e-02*G58_5_8_0 + 8.333333333333323e-02*G58_5_8_1 + 8.333333333333323e-02*G58_5_8_2 - 8.333333333333323e-02*G58_5_9_0 - 8.333333333333323e-02*G58_5_10_1 - 8.333333333333323e-02*G58_5_11_2 - 8.333333333333323e-02*G59_5_4_0 - 8.333333333333323e-02*G59_5_4_1 - 8.333333333333323e-02*G59_5_4_2 + 8.333333333333323e-02*G59_5_5_0 + 8.333333333333323e-02*G59_5_6_1 + 8.333333333333323e-02*G59_5_7_2;
    block[5] = -8.333333333333323e-02*G60_2_4_0 - 8.333333333333323e-02*G60_2_4_1 - 8.333333333333323e-02*G60_2_4_2 + 8.333333333333323e-02*G60_2_5_0 + 8.333333333333323e-02*G60_2_6_1 + 8.333333333333323e-02*G60_2_7_2 + 8.333333333333323e-02*G61_2_0_0 + 8.333333333333323e-02*G61_2_0_1 + 8.333333333333322e-02*G61_2_0_2 - 8.333333333333323e-02*G61_2_1_0 - 8.333333333333323e-02*G61_2_2_1 - 8.333333333333323e-02*G61_2_3_2 - 8.333333333333323e-02*G62_5_4_0 - 8.333333333333323e-02*G62_5_4_1 - 8.333333333333323e-02*G62_5_4_2 + 8.333333333333323e-02*G62_5_5_0 + 8.333333333333323e-02*G62_5_6_1 + 8.333333333333323e-02*G62_5_7_2 + 8.333333333333323e-02*G63_5_4_0 + 8.333333333333323e-02*G63_5_4_1 + 8.333333333333323e-02*G63_5_4_2 - 8.333333333333323e-02*G63_5_5_0 - 8.333333333333323e-02*G63_5_6_1 - 8.333333333333323e-02*G63_5_7_2 - 8.333333333333323e-02*G64_8_4_0 - 8.333333333333323e-02*G64_8_4_1 - 8.333333333333323e-02*G64_8_4_2 + 8.333333333333323e-02*G64_8_5_0 + 8.333333333333323e-02*G64_8_6_1 + 8.333333333333323e-02*G64_8_7_2 + 8.333333333333323e-02*G65_8_8_0 + 8.333333333333323e-02*G65_8_8_1 + 8.333333333333323e-02*G65_8_8_2 - 8.333333333333323e-02*G65_8_9_0 - 8.333333333333323e-02*G65_8_10_1 - 8.333333333333323e-02*G65_8_11_2 + 8.333333333333323e-02*G66_3_0_0 + 8.333333333333323e-02*G66_3_0_1 + 8.333333333333322e-02*G66_3_0_2 - 8.333333333333323e-02*G66_3_1_0 - 8.333333333333323e-02*G66_3_2_1 - 8.333333333333323e-02*G66_3_3_2 - 8.333333333333323e-02*G67_3_8_0 - 8.333333333333323e-02*G67_3_8_1 - 8.333333333333323e-02*G67_3_8_2 + 8.333333333333323e-02*G67_3_9_0 + 8.333333333333323e-02*G67_3_10_1 + 8.333333333333323e-02*G67_3_11_2 + 8.333333333333323e-02*G68_4_4_0 + 8.333333333333323e-02*G68_4_4_1 + 8.333333333333323e-02*G68_4_4_2 - 8.333333333333323e-02*G68_4_5_0 - 8.333333333333323e-02*G68_4_6_1 - 8.333333333333323e-02*G68_4_7_2 - 8.333333333333323e-02*G69_4_8_0 - 8.333333333333323e-02*G69_4_8_1 - 8.333333333333323e-02*G69_4_8_2 + 8.333333333333323e-02*G69_4_9_0 + 8.333333333333323e-02*G69_4_10_1 + 8.333333333333323e-02*G69_4_11_2 + 8.333333333333323e-02*G70_5_8_0 + 8.333333333333323e-02*G70_5_8_1 + 8.333333333333323e-02*G70_5_8_2 - 8.333333333333323e-02*G70_5_9_0 - 8.333333333333323e-02*G70_5_10_1 - 8.333333333333323e-02*G70_5_11_2 - 8.333333333333323e-02*G71_5_8_0 - 8.333333333333323e-02*G71_5_8_1 - 8.333333333333323e-02*G71_5_8_2 + 8.333333333333323e-02*G71_5_9_0 + 8.333333333333323e-02*G71_5_10_1 + 8.333333333333323e-02*G71_5_11_2;
    block[6] = -8.333333333333323e-02*G72_0_8_0 - 8.333333333333323e-02*G72_0_8_1 - 8.333333333333323e-02*G72_0_8_2 + 8.333333333333323e-02*G72_0_9_0 + 8.333333333333323e-02*G72_0_10_1 + 8.333333333333323e-02*G72_0_11_2 + 8.333333333333323e-02*G73_0_0_0 + 8.333333333333323e-02*G73_0_0_1 + 8.333333333333322e-02*G73_0_0_2 - 8.333333333333323e-02*G73_0_1_0 - 8.333333333333323e-02*G73_0_2_1 - 8.333333333333323e-02*G73_0_3_2 - 8.333333333333323e-02*G74_3_8_0 - 8.333333333333323e-02*G74_3_8_1 - 8.333333333333323e-02*G74_3_8_2 + 8.333333333333323e-02*G74_3_9_0 + 8.333333333333323e-02*G74_3_10_1 + 8.333333333333323e-02*G74_3_11_2 + 8.333333333333323e-02*G75_3_4_0 + 8.333333333333323e-02*G75_3_4_1 + 8.333333333333323e-02*G75_3_4_2 - 8.333333333333323e-02*G75_3_5_0 - 8.333333333333323e-02*G75_3_6_1 - 8.333333333333323e-02*G75_3_7_2 - 8.333333333333323e-02*G76_6_8_0 - 8.333333333333323e-02*G76_6_8_1 - 8.333333333333323e-02*G76_6_8_2 + 8.333333333333323e-02*G76_6_9_0 + 8.333333333333323e-02*G76_6_10_1 + 8.333333333333323e-02*G76_6_11_2 + 8.333333333333323e-02*G77_6_8_0 + 8.333333333333323e-02*G77_6_8_1 + 8.333333333333323e-02*G77_6_8_2 - 8.333333333333323e-02*G77_6_9_0 - 8.333333333333323e-02*G77_6_10_1 - 8.333333333333323e-02*G77_6_11_2 + 8.333333333333323e-02*G78_6_0_0 + 8.333333333333323e-02*G78_6_0_1 + 8.333333333333322e-02*G78_6_0_2 - 8.333333333333323e-02*G78_6_1_0 - 8.333333333333323e-02*G78_6_2_1 - 8.333333333333323e-02*G78_6_3_2 - 8.333333333333323e-02*G79_6_0_0 - 8.333333333333323e-02*G79_6_0_1 - 8.333333333333322e-02*G79_6_0_2 + 8.333333333333323e-02*G79_6_1_0 + 8.333333333333323e-02*G79_6_2_1 + 8.333333333333323e-02*G79_6_3_2 + 8.333333333333323e-02*G80_7_4_0 + 8.333333333333323e-02*G80_7_4_1 + 8.333333333333323e-02*G80_7_4_2 - 8.333333333333323e-02*G80_7_5_0 - 8.333333333333323e-02*G80_7_6_1 - 8.333333333333323e-02*G80_7_7_2 - 8.333333333333323e-02*G81_7_0_0 - 8.333333333333323e-02*G81_7_0_1 - 8.333333333333322e-02*G81_7_0_2 + 8.333333333333323e-02*G81_7_1_0 + 8.333333333333323e-02*G81_7_2_1 + 8.333333333333323e-02*G81_7_3_2 + 8.333333333333323e-02*G82_8_8_0 + 8.333333333333323e-02*G82_8_8_1 + 8.333333333333323e-02*G82_8_8_2 - 8.333333333333323e-02*G82_8_9_0 - 8.333333333333323e-02*G82_8_10_1 - 8.333333333333323e-02*G82_8_11_2 - 8.333333333333323e-02*G83_8_0_0 - 8.333333333333323e-02*G83_8_0_1 - 8.333333333333322e-02*G83_8_0_2 + 8.333333333333323e-02*G83_8_1_0 + 8.333333333333323e-02*G83_8_2_1 + 8.333333333333323e-02*G83_8_3_2;
    block[7] = -8.333333333333323e-02*G84_1_8_0 - 8.333333333333323e-02*G84_1_8_1 - 8.333333333333323e-02*G84_1_8_2 + 8.333333333333323e-02*G84_1_9_0 + 8.333333333333323e-02*G84_1_10_1 + 8.333333333333323e-02*G84_1_11_2 + 8.333333333333323e-02*G85_1_0_0 + 8.333333333333323e-02*G85_1_0_1 + 8.333333333333322e-02*G85_1_0_2 - 8.333333333333323e-02*G85_1_1_0 - 8.333333333333323e-02*G85_1_2_1 - 8.333333333333323e-02*G85_1_3_2 - 8.333333333333323e-02*G86_4_8_0 - 8.333333333333323e-02*G86_4_8_1 - 8.333333333333323e-02*G86_4_8_2 + 8.333333333333323e-02*G86_4_9_0 + 8.333333333333323e-02*G86_4_10_1 + 8.333333333333323e-02*G86_4_11_2 + 8.333333333333323e-02*G87_4_4_0 + 8.333333333333323e-02*G87_4_4_1 + 8.333333333333323e-02*G87_4_4_2 - 8.333333333333323e-02*G87_4_5_0 - 8.333333333333323e-02*G87_4_6_1 - 8.333333333333323e-02*G87_4_7_2 - 8.333333333333323e-02*G88_7_8_0 - 8.333333333333323e-02*G88_7_8_1 - 8.333333333333323e-02*G88_7_8_2 + 8.333333333333323e-02*G88_7_9_0 + 8.333333333333323e-02*G88_7_10_1 + 8.333333333333323e-02*G88_7_11_2 + 8.333333333333323e-02*G89_7_8_0 + 8.333333333333323e-02*G89_7_8_1 + 8.333333333333323e-02*G89_7_8_2 - 8.333333333333323e-02*G89_7_9_0 - 8.333333333333323e-02*G89_7_10_1 - 8.333333333333323e-02*G89_7_11_2 + 8.333333333333323e-02*G90_6_0_0 + 8.333333333333323e-02*G90_6_0_1 + 8.333333333333322e-02*G90_6_0_2 - 8.333333333333323e-02*G90_6_1_0 - 8.333333333333323e-02*G90_6_2_1 - 8.333333333333323e-02*G90_6_3_2 - 8.333333333333323e-02*G91_6_4_0 - 8.333333333333323e-02*G91_6_4_1 - 8.333333333333323e-02*G91_6_4_2 + 8.333333333333323e-02*G91_6_5_0 + 8.333333333333323e-02*G91_6_6_1 + 8.333333333333323e-02*G91_6_7_2 + 8.333333333333323e-02*G92_7_4_0 + 8.333333333333323e-02*G92_7_4_1 + 8.333333333333323e-02*G92_7_4_2 - 8.333333333333323e-02*G92_7_5_0 - 8.333333333333323e-02*G92_7_6_1 - 8.333333333333323e-02*G92_7_7_2 - 8.333333333333323e-02*G93_7_4_0 - 8.333333333333323e-02*G93_7_4_1 - 8.333333333333323e-02*G93_7_4_2 + 8.333333333333323e-02*G93_7_5_0 + 8.333333333333323e-02*G93_7_6_1 + 8.333333333333323e-02*G93_7_7_2 + 8.333333333333323e-02*G94_8_8_0 + 8.333333333333323e-02*G94_8_8_1 + 8.333333333333323e-02*G94_8_8_2 - 8.333333333333323e-02*G94_8_9_0 - 8.333333333333323e-02*G94_8_10_1 - 8.333333333333323e-02*G94_8_11_2 - 8.333333333333323e-02*G95_8_4_0 - 8.333333333333323e-02*G95_8_4_1 - 8.333333333333323e-02*G95_8_4_2 + 8.333333333333323e-02*G95_8_5_0 + 8.333333333333323e-02*G95_8_6_1 + 8.333333333333323e-02*G95_8_7_2;
    block[8] = -8.333333333333323e-02*G96_2_8_0 - 8.333333333333323e-02*G96_2_8_1 - 8.333333333333323e-02*G96_2_8_2 + 8.333333333333323e-02*G96_2_9_0 + 8.333333333333323e-02*G96_2_10_1 + 8.333333333333323e-02*G96_2_11_2 + 8.333333333333323e-02*G97_2_0_0 + 8.333333333333323e-02*G97_2_0_1 + 8.333333333333322e-02*G97_2_0_2 - 8.333333333333323e-02*G97_2_1_0 - 8.333333333333323e-02*G97_2_2_1 - 8.333333333333323e-02*G97_2_3_2 - 8.333333333333323e-02*G98_5_8_0 - 8.333333333333323e-02*G98_5_8_1 - 8.333333333333323e-02*G98_5_8_2 + 8.333333333333323e-02*G98_5_9_0 + 8.333333333333323e-02*G98_5_10_1 + 8.333333333333323e-02*G98_5_11_2 + 8.333333333333323e-02*G99_5_4_0 + 8.333333333333323e-02*G99_5_4_1 + 8.333333333333323e-02*G99_5_4_2 - 8.333333333333323e-02*G99_5_5_0 - 8.333333333333323e-02*G99_5_6_1 - 8.333333333333323e-02*G99_5_7_2 - 8.333333333333323e-02*G100_8_8_0 - 8.333333333333323e-02*G100_8_8_1 - 8.333333333333323e-02*G100_8_8_2 + 8.333333333333323e-02*G100_8_9_0 + 8.333333333333323e-02*G100_8_10_1 + 8.333333333333323e-02*G100_8_11_2 + 8.333333333333323e-02*G101_8_8_0 + 8.333333333333323e-02*G101_8_8_1 + 8.333333333333323e-02*G101_8_8_2 - 8.333333333333323e-02*G101_8_9_0 - 8.333333333333323e-02*G101_8_10_1 - 8.333333333333323e-02*G101_8_11_2 + 8.333333333333323e-02*G102_6_0_0 + 8.333333333333323e-02*G102_6_0_1 + 8.333333333333322e-02*G102_6_0_2 - 8.333333333333323e-02*G102_6_1_0 - 8.333333333333323e-02*G102_6_2_1 - 8.333333333333323e-02*G102_6_3_2 - 8.333333333333323e-02*G103_6_8_0 - 8.333333333333323e-02*G103_6_8_1 - 8.333333333333323e-02*G103_6_8_2 + 8.333333333333323e-02*G103_6_9_0 + 8.333333333333323e-02*G103_6_10_1 + 8.333333333333323e-02*G103_6_11_2 + 8.333333333333323e-02*G104_7_4_0 + 8.333333333333323e-02*G104_7_4_1 + 8.333333333333323e-02*G104_7_4_2 - 8.333333333333323e-02*G104_7_5_0 - 8.333333333333323e-02*G104_7_6_1 - 8.333333333333323e-02*G104_7_7_2 - 8.333333333333323e-02*G105_7_8_0 - 8.333333333333323e-02*G105_7_8_1 - 8.333333333333323e-02*G105_7_8_2 + 8.333333333333323e-02*G105_7_9_0 + 8.333333333333323e-02*G105_7_10_1 + 8.333333333333323e-02*G105_7_11_2 + 8.333333333333323e-02*G106_8_8_0 + 8.333333333333323e-02*G106_8_8_1 + 8.333333333333323e-02*G106_8_8_2 - 8.333333333333323e-02*G106_8_9_0 - 8.333333333333323e-02*G106_8_10_1 - 8.333333333333323e-02*G106_8_11_2 - 8.333333333333323e-02*G107_8_8_0 - 8.333333333333323e-02*G107_8_8_1 - 8.333333333333323e-02*G107_8_8_2 + 8.333333333333323e-02*G107_8_9_0 + 8.333333333333323e-02*G107_8_10_1 + 8.333333333333323e-02*G107_8_11_2;
  }

};

} }

#endif
