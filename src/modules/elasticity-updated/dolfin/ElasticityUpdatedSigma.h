// Automatically generated by FFC, the FEniCS Form Compiler, version 0.2.1.
// For further information, go to http://www/fenics.org/ffc/.
// Licensed under the GNU GPL Version 2.

#ifndef __ELASTICITYUPDATEDSIGMA_H
#define __ELASTICITYUPDATEDSIGMA_H

#include <dolfin/Mesh.h>
#include <dolfin/Cell.h>
#include <dolfin/Point.h>
#include <dolfin/Vector.h>
#include <dolfin/AffineMap.h>
#include <dolfin/FiniteElement.h>
#include <dolfin/LinearForm.h>
#include <dolfin/BilinearForm.h>

namespace dolfin { namespace ElasticityUpdatedSigma {

/// This class contains the form to be evaluated, including
/// contributions from the interior and boundary of the domain.

class LinearForm : public dolfin::LinearForm
{
public:
    
  class TestElement : public dolfin::FiniteElement
  {
  public:

    TestElement() : dolfin::FiniteElement(), tensordims(0)
    {
      tensordims = new unsigned int [1];
      tensordims[0] = 9;
    }

    ~TestElement()
    {
      if ( tensordims ) delete [] tensordims;
    }

    inline unsigned int spacedim() const
    {
      return 9;
    }

    inline unsigned int shapedim() const
    {
      return 3;
    }

    inline unsigned int tensordim(unsigned int i) const
    {
      dolfin_assert(i < 1);
      return tensordims[i];
    }

    inline unsigned int rank() const
    {
      return 1;
    }

    void dofmap(int dofs[], const Cell& cell, const Mesh& mesh) const
    {
      dofs[0] = cell.id();
      int offset = mesh.noCells();
      dofs[1] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[2] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[3] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[4] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[5] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[6] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[7] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[8] = offset + cell.id();
    }

    void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
    {
      points[0] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[1] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[2] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[3] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[4] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[5] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[6] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[7] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[8] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      components[0] = 0;
      components[1] = 1;
      components[2] = 2;
      components[3] = 3;
      components[4] = 4;
      components[5] = 5;
      components[6] = 6;
      components[7] = 7;
      components[8] = 8;
    }

    void vertexeval(real values[], unsigned int vertex, const Vector& x, const Mesh& mesh) const
    {
      // FIXME: Temporary fix for Lagrange elements
      values[0] = x(vertex);
      int offset = mesh.noCells();
      values[1] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[2] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[3] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[4] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[5] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[6] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[7] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[8] = x(offset + vertex);
    }

  private:

    unsigned int* tensordims;

  };
    
  class FunctionElement_0 : public dolfin::FiniteElement
  {
  public:

    FunctionElement_0() : dolfin::FiniteElement(), tensordims(0)
    {
      tensordims = new unsigned int [1];
      tensordims[0] = 3;
    }

    ~FunctionElement_0()
    {
      if ( tensordims ) delete [] tensordims;
    }

    inline unsigned int spacedim() const
    {
      return 12;
    }

    inline unsigned int shapedim() const
    {
      return 3;
    }

    inline unsigned int tensordim(unsigned int i) const
    {
      dolfin_assert(i < 1);
      return tensordims[i];
    }

    inline unsigned int rank() const
    {
      return 1;
    }

    void dofmap(int dofs[], const Cell& cell, const Mesh& mesh) const
    {
      dofs[0] = cell.nodeID(0);
      dofs[1] = cell.nodeID(1);
      dofs[2] = cell.nodeID(2);
      dofs[3] = cell.nodeID(3);
      int offset = mesh.noNodes();
      dofs[4] = offset + cell.nodeID(0);
      dofs[5] = offset + cell.nodeID(1);
      dofs[6] = offset + cell.nodeID(2);
      dofs[7] = offset + cell.nodeID(3);
      offset = offset + mesh.noNodes();
      dofs[8] = offset + cell.nodeID(0);
      dofs[9] = offset + cell.nodeID(1);
      dofs[10] = offset + cell.nodeID(2);
      dofs[11] = offset + cell.nodeID(3);
    }

    void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
    {
      points[0] = map(0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
      points[1] = map(1.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
      points[2] = map(0.000000000000000e+00, 1.000000000000000e+00, 0.000000000000000e+00);
      points[3] = map(0.000000000000000e+00, 0.000000000000000e+00, 1.000000000000000e+00);
      points[4] = map(0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
      points[5] = map(1.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
      points[6] = map(0.000000000000000e+00, 1.000000000000000e+00, 0.000000000000000e+00);
      points[7] = map(0.000000000000000e+00, 0.000000000000000e+00, 1.000000000000000e+00);
      points[8] = map(0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
      points[9] = map(1.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00);
      points[10] = map(0.000000000000000e+00, 1.000000000000000e+00, 0.000000000000000e+00);
      points[11] = map(0.000000000000000e+00, 0.000000000000000e+00, 1.000000000000000e+00);
      components[0] = 0;
      components[1] = 0;
      components[2] = 0;
      components[3] = 0;
      components[4] = 1;
      components[5] = 1;
      components[6] = 1;
      components[7] = 1;
      components[8] = 2;
      components[9] = 2;
      components[10] = 2;
      components[11] = 2;
    }

    void vertexeval(real values[], unsigned int vertex, const Vector& x, const Mesh& mesh) const
    {
      // FIXME: Temporary fix for Lagrange elements
      values[0] = x(vertex);
      int offset = mesh.noNodes();
      values[1] = x(offset + vertex);
      offset = offset + mesh.noNodes();
      values[2] = x(offset + vertex);
    }

  private:

    unsigned int* tensordims;

  };
    
  class FunctionElement_1 : public dolfin::FiniteElement
  {
  public:

    FunctionElement_1() : dolfin::FiniteElement(), tensordims(0)
    {
      tensordims = new unsigned int [1];
      tensordims[0] = 9;
    }

    ~FunctionElement_1()
    {
      if ( tensordims ) delete [] tensordims;
    }

    inline unsigned int spacedim() const
    {
      return 9;
    }

    inline unsigned int shapedim() const
    {
      return 3;
    }

    inline unsigned int tensordim(unsigned int i) const
    {
      dolfin_assert(i < 1);
      return tensordims[i];
    }

    inline unsigned int rank() const
    {
      return 1;
    }

    void dofmap(int dofs[], const Cell& cell, const Mesh& mesh) const
    {
      dofs[0] = cell.id();
      int offset = mesh.noCells();
      dofs[1] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[2] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[3] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[4] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[5] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[6] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[7] = offset + cell.id();
      offset = offset + mesh.noCells();
      dofs[8] = offset + cell.id();
    }

    void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
    {
      points[0] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[1] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[2] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[3] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[4] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[5] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[6] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[7] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      points[8] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      components[0] = 0;
      components[1] = 1;
      components[2] = 2;
      components[3] = 3;
      components[4] = 4;
      components[5] = 5;
      components[6] = 6;
      components[7] = 7;
      components[8] = 8;
    }

    void vertexeval(real values[], unsigned int vertex, const Vector& x, const Mesh& mesh) const
    {
      // FIXME: Temporary fix for Lagrange elements
      values[0] = x(vertex);
      int offset = mesh.noCells();
      values[1] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[2] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[3] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[4] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[5] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[6] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[7] = x(offset + vertex);
      offset = offset + mesh.noCells();
      values[8] = x(offset + vertex);
    }

  private:

    unsigned int* tensordims;

  };
    
  class FunctionElement_2 : public dolfin::FiniteElement
  {
  public:

    FunctionElement_2() : dolfin::FiniteElement(), tensordims(0)
    {
      tensordims = new unsigned int [1];
      tensordims[0] = 1;
    }

    ~FunctionElement_2()
    {
      if ( tensordims ) delete [] tensordims;
    }

    inline unsigned int spacedim() const
    {
      return 1;
    }

    inline unsigned int shapedim() const
    {
      return 3;
    }

    inline unsigned int tensordim(unsigned int i) const
    {
      dolfin_assert(i < 1);
      return tensordims[i];
    }

    inline unsigned int rank() const
    {
      return 1;
    }

    void dofmap(int dofs[], const Cell& cell, const Mesh& mesh) const
    {
      dofs[0] = cell.id();
    }

    void pointmap(Point points[], unsigned int components[], const AffineMap& map) const
    {
      points[0] = map(2.500000000000000e-01, 2.500000000000000e-01, 2.500000000000000e-01);
      components[0] = 0;
    }

    void vertexeval(real values[], unsigned int vertex, const Vector& x, const Mesh& mesh) const
    {
      // FIXME: Temporary fix for Lagrange elements
      values[0] = x(vertex);
    }

  private:

    unsigned int* tensordims;

  };

  LinearForm(Function& w0, Function& w1, Function& w2, const real& c0, const real& c1, const real& c2) : dolfin::LinearForm(3), c0(c0), c1(c1), c2(c2)
  {
    // Create finite element for test space
    _test = new TestElement();

    // Add functions
    add(w0, new FunctionElement_0());
    add(w1, new FunctionElement_1());
    add(w2, new FunctionElement_2());
  }

  void eval(real block[], const AffineMap& map) const
  {
    // Compute geometry tensors
    real G0_0_0 = map.det*c1*c[0][0]*map.g00 + map.det*c1*c[0][0]*map.g00;
    real G0_0_1 = map.det*c1*c[0][0]*map.g10 + map.det*c1*c[0][0]*map.g10;
    real G0_0_2 = map.det*c1*c[0][0]*map.g20 + map.det*c1*c[0][0]*map.g20;
    real G0_1_0 = map.det*c1*c[0][1]*map.g00 + map.det*c1*c[0][1]*map.g00;
    real G0_2_1 = map.det*c1*c[0][2]*map.g10 + map.det*c1*c[0][2]*map.g10;
    real G0_3_2 = map.det*c1*c[0][3]*map.g20 + map.det*c1*c[0][3]*map.g20;
    real G1_0_0 = map.det*c0*c[0][0]*map.g00 + map.det*c0*c[0][0]*map.g00;
    real G1_0_1 = map.det*c0*c[0][0]*map.g10 + map.det*c0*c[0][0]*map.g10;
    real G1_0_2 = map.det*c0*c[0][0]*map.g20 + map.det*c0*c[0][0]*map.g20;
    real G1_1_0 = map.det*c0*c[0][1]*map.g00 + map.det*c0*c[0][1]*map.g00;
    real G1_2_1 = map.det*c0*c[0][2]*map.g10 + map.det*c0*c[0][2]*map.g10;
    real G1_3_2 = map.det*c0*c[0][3]*map.g20 + map.det*c0*c[0][3]*map.g20;
    real G2_4_0 = map.det*c0*c[0][4]*map.g01 + map.det*c0*c[0][4]*map.g01;
    real G2_4_1 = map.det*c0*c[0][4]*map.g11 + map.det*c0*c[0][4]*map.g11;
    real G2_4_2 = map.det*c0*c[0][4]*map.g21 + map.det*c0*c[0][4]*map.g21;
    real G2_5_0 = map.det*c0*c[0][5]*map.g01 + map.det*c0*c[0][5]*map.g01;
    real G2_6_1 = map.det*c0*c[0][6]*map.g11 + map.det*c0*c[0][6]*map.g11;
    real G2_7_2 = map.det*c0*c[0][7]*map.g21 + map.det*c0*c[0][7]*map.g21;
    real G3_8_0 = map.det*c0*c[0][8]*map.g02 + map.det*c0*c[0][8]*map.g02;
    real G3_8_1 = map.det*c0*c[0][8]*map.g12 + map.det*c0*c[0][8]*map.g12;
    real G3_8_2 = map.det*c0*c[0][8]*map.g22 + map.det*c0*c[0][8]*map.g22;
    real G3_9_0 = map.det*c0*c[0][9]*map.g02 + map.det*c0*c[0][9]*map.g02;
    real G3_10_1 = map.det*c0*c[0][10]*map.g12 + map.det*c0*c[0][10]*map.g12;
    real G3_11_2 = map.det*c0*c[0][11]*map.g22 + map.det*c0*c[0][11]*map.g22;
    real G4_0_0 = map.det*c1*c[0][0]*map.g01;
    real G4_0_1 = map.det*c1*c[0][0]*map.g11;
    real G4_0_2 = map.det*c1*c[0][0]*map.g21;
    real G4_1_0 = map.det*c1*c[0][1]*map.g01;
    real G4_2_1 = map.det*c1*c[0][2]*map.g11;
    real G4_3_2 = map.det*c1*c[0][3]*map.g21;
    real G5_4_0 = map.det*c1*c[0][4]*map.g00;
    real G5_4_1 = map.det*c1*c[0][4]*map.g10;
    real G5_4_2 = map.det*c1*c[0][4]*map.g20;
    real G5_5_0 = map.det*c1*c[0][5]*map.g00;
    real G5_6_1 = map.det*c1*c[0][6]*map.g10;
    real G5_7_2 = map.det*c1*c[0][7]*map.g20;
    real G9_0_0 = map.det*c1*c[0][0]*map.g02;
    real G9_0_1 = map.det*c1*c[0][0]*map.g12;
    real G9_0_2 = map.det*c1*c[0][0]*map.g22;
    real G9_1_0 = map.det*c1*c[0][1]*map.g02;
    real G9_2_1 = map.det*c1*c[0][2]*map.g12;
    real G9_3_2 = map.det*c1*c[0][3]*map.g22;
    real G10_8_0 = map.det*c1*c[0][8]*map.g00;
    real G10_8_1 = map.det*c1*c[0][8]*map.g10;
    real G10_8_2 = map.det*c1*c[0][8]*map.g20;
    real G10_9_0 = map.det*c1*c[0][9]*map.g00;
    real G10_10_1 = map.det*c1*c[0][10]*map.g10;
    real G10_11_2 = map.det*c1*c[0][11]*map.g20;
    real G14_4_0 = map.det*c1*c[0][4]*map.g00;
    real G14_4_1 = map.det*c1*c[0][4]*map.g10;
    real G14_4_2 = map.det*c1*c[0][4]*map.g20;
    real G14_5_0 = map.det*c1*c[0][5]*map.g00;
    real G14_6_1 = map.det*c1*c[0][6]*map.g10;
    real G14_7_2 = map.det*c1*c[0][7]*map.g20;
    real G15_0_0 = map.det*c1*c[0][0]*map.g01;
    real G15_0_1 = map.det*c1*c[0][0]*map.g11;
    real G15_0_2 = map.det*c1*c[0][0]*map.g21;
    real G15_1_0 = map.det*c1*c[0][1]*map.g01;
    real G15_2_1 = map.det*c1*c[0][2]*map.g11;
    real G15_3_2 = map.det*c1*c[0][3]*map.g21;
    real G19_4_0 = map.det*c1*c[0][4]*map.g01 + map.det*c1*c[0][4]*map.g01;
    real G19_4_1 = map.det*c1*c[0][4]*map.g11 + map.det*c1*c[0][4]*map.g11;
    real G19_4_2 = map.det*c1*c[0][4]*map.g21 + map.det*c1*c[0][4]*map.g21;
    real G19_5_0 = map.det*c1*c[0][5]*map.g01 + map.det*c1*c[0][5]*map.g01;
    real G19_6_1 = map.det*c1*c[0][6]*map.g11 + map.det*c1*c[0][6]*map.g11;
    real G19_7_2 = map.det*c1*c[0][7]*map.g21 + map.det*c1*c[0][7]*map.g21;
    real G20_0_0 = map.det*c0*c[0][0]*map.g00 + map.det*c0*c[0][0]*map.g00;
    real G20_0_1 = map.det*c0*c[0][0]*map.g10 + map.det*c0*c[0][0]*map.g10;
    real G20_0_2 = map.det*c0*c[0][0]*map.g20 + map.det*c0*c[0][0]*map.g20;
    real G20_1_0 = map.det*c0*c[0][1]*map.g00 + map.det*c0*c[0][1]*map.g00;
    real G20_2_1 = map.det*c0*c[0][2]*map.g10 + map.det*c0*c[0][2]*map.g10;
    real G20_3_2 = map.det*c0*c[0][3]*map.g20 + map.det*c0*c[0][3]*map.g20;
    real G21_4_0 = map.det*c0*c[0][4]*map.g01 + map.det*c0*c[0][4]*map.g01;
    real G21_4_1 = map.det*c0*c[0][4]*map.g11 + map.det*c0*c[0][4]*map.g11;
    real G21_4_2 = map.det*c0*c[0][4]*map.g21 + map.det*c0*c[0][4]*map.g21;
    real G21_5_0 = map.det*c0*c[0][5]*map.g01 + map.det*c0*c[0][5]*map.g01;
    real G21_6_1 = map.det*c0*c[0][6]*map.g11 + map.det*c0*c[0][6]*map.g11;
    real G21_7_2 = map.det*c0*c[0][7]*map.g21 + map.det*c0*c[0][7]*map.g21;
    real G22_8_0 = map.det*c0*c[0][8]*map.g02 + map.det*c0*c[0][8]*map.g02;
    real G22_8_1 = map.det*c0*c[0][8]*map.g12 + map.det*c0*c[0][8]*map.g12;
    real G22_8_2 = map.det*c0*c[0][8]*map.g22 + map.det*c0*c[0][8]*map.g22;
    real G22_9_0 = map.det*c0*c[0][9]*map.g02 + map.det*c0*c[0][9]*map.g02;
    real G22_10_1 = map.det*c0*c[0][10]*map.g12 + map.det*c0*c[0][10]*map.g12;
    real G22_11_2 = map.det*c0*c[0][11]*map.g22 + map.det*c0*c[0][11]*map.g22;
    real G23_4_0 = map.det*c1*c[0][4]*map.g02;
    real G23_4_1 = map.det*c1*c[0][4]*map.g12;
    real G23_4_2 = map.det*c1*c[0][4]*map.g22;
    real G23_5_0 = map.det*c1*c[0][5]*map.g02;
    real G23_6_1 = map.det*c1*c[0][6]*map.g12;
    real G23_7_2 = map.det*c1*c[0][7]*map.g22;
    real G24_8_0 = map.det*c1*c[0][8]*map.g01;
    real G24_8_1 = map.det*c1*c[0][8]*map.g11;
    real G24_8_2 = map.det*c1*c[0][8]*map.g21;
    real G24_9_0 = map.det*c1*c[0][9]*map.g01;
    real G24_10_1 = map.det*c1*c[0][10]*map.g11;
    real G24_11_2 = map.det*c1*c[0][11]*map.g21;
    real G28_8_0 = map.det*c1*c[0][8]*map.g00;
    real G28_8_1 = map.det*c1*c[0][8]*map.g10;
    real G28_8_2 = map.det*c1*c[0][8]*map.g20;
    real G28_9_0 = map.det*c1*c[0][9]*map.g00;
    real G28_10_1 = map.det*c1*c[0][10]*map.g10;
    real G28_11_2 = map.det*c1*c[0][11]*map.g20;
    real G29_0_0 = map.det*c1*c[0][0]*map.g02;
    real G29_0_1 = map.det*c1*c[0][0]*map.g12;
    real G29_0_2 = map.det*c1*c[0][0]*map.g22;
    real G29_1_0 = map.det*c1*c[0][1]*map.g02;
    real G29_2_1 = map.det*c1*c[0][2]*map.g12;
    real G29_3_2 = map.det*c1*c[0][3]*map.g22;
    real G33_8_0 = map.det*c1*c[0][8]*map.g01;
    real G33_8_1 = map.det*c1*c[0][8]*map.g11;
    real G33_8_2 = map.det*c1*c[0][8]*map.g21;
    real G33_9_0 = map.det*c1*c[0][9]*map.g01;
    real G33_10_1 = map.det*c1*c[0][10]*map.g11;
    real G33_11_2 = map.det*c1*c[0][11]*map.g21;
    real G34_4_0 = map.det*c1*c[0][4]*map.g02;
    real G34_4_1 = map.det*c1*c[0][4]*map.g12;
    real G34_4_2 = map.det*c1*c[0][4]*map.g22;
    real G34_5_0 = map.det*c1*c[0][5]*map.g02;
    real G34_6_1 = map.det*c1*c[0][6]*map.g12;
    real G34_7_2 = map.det*c1*c[0][7]*map.g22;
    real G38_8_0 = map.det*c1*c[0][8]*map.g02 + map.det*c1*c[0][8]*map.g02;
    real G38_8_1 = map.det*c1*c[0][8]*map.g12 + map.det*c1*c[0][8]*map.g12;
    real G38_8_2 = map.det*c1*c[0][8]*map.g22 + map.det*c1*c[0][8]*map.g22;
    real G38_9_0 = map.det*c1*c[0][9]*map.g02 + map.det*c1*c[0][9]*map.g02;
    real G38_10_1 = map.det*c1*c[0][10]*map.g12 + map.det*c1*c[0][10]*map.g12;
    real G38_11_2 = map.det*c1*c[0][11]*map.g22 + map.det*c1*c[0][11]*map.g22;
    real G39_0_0 = map.det*c0*c[0][0]*map.g00 + map.det*c0*c[0][0]*map.g00;
    real G39_0_1 = map.det*c0*c[0][0]*map.g10 + map.det*c0*c[0][0]*map.g10;
    real G39_0_2 = map.det*c0*c[0][0]*map.g20 + map.det*c0*c[0][0]*map.g20;
    real G39_1_0 = map.det*c0*c[0][1]*map.g00 + map.det*c0*c[0][1]*map.g00;
    real G39_2_1 = map.det*c0*c[0][2]*map.g10 + map.det*c0*c[0][2]*map.g10;
    real G39_3_2 = map.det*c0*c[0][3]*map.g20 + map.det*c0*c[0][3]*map.g20;
    real G40_4_0 = map.det*c0*c[0][4]*map.g01 + map.det*c0*c[0][4]*map.g01;
    real G40_4_1 = map.det*c0*c[0][4]*map.g11 + map.det*c0*c[0][4]*map.g11;
    real G40_4_2 = map.det*c0*c[0][4]*map.g21 + map.det*c0*c[0][4]*map.g21;
    real G40_5_0 = map.det*c0*c[0][5]*map.g01 + map.det*c0*c[0][5]*map.g01;
    real G40_6_1 = map.det*c0*c[0][6]*map.g11 + map.det*c0*c[0][6]*map.g11;
    real G40_7_2 = map.det*c0*c[0][7]*map.g21 + map.det*c0*c[0][7]*map.g21;
    real G41_8_0 = map.det*c0*c[0][8]*map.g02 + map.det*c0*c[0][8]*map.g02;
    real G41_8_1 = map.det*c0*c[0][8]*map.g12 + map.det*c0*c[0][8]*map.g12;
    real G41_8_2 = map.det*c0*c[0][8]*map.g22 + map.det*c0*c[0][8]*map.g22;
    real G41_9_0 = map.det*c0*c[0][9]*map.g02 + map.det*c0*c[0][9]*map.g02;
    real G41_10_1 = map.det*c0*c[0][10]*map.g12 + map.det*c0*c[0][10]*map.g12;
    real G41_11_2 = map.det*c0*c[0][11]*map.g22 + map.det*c0*c[0][11]*map.g22;
    real G42_0_0_0 = map.det*c[0][0]*c[1][0]*map.g00 + map.det*c[1][0]*c[0][0]*map.g00;
    real G42_0_0_1 = map.det*c[0][0]*c[1][0]*map.g10 + map.det*c[1][0]*c[0][0]*map.g10;
    real G42_0_0_2 = map.det*c[0][0]*c[1][0]*map.g20 + map.det*c[1][0]*c[0][0]*map.g20;
    real G42_0_1_0 = map.det*c[0][1]*c[1][0]*map.g00 + map.det*c[1][0]*c[0][1]*map.g00;
    real G42_0_2_1 = map.det*c[0][2]*c[1][0]*map.g10 + map.det*c[1][0]*c[0][2]*map.g10;
    real G42_0_3_2 = map.det*c[0][3]*c[1][0]*map.g20 + map.det*c[1][0]*c[0][3]*map.g20;
    real G43_0_0_0 = map.det*c[0][0]*c[1][0]*map.g00 + map.det*c[1][0]*c[0][0]*map.g00;
    real G43_0_0_1 = map.det*c[0][0]*c[1][0]*map.g10 + map.det*c[1][0]*c[0][0]*map.g10;
    real G43_0_0_2 = map.det*c[0][0]*c[1][0]*map.g20 + map.det*c[1][0]*c[0][0]*map.g20;
    real G43_0_1_0 = map.det*c[0][1]*c[1][0]*map.g00 + map.det*c[1][0]*c[0][1]*map.g00;
    real G43_0_2_1 = map.det*c[0][2]*c[1][0]*map.g10 + map.det*c[1][0]*c[0][2]*map.g10;
    real G43_0_3_2 = map.det*c[0][3]*c[1][0]*map.g20 + map.det*c[1][0]*c[0][3]*map.g20;
    real G44_1_0_0 = map.det*c[0][0]*c[1][1]*map.g01;
    real G44_1_0_1 = map.det*c[0][0]*c[1][1]*map.g11;
    real G44_1_0_2 = map.det*c[0][0]*c[1][1]*map.g21;
    real G44_1_1_0 = map.det*c[0][1]*c[1][1]*map.g01;
    real G44_1_2_1 = map.det*c[0][2]*c[1][1]*map.g11;
    real G44_1_3_2 = map.det*c[0][3]*c[1][1]*map.g21;
    real G45_1_4_0 = map.det*c[0][4]*c[1][1]*map.g00;
    real G45_1_4_1 = map.det*c[0][4]*c[1][1]*map.g10;
    real G45_1_4_2 = map.det*c[0][4]*c[1][1]*map.g20;
    real G45_1_5_0 = map.det*c[0][5]*c[1][1]*map.g00;
    real G45_1_6_1 = map.det*c[0][6]*c[1][1]*map.g10;
    real G45_1_7_2 = map.det*c[0][7]*c[1][1]*map.g20;
    real G46_2_0_0 = map.det*c[0][0]*c[1][2]*map.g02;
    real G46_2_0_1 = map.det*c[0][0]*c[1][2]*map.g12;
    real G46_2_0_2 = map.det*c[0][0]*c[1][2]*map.g22;
    real G46_2_1_0 = map.det*c[0][1]*c[1][2]*map.g02;
    real G46_2_2_1 = map.det*c[0][2]*c[1][2]*map.g12;
    real G46_2_3_2 = map.det*c[0][3]*c[1][2]*map.g22;
    real G47_2_8_0 = map.det*c[0][8]*c[1][2]*map.g00;
    real G47_2_8_1 = map.det*c[0][8]*c[1][2]*map.g10;
    real G47_2_8_2 = map.det*c[0][8]*c[1][2]*map.g20;
    real G47_2_9_0 = map.det*c[0][9]*c[1][2]*map.g00;
    real G47_2_10_1 = map.det*c[0][10]*c[1][2]*map.g10;
    real G47_2_11_2 = map.det*c[0][11]*c[1][2]*map.g20;
    real G48_3_4_0 = map.det*c[1][3]*c[0][4]*map.g00;
    real G48_3_4_1 = map.det*c[1][3]*c[0][4]*map.g10;
    real G48_3_4_2 = map.det*c[1][3]*c[0][4]*map.g20;
    real G48_3_5_0 = map.det*c[1][3]*c[0][5]*map.g00;
    real G48_3_6_1 = map.det*c[1][3]*c[0][6]*map.g10;
    real G48_3_7_2 = map.det*c[1][3]*c[0][7]*map.g20;
    real G49_3_0_0 = map.det*c[1][3]*c[0][0]*map.g01;
    real G49_3_0_1 = map.det*c[1][3]*c[0][0]*map.g11;
    real G49_3_0_2 = map.det*c[1][3]*c[0][0]*map.g21;
    real G49_3_1_0 = map.det*c[1][3]*c[0][1]*map.g01;
    real G49_3_2_1 = map.det*c[1][3]*c[0][2]*map.g11;
    real G49_3_3_2 = map.det*c[1][3]*c[0][3]*map.g21;
    real G50_6_8_0 = map.det*c[1][6]*c[0][8]*map.g00;
    real G50_6_8_1 = map.det*c[1][6]*c[0][8]*map.g10;
    real G50_6_8_2 = map.det*c[1][6]*c[0][8]*map.g20;
    real G50_6_9_0 = map.det*c[1][6]*c[0][9]*map.g00;
    real G50_6_10_1 = map.det*c[1][6]*c[0][10]*map.g10;
    real G50_6_11_2 = map.det*c[1][6]*c[0][11]*map.g20;
    real G51_6_0_0 = map.det*c[1][6]*c[0][0]*map.g02;
    real G51_6_0_1 = map.det*c[1][6]*c[0][0]*map.g12;
    real G51_6_0_2 = map.det*c[1][6]*c[0][0]*map.g22;
    real G51_6_1_0 = map.det*c[1][6]*c[0][1]*map.g02;
    real G51_6_2_1 = map.det*c[1][6]*c[0][2]*map.g12;
    real G51_6_3_2 = map.det*c[1][6]*c[0][3]*map.g22;
    real G52_3_0_0 = map.det*c[0][0]*c[1][3]*map.g00;
    real G52_3_0_1 = map.det*c[0][0]*c[1][3]*map.g10;
    real G52_3_0_2 = map.det*c[0][0]*c[1][3]*map.g20;
    real G52_3_1_0 = map.det*c[0][1]*c[1][3]*map.g00;
    real G52_3_2_1 = map.det*c[0][2]*c[1][3]*map.g10;
    real G52_3_3_2 = map.det*c[0][3]*c[1][3]*map.g20;
    real G53_3_0_0 = map.det*c[0][0]*c[1][3]*map.g00;
    real G53_3_0_1 = map.det*c[0][0]*c[1][3]*map.g10;
    real G53_3_0_2 = map.det*c[0][0]*c[1][3]*map.g20;
    real G53_3_1_0 = map.det*c[0][1]*c[1][3]*map.g00;
    real G53_3_2_1 = map.det*c[0][2]*c[1][3]*map.g10;
    real G53_3_3_2 = map.det*c[0][3]*c[1][3]*map.g20;
    real G54_4_0_0 = map.det*c[0][0]*c[1][4]*map.g01;
    real G54_4_0_1 = map.det*c[0][0]*c[1][4]*map.g11;
    real G54_4_0_2 = map.det*c[0][0]*c[1][4]*map.g21;
    real G54_4_1_0 = map.det*c[0][1]*c[1][4]*map.g01;
    real G54_4_2_1 = map.det*c[0][2]*c[1][4]*map.g11;
    real G54_4_3_2 = map.det*c[0][3]*c[1][4]*map.g21;
    real G55_4_4_0 = map.det*c[0][4]*c[1][4]*map.g00;
    real G55_4_4_1 = map.det*c[0][4]*c[1][4]*map.g10;
    real G55_4_4_2 = map.det*c[0][4]*c[1][4]*map.g20;
    real G55_4_5_0 = map.det*c[0][5]*c[1][4]*map.g00;
    real G55_4_6_1 = map.det*c[0][6]*c[1][4]*map.g10;
    real G55_4_7_2 = map.det*c[0][7]*c[1][4]*map.g20;
    real G56_5_0_0 = map.det*c[0][0]*c[1][5]*map.g02;
    real G56_5_0_1 = map.det*c[0][0]*c[1][5]*map.g12;
    real G56_5_0_2 = map.det*c[0][0]*c[1][5]*map.g22;
    real G56_5_1_0 = map.det*c[0][1]*c[1][5]*map.g02;
    real G56_5_2_1 = map.det*c[0][2]*c[1][5]*map.g12;
    real G56_5_3_2 = map.det*c[0][3]*c[1][5]*map.g22;
    real G57_5_8_0 = map.det*c[0][8]*c[1][5]*map.g00;
    real G57_5_8_1 = map.det*c[0][8]*c[1][5]*map.g10;
    real G57_5_8_2 = map.det*c[0][8]*c[1][5]*map.g20;
    real G57_5_9_0 = map.det*c[0][9]*c[1][5]*map.g00;
    real G57_5_10_1 = map.det*c[0][10]*c[1][5]*map.g10;
    real G57_5_11_2 = map.det*c[0][11]*c[1][5]*map.g20;
    real G58_0_0_0 = map.det*c[1][0]*c[0][0]*map.g01;
    real G58_0_0_1 = map.det*c[1][0]*c[0][0]*map.g11;
    real G58_0_0_2 = map.det*c[1][0]*c[0][0]*map.g21;
    real G58_0_1_0 = map.det*c[1][0]*c[0][1]*map.g01;
    real G58_0_2_1 = map.det*c[1][0]*c[0][2]*map.g11;
    real G58_0_3_2 = map.det*c[1][0]*c[0][3]*map.g21;
    real G59_0_4_0 = map.det*c[1][0]*c[0][4]*map.g00;
    real G59_0_4_1 = map.det*c[1][0]*c[0][4]*map.g10;
    real G59_0_4_2 = map.det*c[1][0]*c[0][4]*map.g20;
    real G59_0_5_0 = map.det*c[1][0]*c[0][5]*map.g00;
    real G59_0_6_1 = map.det*c[1][0]*c[0][6]*map.g10;
    real G59_0_7_2 = map.det*c[1][0]*c[0][7]*map.g20;
    real G60_3_4_0 = map.det*c[1][3]*c[0][4]*map.g01;
    real G60_3_4_1 = map.det*c[1][3]*c[0][4]*map.g11;
    real G60_3_4_2 = map.det*c[1][3]*c[0][4]*map.g21;
    real G60_3_5_0 = map.det*c[1][3]*c[0][5]*map.g01;
    real G60_3_6_1 = map.det*c[1][3]*c[0][6]*map.g11;
    real G60_3_7_2 = map.det*c[1][3]*c[0][7]*map.g21;
    real G61_3_4_0 = map.det*c[1][3]*c[0][4]*map.g01;
    real G61_3_4_1 = map.det*c[1][3]*c[0][4]*map.g11;
    real G61_3_4_2 = map.det*c[1][3]*c[0][4]*map.g21;
    real G61_3_5_0 = map.det*c[1][3]*c[0][5]*map.g01;
    real G61_3_6_1 = map.det*c[1][3]*c[0][6]*map.g11;
    real G61_3_7_2 = map.det*c[1][3]*c[0][7]*map.g21;
    real G62_6_8_0 = map.det*c[1][6]*c[0][8]*map.g01;
    real G62_6_8_1 = map.det*c[1][6]*c[0][8]*map.g11;
    real G62_6_8_2 = map.det*c[1][6]*c[0][8]*map.g21;
    real G62_6_9_0 = map.det*c[1][6]*c[0][9]*map.g01;
    real G62_6_10_1 = map.det*c[1][6]*c[0][10]*map.g11;
    real G62_6_11_2 = map.det*c[1][6]*c[0][11]*map.g21;
    real G63_6_4_0 = map.det*c[1][6]*c[0][4]*map.g02;
    real G63_6_4_1 = map.det*c[1][6]*c[0][4]*map.g12;
    real G63_6_4_2 = map.det*c[1][6]*c[0][4]*map.g22;
    real G63_6_5_0 = map.det*c[1][6]*c[0][5]*map.g02;
    real G63_6_6_1 = map.det*c[1][6]*c[0][6]*map.g12;
    real G63_6_7_2 = map.det*c[1][6]*c[0][7]*map.g22;
    real G64_6_0_0 = map.det*c[0][0]*c[1][6]*map.g00;
    real G64_6_0_1 = map.det*c[0][0]*c[1][6]*map.g10;
    real G64_6_0_2 = map.det*c[0][0]*c[1][6]*map.g20;
    real G64_6_1_0 = map.det*c[0][1]*c[1][6]*map.g00;
    real G64_6_2_1 = map.det*c[0][2]*c[1][6]*map.g10;
    real G64_6_3_2 = map.det*c[0][3]*c[1][6]*map.g20;
    real G65_6_0_0 = map.det*c[0][0]*c[1][6]*map.g00;
    real G65_6_0_1 = map.det*c[0][0]*c[1][6]*map.g10;
    real G65_6_0_2 = map.det*c[0][0]*c[1][6]*map.g20;
    real G65_6_1_0 = map.det*c[0][1]*c[1][6]*map.g00;
    real G65_6_2_1 = map.det*c[0][2]*c[1][6]*map.g10;
    real G65_6_3_2 = map.det*c[0][3]*c[1][6]*map.g20;
    real G66_7_0_0 = map.det*c[0][0]*c[1][7]*map.g01;
    real G66_7_0_1 = map.det*c[0][0]*c[1][7]*map.g11;
    real G66_7_0_2 = map.det*c[0][0]*c[1][7]*map.g21;
    real G66_7_1_0 = map.det*c[0][1]*c[1][7]*map.g01;
    real G66_7_2_1 = map.det*c[0][2]*c[1][7]*map.g11;
    real G66_7_3_2 = map.det*c[0][3]*c[1][7]*map.g21;
    real G67_7_4_0 = map.det*c[0][4]*c[1][7]*map.g00;
    real G67_7_4_1 = map.det*c[0][4]*c[1][7]*map.g10;
    real G67_7_4_2 = map.det*c[0][4]*c[1][7]*map.g20;
    real G67_7_5_0 = map.det*c[0][5]*c[1][7]*map.g00;
    real G67_7_6_1 = map.det*c[0][6]*c[1][7]*map.g10;
    real G67_7_7_2 = map.det*c[0][7]*c[1][7]*map.g20;
    real G68_8_0_0 = map.det*c[0][0]*c[1][8]*map.g02;
    real G68_8_0_1 = map.det*c[0][0]*c[1][8]*map.g12;
    real G68_8_0_2 = map.det*c[0][0]*c[1][8]*map.g22;
    real G68_8_1_0 = map.det*c[0][1]*c[1][8]*map.g02;
    real G68_8_2_1 = map.det*c[0][2]*c[1][8]*map.g12;
    real G68_8_3_2 = map.det*c[0][3]*c[1][8]*map.g22;
    real G69_8_8_0 = map.det*c[0][8]*c[1][8]*map.g00;
    real G69_8_8_1 = map.det*c[0][8]*c[1][8]*map.g10;
    real G69_8_8_2 = map.det*c[0][8]*c[1][8]*map.g20;
    real G69_8_9_0 = map.det*c[0][9]*c[1][8]*map.g00;
    real G69_8_10_1 = map.det*c[0][10]*c[1][8]*map.g10;
    real G69_8_11_2 = map.det*c[0][11]*c[1][8]*map.g20;
    real G70_0_0_0 = map.det*c[1][0]*c[0][0]*map.g02;
    real G70_0_0_1 = map.det*c[1][0]*c[0][0]*map.g12;
    real G70_0_0_2 = map.det*c[1][0]*c[0][0]*map.g22;
    real G70_0_1_0 = map.det*c[1][0]*c[0][1]*map.g02;
    real G70_0_2_1 = map.det*c[1][0]*c[0][2]*map.g12;
    real G70_0_3_2 = map.det*c[1][0]*c[0][3]*map.g22;
    real G71_0_8_0 = map.det*c[1][0]*c[0][8]*map.g00;
    real G71_0_8_1 = map.det*c[1][0]*c[0][8]*map.g10;
    real G71_0_8_2 = map.det*c[1][0]*c[0][8]*map.g20;
    real G71_0_9_0 = map.det*c[1][0]*c[0][9]*map.g00;
    real G71_0_10_1 = map.det*c[1][0]*c[0][10]*map.g10;
    real G71_0_11_2 = map.det*c[1][0]*c[0][11]*map.g20;
    real G72_3_4_0 = map.det*c[1][3]*c[0][4]*map.g02;
    real G72_3_4_1 = map.det*c[1][3]*c[0][4]*map.g12;
    real G72_3_4_2 = map.det*c[1][3]*c[0][4]*map.g22;
    real G72_3_5_0 = map.det*c[1][3]*c[0][5]*map.g02;
    real G72_3_6_1 = map.det*c[1][3]*c[0][6]*map.g12;
    real G72_3_7_2 = map.det*c[1][3]*c[0][7]*map.g22;
    real G73_3_8_0 = map.det*c[1][3]*c[0][8]*map.g01;
    real G73_3_8_1 = map.det*c[1][3]*c[0][8]*map.g11;
    real G73_3_8_2 = map.det*c[1][3]*c[0][8]*map.g21;
    real G73_3_9_0 = map.det*c[1][3]*c[0][9]*map.g01;
    real G73_3_10_1 = map.det*c[1][3]*c[0][10]*map.g11;
    real G73_3_11_2 = map.det*c[1][3]*c[0][11]*map.g21;
    real G74_6_8_0 = map.det*c[1][6]*c[0][8]*map.g02;
    real G74_6_8_1 = map.det*c[1][6]*c[0][8]*map.g12;
    real G74_6_8_2 = map.det*c[1][6]*c[0][8]*map.g22;
    real G74_6_9_0 = map.det*c[1][6]*c[0][9]*map.g02;
    real G74_6_10_1 = map.det*c[1][6]*c[0][10]*map.g12;
    real G74_6_11_2 = map.det*c[1][6]*c[0][11]*map.g22;
    real G75_6_8_0 = map.det*c[1][6]*c[0][8]*map.g02;
    real G75_6_8_1 = map.det*c[1][6]*c[0][8]*map.g12;
    real G75_6_8_2 = map.det*c[1][6]*c[0][8]*map.g22;
    real G75_6_9_0 = map.det*c[1][6]*c[0][9]*map.g02;
    real G75_6_10_1 = map.det*c[1][6]*c[0][10]*map.g12;
    real G75_6_11_2 = map.det*c[1][6]*c[0][11]*map.g22;
    real G76_0_4_0 = map.det*c[0][4]*c[1][0]*map.g00;
    real G76_0_4_1 = map.det*c[0][4]*c[1][0]*map.g10;
    real G76_0_4_2 = map.det*c[0][4]*c[1][0]*map.g20;
    real G76_0_5_0 = map.det*c[0][5]*c[1][0]*map.g00;
    real G76_0_6_1 = map.det*c[0][6]*c[1][0]*map.g10;
    real G76_0_7_2 = map.det*c[0][7]*c[1][0]*map.g20;
    real G77_0_0_0 = map.det*c[0][0]*c[1][0]*map.g01;
    real G77_0_0_1 = map.det*c[0][0]*c[1][0]*map.g11;
    real G77_0_0_2 = map.det*c[0][0]*c[1][0]*map.g21;
    real G77_0_1_0 = map.det*c[0][1]*c[1][0]*map.g01;
    real G77_0_2_1 = map.det*c[0][2]*c[1][0]*map.g11;
    real G77_0_3_2 = map.det*c[0][3]*c[1][0]*map.g21;
    real G78_1_4_0 = map.det*c[0][4]*c[1][1]*map.g01;
    real G78_1_4_1 = map.det*c[0][4]*c[1][1]*map.g11;
    real G78_1_4_2 = map.det*c[0][4]*c[1][1]*map.g21;
    real G78_1_5_0 = map.det*c[0][5]*c[1][1]*map.g01;
    real G78_1_6_1 = map.det*c[0][6]*c[1][1]*map.g11;
    real G78_1_7_2 = map.det*c[0][7]*c[1][1]*map.g21;
    real G79_1_4_0 = map.det*c[0][4]*c[1][1]*map.g01;
    real G79_1_4_1 = map.det*c[0][4]*c[1][1]*map.g11;
    real G79_1_4_2 = map.det*c[0][4]*c[1][1]*map.g21;
    real G79_1_5_0 = map.det*c[0][5]*c[1][1]*map.g01;
    real G79_1_6_1 = map.det*c[0][6]*c[1][1]*map.g11;
    real G79_1_7_2 = map.det*c[0][7]*c[1][1]*map.g21;
    real G80_2_4_0 = map.det*c[0][4]*c[1][2]*map.g02;
    real G80_2_4_1 = map.det*c[0][4]*c[1][2]*map.g12;
    real G80_2_4_2 = map.det*c[0][4]*c[1][2]*map.g22;
    real G80_2_5_0 = map.det*c[0][5]*c[1][2]*map.g02;
    real G80_2_6_1 = map.det*c[0][6]*c[1][2]*map.g12;
    real G80_2_7_2 = map.det*c[0][7]*c[1][2]*map.g22;
    real G81_2_8_0 = map.det*c[0][8]*c[1][2]*map.g01;
    real G81_2_8_1 = map.det*c[0][8]*c[1][2]*map.g11;
    real G81_2_8_2 = map.det*c[0][8]*c[1][2]*map.g21;
    real G81_2_9_0 = map.det*c[0][9]*c[1][2]*map.g01;
    real G81_2_10_1 = map.det*c[0][10]*c[1][2]*map.g11;
    real G81_2_11_2 = map.det*c[0][11]*c[1][2]*map.g21;
    real G82_1_0_0 = map.det*c[1][1]*c[0][0]*map.g00;
    real G82_1_0_1 = map.det*c[1][1]*c[0][0]*map.g10;
    real G82_1_0_2 = map.det*c[1][1]*c[0][0]*map.g20;
    real G82_1_1_0 = map.det*c[1][1]*c[0][1]*map.g00;
    real G82_1_2_1 = map.det*c[1][1]*c[0][2]*map.g10;
    real G82_1_3_2 = map.det*c[1][1]*c[0][3]*map.g20;
    real G83_1_0_0 = map.det*c[1][1]*c[0][0]*map.g00;
    real G83_1_0_1 = map.det*c[1][1]*c[0][0]*map.g10;
    real G83_1_0_2 = map.det*c[1][1]*c[0][0]*map.g20;
    real G83_1_1_0 = map.det*c[1][1]*c[0][1]*map.g00;
    real G83_1_2_1 = map.det*c[1][1]*c[0][2]*map.g10;
    real G83_1_3_2 = map.det*c[1][1]*c[0][3]*map.g20;
    real G84_4_4_0 = map.det*c[1][4]*c[0][4]*map.g00;
    real G84_4_4_1 = map.det*c[1][4]*c[0][4]*map.g10;
    real G84_4_4_2 = map.det*c[1][4]*c[0][4]*map.g20;
    real G84_4_5_0 = map.det*c[1][4]*c[0][5]*map.g00;
    real G84_4_6_1 = map.det*c[1][4]*c[0][6]*map.g10;
    real G84_4_7_2 = map.det*c[1][4]*c[0][7]*map.g20;
    real G85_4_0_0 = map.det*c[1][4]*c[0][0]*map.g01;
    real G85_4_0_1 = map.det*c[1][4]*c[0][0]*map.g11;
    real G85_4_0_2 = map.det*c[1][4]*c[0][0]*map.g21;
    real G85_4_1_0 = map.det*c[1][4]*c[0][1]*map.g01;
    real G85_4_2_1 = map.det*c[1][4]*c[0][2]*map.g11;
    real G85_4_3_2 = map.det*c[1][4]*c[0][3]*map.g21;
    real G86_7_8_0 = map.det*c[1][7]*c[0][8]*map.g00;
    real G86_7_8_1 = map.det*c[1][7]*c[0][8]*map.g10;
    real G86_7_8_2 = map.det*c[1][7]*c[0][8]*map.g20;
    real G86_7_9_0 = map.det*c[1][7]*c[0][9]*map.g00;
    real G86_7_10_1 = map.det*c[1][7]*c[0][10]*map.g10;
    real G86_7_11_2 = map.det*c[1][7]*c[0][11]*map.g20;
    real G87_7_0_0 = map.det*c[1][7]*c[0][0]*map.g02;
    real G87_7_0_1 = map.det*c[1][7]*c[0][0]*map.g12;
    real G87_7_0_2 = map.det*c[1][7]*c[0][0]*map.g22;
    real G87_7_1_0 = map.det*c[1][7]*c[0][1]*map.g02;
    real G87_7_2_1 = map.det*c[1][7]*c[0][2]*map.g12;
    real G87_7_3_2 = map.det*c[1][7]*c[0][3]*map.g22;
    real G88_3_4_0 = map.det*c[0][4]*c[1][3]*map.g00;
    real G88_3_4_1 = map.det*c[0][4]*c[1][3]*map.g10;
    real G88_3_4_2 = map.det*c[0][4]*c[1][3]*map.g20;
    real G88_3_5_0 = map.det*c[0][5]*c[1][3]*map.g00;
    real G88_3_6_1 = map.det*c[0][6]*c[1][3]*map.g10;
    real G88_3_7_2 = map.det*c[0][7]*c[1][3]*map.g20;
    real G89_3_0_0 = map.det*c[0][0]*c[1][3]*map.g01;
    real G89_3_0_1 = map.det*c[0][0]*c[1][3]*map.g11;
    real G89_3_0_2 = map.det*c[0][0]*c[1][3]*map.g21;
    real G89_3_1_0 = map.det*c[0][1]*c[1][3]*map.g01;
    real G89_3_2_1 = map.det*c[0][2]*c[1][3]*map.g11;
    real G89_3_3_2 = map.det*c[0][3]*c[1][3]*map.g21;
    real G90_4_4_0 = map.det*c[0][4]*c[1][4]*map.g01 + map.det*c[1][4]*c[0][4]*map.g01;
    real G90_4_4_1 = map.det*c[0][4]*c[1][4]*map.g11 + map.det*c[1][4]*c[0][4]*map.g11;
    real G90_4_4_2 = map.det*c[0][4]*c[1][4]*map.g21 + map.det*c[1][4]*c[0][4]*map.g21;
    real G90_4_5_0 = map.det*c[0][5]*c[1][4]*map.g01 + map.det*c[1][4]*c[0][5]*map.g01;
    real G90_4_6_1 = map.det*c[0][6]*c[1][4]*map.g11 + map.det*c[1][4]*c[0][6]*map.g11;
    real G90_4_7_2 = map.det*c[0][7]*c[1][4]*map.g21 + map.det*c[1][4]*c[0][7]*map.g21;
    real G91_4_4_0 = map.det*c[0][4]*c[1][4]*map.g01 + map.det*c[1][4]*c[0][4]*map.g01;
    real G91_4_4_1 = map.det*c[0][4]*c[1][4]*map.g11 + map.det*c[1][4]*c[0][4]*map.g11;
    real G91_4_4_2 = map.det*c[0][4]*c[1][4]*map.g21 + map.det*c[1][4]*c[0][4]*map.g21;
    real G91_4_5_0 = map.det*c[0][5]*c[1][4]*map.g01 + map.det*c[1][4]*c[0][5]*map.g01;
    real G91_4_6_1 = map.det*c[0][6]*c[1][4]*map.g11 + map.det*c[1][4]*c[0][6]*map.g11;
    real G91_4_7_2 = map.det*c[0][7]*c[1][4]*map.g21 + map.det*c[1][4]*c[0][7]*map.g21;
    real G92_5_4_0 = map.det*c[0][4]*c[1][5]*map.g02;
    real G92_5_4_1 = map.det*c[0][4]*c[1][5]*map.g12;
    real G92_5_4_2 = map.det*c[0][4]*c[1][5]*map.g22;
    real G92_5_5_0 = map.det*c[0][5]*c[1][5]*map.g02;
    real G92_5_6_1 = map.det*c[0][6]*c[1][5]*map.g12;
    real G92_5_7_2 = map.det*c[0][7]*c[1][5]*map.g22;
    real G93_5_8_0 = map.det*c[0][8]*c[1][5]*map.g01;
    real G93_5_8_1 = map.det*c[0][8]*c[1][5]*map.g11;
    real G93_5_8_2 = map.det*c[0][8]*c[1][5]*map.g21;
    real G93_5_9_0 = map.det*c[0][9]*c[1][5]*map.g01;
    real G93_5_10_1 = map.det*c[0][10]*c[1][5]*map.g11;
    real G93_5_11_2 = map.det*c[0][11]*c[1][5]*map.g21;
    real G94_1_0_0 = map.det*c[1][1]*c[0][0]*map.g01;
    real G94_1_0_1 = map.det*c[1][1]*c[0][0]*map.g11;
    real G94_1_0_2 = map.det*c[1][1]*c[0][0]*map.g21;
    real G94_1_1_0 = map.det*c[1][1]*c[0][1]*map.g01;
    real G94_1_2_1 = map.det*c[1][1]*c[0][2]*map.g11;
    real G94_1_3_2 = map.det*c[1][1]*c[0][3]*map.g21;
    real G95_1_4_0 = map.det*c[1][1]*c[0][4]*map.g00;
    real G95_1_4_1 = map.det*c[1][1]*c[0][4]*map.g10;
    real G95_1_4_2 = map.det*c[1][1]*c[0][4]*map.g20;
    real G95_1_5_0 = map.det*c[1][1]*c[0][5]*map.g00;
    real G95_1_6_1 = map.det*c[1][1]*c[0][6]*map.g10;
    real G95_1_7_2 = map.det*c[1][1]*c[0][7]*map.g20;
    real G96_7_8_0 = map.det*c[1][7]*c[0][8]*map.g01;
    real G96_7_8_1 = map.det*c[1][7]*c[0][8]*map.g11;
    real G96_7_8_2 = map.det*c[1][7]*c[0][8]*map.g21;
    real G96_7_9_0 = map.det*c[1][7]*c[0][9]*map.g01;
    real G96_7_10_1 = map.det*c[1][7]*c[0][10]*map.g11;
    real G96_7_11_2 = map.det*c[1][7]*c[0][11]*map.g21;
    real G97_7_4_0 = map.det*c[1][7]*c[0][4]*map.g02;
    real G97_7_4_1 = map.det*c[1][7]*c[0][4]*map.g12;
    real G97_7_4_2 = map.det*c[1][7]*c[0][4]*map.g22;
    real G97_7_5_0 = map.det*c[1][7]*c[0][5]*map.g02;
    real G97_7_6_1 = map.det*c[1][7]*c[0][6]*map.g12;
    real G97_7_7_2 = map.det*c[1][7]*c[0][7]*map.g22;
    real G98_6_4_0 = map.det*c[0][4]*c[1][6]*map.g00;
    real G98_6_4_1 = map.det*c[0][4]*c[1][6]*map.g10;
    real G98_6_4_2 = map.det*c[0][4]*c[1][6]*map.g20;
    real G98_6_5_0 = map.det*c[0][5]*c[1][6]*map.g00;
    real G98_6_6_1 = map.det*c[0][6]*c[1][6]*map.g10;
    real G98_6_7_2 = map.det*c[0][7]*c[1][6]*map.g20;
    real G99_6_0_0 = map.det*c[0][0]*c[1][6]*map.g01;
    real G99_6_0_1 = map.det*c[0][0]*c[1][6]*map.g11;
    real G99_6_0_2 = map.det*c[0][0]*c[1][6]*map.g21;
    real G99_6_1_0 = map.det*c[0][1]*c[1][6]*map.g01;
    real G99_6_2_1 = map.det*c[0][2]*c[1][6]*map.g11;
    real G99_6_3_2 = map.det*c[0][3]*c[1][6]*map.g21;
    real G100_7_4_0 = map.det*c[0][4]*c[1][7]*map.g01;
    real G100_7_4_1 = map.det*c[0][4]*c[1][7]*map.g11;
    real G100_7_4_2 = map.det*c[0][4]*c[1][7]*map.g21;
    real G100_7_5_0 = map.det*c[0][5]*c[1][7]*map.g01;
    real G100_7_6_1 = map.det*c[0][6]*c[1][7]*map.g11;
    real G100_7_7_2 = map.det*c[0][7]*c[1][7]*map.g21;
    real G101_7_4_0 = map.det*c[0][4]*c[1][7]*map.g01;
    real G101_7_4_1 = map.det*c[0][4]*c[1][7]*map.g11;
    real G101_7_4_2 = map.det*c[0][4]*c[1][7]*map.g21;
    real G101_7_5_0 = map.det*c[0][5]*c[1][7]*map.g01;
    real G101_7_6_1 = map.det*c[0][6]*c[1][7]*map.g11;
    real G101_7_7_2 = map.det*c[0][7]*c[1][7]*map.g21;
    real G102_8_4_0 = map.det*c[0][4]*c[1][8]*map.g02;
    real G102_8_4_1 = map.det*c[0][4]*c[1][8]*map.g12;
    real G102_8_4_2 = map.det*c[0][4]*c[1][8]*map.g22;
    real G102_8_5_0 = map.det*c[0][5]*c[1][8]*map.g02;
    real G102_8_6_1 = map.det*c[0][6]*c[1][8]*map.g12;
    real G102_8_7_2 = map.det*c[0][7]*c[1][8]*map.g22;
    real G103_8_8_0 = map.det*c[0][8]*c[1][8]*map.g01;
    real G103_8_8_1 = map.det*c[0][8]*c[1][8]*map.g11;
    real G103_8_8_2 = map.det*c[0][8]*c[1][8]*map.g21;
    real G103_8_9_0 = map.det*c[0][9]*c[1][8]*map.g01;
    real G103_8_10_1 = map.det*c[0][10]*c[1][8]*map.g11;
    real G103_8_11_2 = map.det*c[0][11]*c[1][8]*map.g21;
    real G104_1_0_0 = map.det*c[1][1]*c[0][0]*map.g02;
    real G104_1_0_1 = map.det*c[1][1]*c[0][0]*map.g12;
    real G104_1_0_2 = map.det*c[1][1]*c[0][0]*map.g22;
    real G104_1_1_0 = map.det*c[1][1]*c[0][1]*map.g02;
    real G104_1_2_1 = map.det*c[1][1]*c[0][2]*map.g12;
    real G104_1_3_2 = map.det*c[1][1]*c[0][3]*map.g22;
    real G105_1_8_0 = map.det*c[1][1]*c[0][8]*map.g00;
    real G105_1_8_1 = map.det*c[1][1]*c[0][8]*map.g10;
    real G105_1_8_2 = map.det*c[1][1]*c[0][8]*map.g20;
    real G105_1_9_0 = map.det*c[1][1]*c[0][9]*map.g00;
    real G105_1_10_1 = map.det*c[1][1]*c[0][10]*map.g10;
    real G105_1_11_2 = map.det*c[1][1]*c[0][11]*map.g20;
    real G106_4_4_0 = map.det*c[1][4]*c[0][4]*map.g02;
    real G106_4_4_1 = map.det*c[1][4]*c[0][4]*map.g12;
    real G106_4_4_2 = map.det*c[1][4]*c[0][4]*map.g22;
    real G106_4_5_0 = map.det*c[1][4]*c[0][5]*map.g02;
    real G106_4_6_1 = map.det*c[1][4]*c[0][6]*map.g12;
    real G106_4_7_2 = map.det*c[1][4]*c[0][7]*map.g22;
    real G107_4_8_0 = map.det*c[1][4]*c[0][8]*map.g01;
    real G107_4_8_1 = map.det*c[1][4]*c[0][8]*map.g11;
    real G107_4_8_2 = map.det*c[1][4]*c[0][8]*map.g21;
    real G107_4_9_0 = map.det*c[1][4]*c[0][9]*map.g01;
    real G107_4_10_1 = map.det*c[1][4]*c[0][10]*map.g11;
    real G107_4_11_2 = map.det*c[1][4]*c[0][11]*map.g21;
    real G108_7_8_0 = map.det*c[1][7]*c[0][8]*map.g02;
    real G108_7_8_1 = map.det*c[1][7]*c[0][8]*map.g12;
    real G108_7_8_2 = map.det*c[1][7]*c[0][8]*map.g22;
    real G108_7_9_0 = map.det*c[1][7]*c[0][9]*map.g02;
    real G108_7_10_1 = map.det*c[1][7]*c[0][10]*map.g12;
    real G108_7_11_2 = map.det*c[1][7]*c[0][11]*map.g22;
    real G109_7_8_0 = map.det*c[1][7]*c[0][8]*map.g02;
    real G109_7_8_1 = map.det*c[1][7]*c[0][8]*map.g12;
    real G109_7_8_2 = map.det*c[1][7]*c[0][8]*map.g22;
    real G109_7_9_0 = map.det*c[1][7]*c[0][9]*map.g02;
    real G109_7_10_1 = map.det*c[1][7]*c[0][10]*map.g12;
    real G109_7_11_2 = map.det*c[1][7]*c[0][11]*map.g22;
    real G110_0_8_0 = map.det*c[0][8]*c[1][0]*map.g00;
    real G110_0_8_1 = map.det*c[0][8]*c[1][0]*map.g10;
    real G110_0_8_2 = map.det*c[0][8]*c[1][0]*map.g20;
    real G110_0_9_0 = map.det*c[0][9]*c[1][0]*map.g00;
    real G110_0_10_1 = map.det*c[0][10]*c[1][0]*map.g10;
    real G110_0_11_2 = map.det*c[0][11]*c[1][0]*map.g20;
    real G111_0_0_0 = map.det*c[0][0]*c[1][0]*map.g02;
    real G111_0_0_1 = map.det*c[0][0]*c[1][0]*map.g12;
    real G111_0_0_2 = map.det*c[0][0]*c[1][0]*map.g22;
    real G111_0_1_0 = map.det*c[0][1]*c[1][0]*map.g02;
    real G111_0_2_1 = map.det*c[0][2]*c[1][0]*map.g12;
    real G111_0_3_2 = map.det*c[0][3]*c[1][0]*map.g22;
    real G112_1_8_0 = map.det*c[0][8]*c[1][1]*map.g01;
    real G112_1_8_1 = map.det*c[0][8]*c[1][1]*map.g11;
    real G112_1_8_2 = map.det*c[0][8]*c[1][1]*map.g21;
    real G112_1_9_0 = map.det*c[0][9]*c[1][1]*map.g01;
    real G112_1_10_1 = map.det*c[0][10]*c[1][1]*map.g11;
    real G112_1_11_2 = map.det*c[0][11]*c[1][1]*map.g21;
    real G113_1_4_0 = map.det*c[0][4]*c[1][1]*map.g02;
    real G113_1_4_1 = map.det*c[0][4]*c[1][1]*map.g12;
    real G113_1_4_2 = map.det*c[0][4]*c[1][1]*map.g22;
    real G113_1_5_0 = map.det*c[0][5]*c[1][1]*map.g02;
    real G113_1_6_1 = map.det*c[0][6]*c[1][1]*map.g12;
    real G113_1_7_2 = map.det*c[0][7]*c[1][1]*map.g22;
    real G114_2_8_0 = map.det*c[0][8]*c[1][2]*map.g02;
    real G114_2_8_1 = map.det*c[0][8]*c[1][2]*map.g12;
    real G114_2_8_2 = map.det*c[0][8]*c[1][2]*map.g22;
    real G114_2_9_0 = map.det*c[0][9]*c[1][2]*map.g02;
    real G114_2_10_1 = map.det*c[0][10]*c[1][2]*map.g12;
    real G114_2_11_2 = map.det*c[0][11]*c[1][2]*map.g22;
    real G115_2_8_0 = map.det*c[0][8]*c[1][2]*map.g02;
    real G115_2_8_1 = map.det*c[0][8]*c[1][2]*map.g12;
    real G115_2_8_2 = map.det*c[0][8]*c[1][2]*map.g22;
    real G115_2_9_0 = map.det*c[0][9]*c[1][2]*map.g02;
    real G115_2_10_1 = map.det*c[0][10]*c[1][2]*map.g12;
    real G115_2_11_2 = map.det*c[0][11]*c[1][2]*map.g22;
    real G116_2_0_0 = map.det*c[1][2]*c[0][0]*map.g00;
    real G116_2_0_1 = map.det*c[1][2]*c[0][0]*map.g10;
    real G116_2_0_2 = map.det*c[1][2]*c[0][0]*map.g20;
    real G116_2_1_0 = map.det*c[1][2]*c[0][1]*map.g00;
    real G116_2_2_1 = map.det*c[1][2]*c[0][2]*map.g10;
    real G116_2_3_2 = map.det*c[1][2]*c[0][3]*map.g20;
    real G117_2_0_0 = map.det*c[1][2]*c[0][0]*map.g00;
    real G117_2_0_1 = map.det*c[1][2]*c[0][0]*map.g10;
    real G117_2_0_2 = map.det*c[1][2]*c[0][0]*map.g20;
    real G117_2_1_0 = map.det*c[1][2]*c[0][1]*map.g00;
    real G117_2_2_1 = map.det*c[1][2]*c[0][2]*map.g10;
    real G117_2_3_2 = map.det*c[1][2]*c[0][3]*map.g20;
    real G118_5_4_0 = map.det*c[1][5]*c[0][4]*map.g00;
    real G118_5_4_1 = map.det*c[1][5]*c[0][4]*map.g10;
    real G118_5_4_2 = map.det*c[1][5]*c[0][4]*map.g20;
    real G118_5_5_0 = map.det*c[1][5]*c[0][5]*map.g00;
    real G118_5_6_1 = map.det*c[1][5]*c[0][6]*map.g10;
    real G118_5_7_2 = map.det*c[1][5]*c[0][7]*map.g20;
    real G119_5_0_0 = map.det*c[1][5]*c[0][0]*map.g01;
    real G119_5_0_1 = map.det*c[1][5]*c[0][0]*map.g11;
    real G119_5_0_2 = map.det*c[1][5]*c[0][0]*map.g21;
    real G119_5_1_0 = map.det*c[1][5]*c[0][1]*map.g01;
    real G119_5_2_1 = map.det*c[1][5]*c[0][2]*map.g11;
    real G119_5_3_2 = map.det*c[1][5]*c[0][3]*map.g21;
    real G120_8_8_0 = map.det*c[1][8]*c[0][8]*map.g00;
    real G120_8_8_1 = map.det*c[1][8]*c[0][8]*map.g10;
    real G120_8_8_2 = map.det*c[1][8]*c[0][8]*map.g20;
    real G120_8_9_0 = map.det*c[1][8]*c[0][9]*map.g00;
    real G120_8_10_1 = map.det*c[1][8]*c[0][10]*map.g10;
    real G120_8_11_2 = map.det*c[1][8]*c[0][11]*map.g20;
    real G121_8_0_0 = map.det*c[1][8]*c[0][0]*map.g02;
    real G121_8_0_1 = map.det*c[1][8]*c[0][0]*map.g12;
    real G121_8_0_2 = map.det*c[1][8]*c[0][0]*map.g22;
    real G121_8_1_0 = map.det*c[1][8]*c[0][1]*map.g02;
    real G121_8_2_1 = map.det*c[1][8]*c[0][2]*map.g12;
    real G121_8_3_2 = map.det*c[1][8]*c[0][3]*map.g22;
    real G122_3_8_0 = map.det*c[0][8]*c[1][3]*map.g00;
    real G122_3_8_1 = map.det*c[0][8]*c[1][3]*map.g10;
    real G122_3_8_2 = map.det*c[0][8]*c[1][3]*map.g20;
    real G122_3_9_0 = map.det*c[0][9]*c[1][3]*map.g00;
    real G122_3_10_1 = map.det*c[0][10]*c[1][3]*map.g10;
    real G122_3_11_2 = map.det*c[0][11]*c[1][3]*map.g20;
    real G123_3_0_0 = map.det*c[0][0]*c[1][3]*map.g02;
    real G123_3_0_1 = map.det*c[0][0]*c[1][3]*map.g12;
    real G123_3_0_2 = map.det*c[0][0]*c[1][3]*map.g22;
    real G123_3_1_0 = map.det*c[0][1]*c[1][3]*map.g02;
    real G123_3_2_1 = map.det*c[0][2]*c[1][3]*map.g12;
    real G123_3_3_2 = map.det*c[0][3]*c[1][3]*map.g22;
    real G124_4_8_0 = map.det*c[0][8]*c[1][4]*map.g01;
    real G124_4_8_1 = map.det*c[0][8]*c[1][4]*map.g11;
    real G124_4_8_2 = map.det*c[0][8]*c[1][4]*map.g21;
    real G124_4_9_0 = map.det*c[0][9]*c[1][4]*map.g01;
    real G124_4_10_1 = map.det*c[0][10]*c[1][4]*map.g11;
    real G124_4_11_2 = map.det*c[0][11]*c[1][4]*map.g21;
    real G125_4_4_0 = map.det*c[0][4]*c[1][4]*map.g02;
    real G125_4_4_1 = map.det*c[0][4]*c[1][4]*map.g12;
    real G125_4_4_2 = map.det*c[0][4]*c[1][4]*map.g22;
    real G125_4_5_0 = map.det*c[0][5]*c[1][4]*map.g02;
    real G125_4_6_1 = map.det*c[0][6]*c[1][4]*map.g12;
    real G125_4_7_2 = map.det*c[0][7]*c[1][4]*map.g22;
    real G126_5_8_0 = map.det*c[0][8]*c[1][5]*map.g02;
    real G126_5_8_1 = map.det*c[0][8]*c[1][5]*map.g12;
    real G126_5_8_2 = map.det*c[0][8]*c[1][5]*map.g22;
    real G126_5_9_0 = map.det*c[0][9]*c[1][5]*map.g02;
    real G126_5_10_1 = map.det*c[0][10]*c[1][5]*map.g12;
    real G126_5_11_2 = map.det*c[0][11]*c[1][5]*map.g22;
    real G127_5_8_0 = map.det*c[0][8]*c[1][5]*map.g02;
    real G127_5_8_1 = map.det*c[0][8]*c[1][5]*map.g12;
    real G127_5_8_2 = map.det*c[0][8]*c[1][5]*map.g22;
    real G127_5_9_0 = map.det*c[0][9]*c[1][5]*map.g02;
    real G127_5_10_1 = map.det*c[0][10]*c[1][5]*map.g12;
    real G127_5_11_2 = map.det*c[0][11]*c[1][5]*map.g22;
    real G128_2_0_0 = map.det*c[1][2]*c[0][0]*map.g01;
    real G128_2_0_1 = map.det*c[1][2]*c[0][0]*map.g11;
    real G128_2_0_2 = map.det*c[1][2]*c[0][0]*map.g21;
    real G128_2_1_0 = map.det*c[1][2]*c[0][1]*map.g01;
    real G128_2_2_1 = map.det*c[1][2]*c[0][2]*map.g11;
    real G128_2_3_2 = map.det*c[1][2]*c[0][3]*map.g21;
    real G129_2_4_0 = map.det*c[1][2]*c[0][4]*map.g00;
    real G129_2_4_1 = map.det*c[1][2]*c[0][4]*map.g10;
    real G129_2_4_2 = map.det*c[1][2]*c[0][4]*map.g20;
    real G129_2_5_0 = map.det*c[1][2]*c[0][5]*map.g00;
    real G129_2_6_1 = map.det*c[1][2]*c[0][6]*map.g10;
    real G129_2_7_2 = map.det*c[1][2]*c[0][7]*map.g20;
    real G130_5_4_0 = map.det*c[1][5]*c[0][4]*map.g01;
    real G130_5_4_1 = map.det*c[1][5]*c[0][4]*map.g11;
    real G130_5_4_2 = map.det*c[1][5]*c[0][4]*map.g21;
    real G130_5_5_0 = map.det*c[1][5]*c[0][5]*map.g01;
    real G130_5_6_1 = map.det*c[1][5]*c[0][6]*map.g11;
    real G130_5_7_2 = map.det*c[1][5]*c[0][7]*map.g21;
    real G131_5_4_0 = map.det*c[1][5]*c[0][4]*map.g01;
    real G131_5_4_1 = map.det*c[1][5]*c[0][4]*map.g11;
    real G131_5_4_2 = map.det*c[1][5]*c[0][4]*map.g21;
    real G131_5_5_0 = map.det*c[1][5]*c[0][5]*map.g01;
    real G131_5_6_1 = map.det*c[1][5]*c[0][6]*map.g11;
    real G131_5_7_2 = map.det*c[1][5]*c[0][7]*map.g21;
    real G132_8_8_0 = map.det*c[1][8]*c[0][8]*map.g01;
    real G132_8_8_1 = map.det*c[1][8]*c[0][8]*map.g11;
    real G132_8_8_2 = map.det*c[1][8]*c[0][8]*map.g21;
    real G132_8_9_0 = map.det*c[1][8]*c[0][9]*map.g01;
    real G132_8_10_1 = map.det*c[1][8]*c[0][10]*map.g11;
    real G132_8_11_2 = map.det*c[1][8]*c[0][11]*map.g21;
    real G133_8_4_0 = map.det*c[1][8]*c[0][4]*map.g02;
    real G133_8_4_1 = map.det*c[1][8]*c[0][4]*map.g12;
    real G133_8_4_2 = map.det*c[1][8]*c[0][4]*map.g22;
    real G133_8_5_0 = map.det*c[1][8]*c[0][5]*map.g02;
    real G133_8_6_1 = map.det*c[1][8]*c[0][6]*map.g12;
    real G133_8_7_2 = map.det*c[1][8]*c[0][7]*map.g22;
    real G134_6_8_0 = map.det*c[0][8]*c[1][6]*map.g00;
    real G134_6_8_1 = map.det*c[0][8]*c[1][6]*map.g10;
    real G134_6_8_2 = map.det*c[0][8]*c[1][6]*map.g20;
    real G134_6_9_0 = map.det*c[0][9]*c[1][6]*map.g00;
    real G134_6_10_1 = map.det*c[0][10]*c[1][6]*map.g10;
    real G134_6_11_2 = map.det*c[0][11]*c[1][6]*map.g20;
    real G135_6_0_0 = map.det*c[0][0]*c[1][6]*map.g02;
    real G135_6_0_1 = map.det*c[0][0]*c[1][6]*map.g12;
    real G135_6_0_2 = map.det*c[0][0]*c[1][6]*map.g22;
    real G135_6_1_0 = map.det*c[0][1]*c[1][6]*map.g02;
    real G135_6_2_1 = map.det*c[0][2]*c[1][6]*map.g12;
    real G135_6_3_2 = map.det*c[0][3]*c[1][6]*map.g22;
    real G136_7_8_0 = map.det*c[0][8]*c[1][7]*map.g01;
    real G136_7_8_1 = map.det*c[0][8]*c[1][7]*map.g11;
    real G136_7_8_2 = map.det*c[0][8]*c[1][7]*map.g21;
    real G136_7_9_0 = map.det*c[0][9]*c[1][7]*map.g01;
    real G136_7_10_1 = map.det*c[0][10]*c[1][7]*map.g11;
    real G136_7_11_2 = map.det*c[0][11]*c[1][7]*map.g21;
    real G137_7_4_0 = map.det*c[0][4]*c[1][7]*map.g02;
    real G137_7_4_1 = map.det*c[0][4]*c[1][7]*map.g12;
    real G137_7_4_2 = map.det*c[0][4]*c[1][7]*map.g22;
    real G137_7_5_0 = map.det*c[0][5]*c[1][7]*map.g02;
    real G137_7_6_1 = map.det*c[0][6]*c[1][7]*map.g12;
    real G137_7_7_2 = map.det*c[0][7]*c[1][7]*map.g22;
    real G138_8_8_0 = map.det*c[0][8]*c[1][8]*map.g02 + map.det*c[1][8]*c[0][8]*map.g02;
    real G138_8_8_1 = map.det*c[0][8]*c[1][8]*map.g12 + map.det*c[1][8]*c[0][8]*map.g12;
    real G138_8_8_2 = map.det*c[0][8]*c[1][8]*map.g22 + map.det*c[1][8]*c[0][8]*map.g22;
    real G138_8_9_0 = map.det*c[0][9]*c[1][8]*map.g02 + map.det*c[1][8]*c[0][9]*map.g02;
    real G138_8_10_1 = map.det*c[0][10]*c[1][8]*map.g12 + map.det*c[1][8]*c[0][10]*map.g12;
    real G138_8_11_2 = map.det*c[0][11]*c[1][8]*map.g22 + map.det*c[1][8]*c[0][11]*map.g22;
    real G139_8_8_0 = map.det*c[0][8]*c[1][8]*map.g02 + map.det*c[1][8]*c[0][8]*map.g02;
    real G139_8_8_1 = map.det*c[0][8]*c[1][8]*map.g12 + map.det*c[1][8]*c[0][8]*map.g12;
    real G139_8_8_2 = map.det*c[0][8]*c[1][8]*map.g22 + map.det*c[1][8]*c[0][8]*map.g22;
    real G139_8_9_0 = map.det*c[0][9]*c[1][8]*map.g02 + map.det*c[1][8]*c[0][9]*map.g02;
    real G139_8_10_1 = map.det*c[0][10]*c[1][8]*map.g12 + map.det*c[1][8]*c[0][10]*map.g12;
    real G139_8_11_2 = map.det*c[0][11]*c[1][8]*map.g22 + map.det*c[1][8]*c[0][11]*map.g22;
    real G140_2_0_0 = map.det*c[1][2]*c[0][0]*map.g02;
    real G140_2_0_1 = map.det*c[1][2]*c[0][0]*map.g12;
    real G140_2_0_2 = map.det*c[1][2]*c[0][0]*map.g22;
    real G140_2_1_0 = map.det*c[1][2]*c[0][1]*map.g02;
    real G140_2_2_1 = map.det*c[1][2]*c[0][2]*map.g12;
    real G140_2_3_2 = map.det*c[1][2]*c[0][3]*map.g22;
    real G141_2_8_0 = map.det*c[1][2]*c[0][8]*map.g00;
    real G141_2_8_1 = map.det*c[1][2]*c[0][8]*map.g10;
    real G141_2_8_2 = map.det*c[1][2]*c[0][8]*map.g20;
    real G141_2_9_0 = map.det*c[1][2]*c[0][9]*map.g00;
    real G141_2_10_1 = map.det*c[1][2]*c[0][10]*map.g10;
    real G141_2_11_2 = map.det*c[1][2]*c[0][11]*map.g20;
    real G142_5_4_0 = map.det*c[1][5]*c[0][4]*map.g02;
    real G142_5_4_1 = map.det*c[1][5]*c[0][4]*map.g12;
    real G142_5_4_2 = map.det*c[1][5]*c[0][4]*map.g22;
    real G142_5_5_0 = map.det*c[1][5]*c[0][5]*map.g02;
    real G142_5_6_1 = map.det*c[1][5]*c[0][6]*map.g12;
    real G142_5_7_2 = map.det*c[1][5]*c[0][7]*map.g22;
    real G143_5_8_0 = map.det*c[1][5]*c[0][8]*map.g01;
    real G143_5_8_1 = map.det*c[1][5]*c[0][8]*map.g11;
    real G143_5_8_2 = map.det*c[1][5]*c[0][8]*map.g21;
    real G143_5_9_0 = map.det*c[1][5]*c[0][9]*map.g01;
    real G143_5_10_1 = map.det*c[1][5]*c[0][10]*map.g11;
    real G143_5_11_2 = map.det*c[1][5]*c[0][11]*map.g21;

    // Compute element tensor
    block[0] = -1.666666666666664e-01*G0_0_0 - 1.666666666666665e-01*G0_0_1 - 1.666666666666664e-01*G0_0_2 + 1.666666666666664e-01*G0_1_0 + 1.666666666666665e-01*G0_2_1 + 1.666666666666665e-01*G0_3_2 - 8.333333333333322e-02*G1_0_0 - 8.333333333333323e-02*G1_0_1 - 8.333333333333322e-02*G1_0_2 + 8.333333333333322e-02*G1_1_0 + 8.333333333333323e-02*G1_2_1 + 8.333333333333323e-02*G1_3_2 - 8.333333333333322e-02*G2_4_0 - 8.333333333333323e-02*G2_4_1 - 8.333333333333323e-02*G2_4_2 + 8.333333333333322e-02*G2_5_0 + 8.333333333333323e-02*G2_6_1 + 8.333333333333323e-02*G2_7_2 - 8.333333333333322e-02*G3_8_0 - 8.333333333333323e-02*G3_8_1 - 8.333333333333323e-02*G3_8_2 + 8.333333333333322e-02*G3_9_0 + 8.333333333333323e-02*G3_10_1 + 8.333333333333323e-02*G3_11_2 - 8.333333333333322e-02*G42_0_0_0 - 8.333333333333323e-02*G42_0_0_1 - 8.333333333333322e-02*G42_0_0_2 + 8.333333333333322e-02*G42_0_1_0 + 8.333333333333323e-02*G42_0_2_1 + 8.333333333333323e-02*G42_0_3_2 + 8.333333333333322e-02*G43_0_0_0 + 8.333333333333323e-02*G43_0_0_1 + 8.333333333333322e-02*G43_0_0_2 - 8.333333333333322e-02*G43_0_1_0 - 8.333333333333323e-02*G43_0_2_1 - 8.333333333333323e-02*G43_0_3_2 - 8.333333333333322e-02*G44_1_0_0 - 8.333333333333323e-02*G44_1_0_1 - 8.333333333333322e-02*G44_1_0_2 + 8.333333333333322e-02*G44_1_1_0 + 8.333333333333323e-02*G44_1_2_1 + 8.333333333333323e-02*G44_1_3_2 + 8.333333333333322e-02*G45_1_4_0 + 8.333333333333323e-02*G45_1_4_1 + 8.333333333333323e-02*G45_1_4_2 - 8.333333333333322e-02*G45_1_5_0 - 8.333333333333323e-02*G45_1_6_1 - 8.333333333333323e-02*G45_1_7_2 - 8.333333333333322e-02*G46_2_0_0 - 8.333333333333323e-02*G46_2_0_1 - 8.333333333333322e-02*G46_2_0_2 + 8.333333333333322e-02*G46_2_1_0 + 8.333333333333323e-02*G46_2_2_1 + 8.333333333333323e-02*G46_2_3_2 + 8.333333333333322e-02*G47_2_8_0 + 8.333333333333323e-02*G47_2_8_1 + 8.333333333333323e-02*G47_2_8_2 - 8.333333333333322e-02*G47_2_9_0 - 8.333333333333323e-02*G47_2_10_1 - 8.333333333333323e-02*G47_2_11_2 + 8.333333333333322e-02*G48_3_4_0 + 8.333333333333323e-02*G48_3_4_1 + 8.333333333333323e-02*G48_3_4_2 - 8.333333333333322e-02*G48_3_5_0 - 8.333333333333323e-02*G48_3_6_1 - 8.333333333333323e-02*G48_3_7_2 - 8.333333333333322e-02*G49_3_0_0 - 8.333333333333323e-02*G49_3_0_1 - 8.333333333333322e-02*G49_3_0_2 + 8.333333333333322e-02*G49_3_1_0 + 8.333333333333323e-02*G49_3_2_1 + 8.333333333333323e-02*G49_3_3_2 + 8.333333333333322e-02*G50_6_8_0 + 8.333333333333323e-02*G50_6_8_1 + 8.333333333333323e-02*G50_6_8_2 - 8.333333333333322e-02*G50_6_9_0 - 8.333333333333323e-02*G50_6_10_1 - 8.333333333333323e-02*G50_6_11_2 - 8.333333333333322e-02*G51_6_0_0 - 8.333333333333323e-02*G51_6_0_1 - 8.333333333333322e-02*G51_6_0_2 + 8.333333333333322e-02*G51_6_1_0 + 8.333333333333323e-02*G51_6_2_1 + 8.333333333333323e-02*G51_6_3_2;
    block[1] = -1.666666666666664e-01*G14_4_0 - 1.666666666666665e-01*G14_4_1 - 1.666666666666665e-01*G14_4_2 + 1.666666666666664e-01*G14_5_0 + 1.666666666666665e-01*G14_6_1 + 1.666666666666665e-01*G14_7_2 - 1.666666666666664e-01*G15_0_0 - 1.666666666666665e-01*G15_0_1 - 1.666666666666664e-01*G15_0_2 + 1.666666666666664e-01*G15_1_0 + 1.666666666666665e-01*G15_2_1 + 1.666666666666665e-01*G15_3_2 - 8.333333333333322e-02*G76_0_4_0 - 8.333333333333323e-02*G76_0_4_1 - 8.333333333333323e-02*G76_0_4_2 + 8.333333333333322e-02*G76_0_5_0 + 8.333333333333323e-02*G76_0_6_1 + 8.333333333333323e-02*G76_0_7_2 + 8.333333333333322e-02*G77_0_0_0 + 8.333333333333323e-02*G77_0_0_1 + 8.333333333333322e-02*G77_0_0_2 - 8.333333333333322e-02*G77_0_1_0 - 8.333333333333323e-02*G77_0_2_1 - 8.333333333333323e-02*G77_0_3_2 - 8.333333333333322e-02*G78_1_4_0 - 8.333333333333323e-02*G78_1_4_1 - 8.333333333333323e-02*G78_1_4_2 + 8.333333333333322e-02*G78_1_5_0 + 8.333333333333323e-02*G78_1_6_1 + 8.333333333333323e-02*G78_1_7_2 + 8.333333333333322e-02*G79_1_4_0 + 8.333333333333323e-02*G79_1_4_1 + 8.333333333333323e-02*G79_1_4_2 - 8.333333333333322e-02*G79_1_5_0 - 8.333333333333323e-02*G79_1_6_1 - 8.333333333333323e-02*G79_1_7_2 - 8.333333333333322e-02*G80_2_4_0 - 8.333333333333323e-02*G80_2_4_1 - 8.333333333333323e-02*G80_2_4_2 + 8.333333333333322e-02*G80_2_5_0 + 8.333333333333323e-02*G80_2_6_1 + 8.333333333333323e-02*G80_2_7_2 + 8.333333333333322e-02*G81_2_8_0 + 8.333333333333323e-02*G81_2_8_1 + 8.333333333333323e-02*G81_2_8_2 - 8.333333333333322e-02*G81_2_9_0 - 8.333333333333323e-02*G81_2_10_1 - 8.333333333333323e-02*G81_2_11_2 + 8.333333333333322e-02*G82_1_0_0 + 8.333333333333323e-02*G82_1_0_1 + 8.333333333333322e-02*G82_1_0_2 - 8.333333333333322e-02*G82_1_1_0 - 8.333333333333323e-02*G82_1_2_1 - 8.333333333333323e-02*G82_1_3_2 - 8.333333333333322e-02*G83_1_0_0 - 8.333333333333323e-02*G83_1_0_1 - 8.333333333333322e-02*G83_1_0_2 + 8.333333333333322e-02*G83_1_1_0 + 8.333333333333323e-02*G83_1_2_1 + 8.333333333333323e-02*G83_1_3_2 + 8.333333333333322e-02*G84_4_4_0 + 8.333333333333323e-02*G84_4_4_1 + 8.333333333333323e-02*G84_4_4_2 - 8.333333333333322e-02*G84_4_5_0 - 8.333333333333323e-02*G84_4_6_1 - 8.333333333333323e-02*G84_4_7_2 - 8.333333333333322e-02*G85_4_0_0 - 8.333333333333323e-02*G85_4_0_1 - 8.333333333333322e-02*G85_4_0_2 + 8.333333333333322e-02*G85_4_1_0 + 8.333333333333323e-02*G85_4_2_1 + 8.333333333333323e-02*G85_4_3_2 + 8.333333333333322e-02*G86_7_8_0 + 8.333333333333323e-02*G86_7_8_1 + 8.333333333333323e-02*G86_7_8_2 - 8.333333333333322e-02*G86_7_9_0 - 8.333333333333323e-02*G86_7_10_1 - 8.333333333333323e-02*G86_7_11_2 - 8.333333333333322e-02*G87_7_0_0 - 8.333333333333323e-02*G87_7_0_1 - 8.333333333333322e-02*G87_7_0_2 + 8.333333333333322e-02*G87_7_1_0 + 8.333333333333323e-02*G87_7_2_1 + 8.333333333333323e-02*G87_7_3_2;
    block[2] = -1.666666666666664e-01*G28_8_0 - 1.666666666666665e-01*G28_8_1 - 1.666666666666665e-01*G28_8_2 + 1.666666666666664e-01*G28_9_0 + 1.666666666666665e-01*G28_10_1 + 1.666666666666665e-01*G28_11_2 - 1.666666666666664e-01*G29_0_0 - 1.666666666666665e-01*G29_0_1 - 1.666666666666664e-01*G29_0_2 + 1.666666666666664e-01*G29_1_0 + 1.666666666666665e-01*G29_2_1 + 1.666666666666665e-01*G29_3_2 - 8.333333333333322e-02*G110_0_8_0 - 8.333333333333323e-02*G110_0_8_1 - 8.333333333333323e-02*G110_0_8_2 + 8.333333333333322e-02*G110_0_9_0 + 8.333333333333323e-02*G110_0_10_1 + 8.333333333333323e-02*G110_0_11_2 + 8.333333333333322e-02*G111_0_0_0 + 8.333333333333323e-02*G111_0_0_1 + 8.333333333333322e-02*G111_0_0_2 - 8.333333333333322e-02*G111_0_1_0 - 8.333333333333323e-02*G111_0_2_1 - 8.333333333333323e-02*G111_0_3_2 - 8.333333333333322e-02*G112_1_8_0 - 8.333333333333323e-02*G112_1_8_1 - 8.333333333333323e-02*G112_1_8_2 + 8.333333333333322e-02*G112_1_9_0 + 8.333333333333323e-02*G112_1_10_1 + 8.333333333333323e-02*G112_1_11_2 + 8.333333333333322e-02*G113_1_4_0 + 8.333333333333323e-02*G113_1_4_1 + 8.333333333333323e-02*G113_1_4_2 - 8.333333333333322e-02*G113_1_5_0 - 8.333333333333323e-02*G113_1_6_1 - 8.333333333333323e-02*G113_1_7_2 - 8.333333333333322e-02*G114_2_8_0 - 8.333333333333323e-02*G114_2_8_1 - 8.333333333333323e-02*G114_2_8_2 + 8.333333333333322e-02*G114_2_9_0 + 8.333333333333323e-02*G114_2_10_1 + 8.333333333333323e-02*G114_2_11_2 + 8.333333333333322e-02*G115_2_8_0 + 8.333333333333323e-02*G115_2_8_1 + 8.333333333333323e-02*G115_2_8_2 - 8.333333333333322e-02*G115_2_9_0 - 8.333333333333323e-02*G115_2_10_1 - 8.333333333333323e-02*G115_2_11_2 + 8.333333333333322e-02*G116_2_0_0 + 8.333333333333323e-02*G116_2_0_1 + 8.333333333333322e-02*G116_2_0_2 - 8.333333333333322e-02*G116_2_1_0 - 8.333333333333323e-02*G116_2_2_1 - 8.333333333333323e-02*G116_2_3_2 - 8.333333333333322e-02*G117_2_0_0 - 8.333333333333323e-02*G117_2_0_1 - 8.333333333333322e-02*G117_2_0_2 + 8.333333333333322e-02*G117_2_1_0 + 8.333333333333323e-02*G117_2_2_1 + 8.333333333333323e-02*G117_2_3_2 + 8.333333333333322e-02*G118_5_4_0 + 8.333333333333323e-02*G118_5_4_1 + 8.333333333333323e-02*G118_5_4_2 - 8.333333333333322e-02*G118_5_5_0 - 8.333333333333323e-02*G118_5_6_1 - 8.333333333333323e-02*G118_5_7_2 - 8.333333333333322e-02*G119_5_0_0 - 8.333333333333323e-02*G119_5_0_1 - 8.333333333333322e-02*G119_5_0_2 + 8.333333333333322e-02*G119_5_1_0 + 8.333333333333323e-02*G119_5_2_1 + 8.333333333333323e-02*G119_5_3_2 + 8.333333333333322e-02*G120_8_8_0 + 8.333333333333323e-02*G120_8_8_1 + 8.333333333333323e-02*G120_8_8_2 - 8.333333333333322e-02*G120_8_9_0 - 8.333333333333323e-02*G120_8_10_1 - 8.333333333333323e-02*G120_8_11_2 - 8.333333333333322e-02*G121_8_0_0 - 8.333333333333323e-02*G121_8_0_1 - 8.333333333333322e-02*G121_8_0_2 + 8.333333333333322e-02*G121_8_1_0 + 8.333333333333323e-02*G121_8_2_1 + 8.333333333333323e-02*G121_8_3_2;
    block[3] = -1.666666666666664e-01*G4_0_0 - 1.666666666666665e-01*G4_0_1 - 1.666666666666664e-01*G4_0_2 + 1.666666666666664e-01*G4_1_0 + 1.666666666666665e-01*G4_2_1 + 1.666666666666665e-01*G4_3_2 - 1.666666666666664e-01*G5_4_0 - 1.666666666666665e-01*G5_4_1 - 1.666666666666665e-01*G5_4_2 + 1.666666666666664e-01*G5_5_0 + 1.666666666666665e-01*G5_6_1 + 1.666666666666665e-01*G5_7_2 - 8.333333333333322e-02*G52_3_0_0 - 8.333333333333323e-02*G52_3_0_1 - 8.333333333333322e-02*G52_3_0_2 + 8.333333333333322e-02*G52_3_1_0 + 8.333333333333323e-02*G52_3_2_1 + 8.333333333333323e-02*G52_3_3_2 + 8.333333333333322e-02*G53_3_0_0 + 8.333333333333323e-02*G53_3_0_1 + 8.333333333333322e-02*G53_3_0_2 - 8.333333333333322e-02*G53_3_1_0 - 8.333333333333323e-02*G53_3_2_1 - 8.333333333333323e-02*G53_3_3_2 - 8.333333333333322e-02*G54_4_0_0 - 8.333333333333323e-02*G54_4_0_1 - 8.333333333333322e-02*G54_4_0_2 + 8.333333333333322e-02*G54_4_1_0 + 8.333333333333323e-02*G54_4_2_1 + 8.333333333333323e-02*G54_4_3_2 + 8.333333333333322e-02*G55_4_4_0 + 8.333333333333323e-02*G55_4_4_1 + 8.333333333333323e-02*G55_4_4_2 - 8.333333333333322e-02*G55_4_5_0 - 8.333333333333323e-02*G55_4_6_1 - 8.333333333333323e-02*G55_4_7_2 - 8.333333333333322e-02*G56_5_0_0 - 8.333333333333323e-02*G56_5_0_1 - 8.333333333333322e-02*G56_5_0_2 + 8.333333333333322e-02*G56_5_1_0 + 8.333333333333323e-02*G56_5_2_1 + 8.333333333333323e-02*G56_5_3_2 + 8.333333333333322e-02*G57_5_8_0 + 8.333333333333323e-02*G57_5_8_1 + 8.333333333333323e-02*G57_5_8_2 - 8.333333333333322e-02*G57_5_9_0 - 8.333333333333323e-02*G57_5_10_1 - 8.333333333333323e-02*G57_5_11_2 + 8.333333333333322e-02*G58_0_0_0 + 8.333333333333323e-02*G58_0_0_1 + 8.333333333333322e-02*G58_0_0_2 - 8.333333333333322e-02*G58_0_1_0 - 8.333333333333323e-02*G58_0_2_1 - 8.333333333333323e-02*G58_0_3_2 - 8.333333333333322e-02*G59_0_4_0 - 8.333333333333323e-02*G59_0_4_1 - 8.333333333333323e-02*G59_0_4_2 + 8.333333333333322e-02*G59_0_5_0 + 8.333333333333323e-02*G59_0_6_1 + 8.333333333333323e-02*G59_0_7_2 + 8.333333333333322e-02*G60_3_4_0 + 8.333333333333323e-02*G60_3_4_1 + 8.333333333333323e-02*G60_3_4_2 - 8.333333333333322e-02*G60_3_5_0 - 8.333333333333323e-02*G60_3_6_1 - 8.333333333333323e-02*G60_3_7_2 - 8.333333333333322e-02*G61_3_4_0 - 8.333333333333323e-02*G61_3_4_1 - 8.333333333333323e-02*G61_3_4_2 + 8.333333333333322e-02*G61_3_5_0 + 8.333333333333323e-02*G61_3_6_1 + 8.333333333333323e-02*G61_3_7_2 + 8.333333333333322e-02*G62_6_8_0 + 8.333333333333323e-02*G62_6_8_1 + 8.333333333333323e-02*G62_6_8_2 - 8.333333333333322e-02*G62_6_9_0 - 8.333333333333323e-02*G62_6_10_1 - 8.333333333333323e-02*G62_6_11_2 - 8.333333333333322e-02*G63_6_4_0 - 8.333333333333323e-02*G63_6_4_1 - 8.333333333333323e-02*G63_6_4_2 + 8.333333333333322e-02*G63_6_5_0 + 8.333333333333323e-02*G63_6_6_1 + 8.333333333333323e-02*G63_6_7_2;
    block[4] = -1.666666666666664e-01*G19_4_0 - 1.666666666666665e-01*G19_4_1 - 1.666666666666665e-01*G19_4_2 + 1.666666666666664e-01*G19_5_0 + 1.666666666666665e-01*G19_6_1 + 1.666666666666665e-01*G19_7_2 - 8.333333333333322e-02*G20_0_0 - 8.333333333333323e-02*G20_0_1 - 8.333333333333322e-02*G20_0_2 + 8.333333333333322e-02*G20_1_0 + 8.333333333333323e-02*G20_2_1 + 8.333333333333323e-02*G20_3_2 - 8.333333333333322e-02*G21_4_0 - 8.333333333333323e-02*G21_4_1 - 8.333333333333323e-02*G21_4_2 + 8.333333333333322e-02*G21_5_0 + 8.333333333333323e-02*G21_6_1 + 8.333333333333323e-02*G21_7_2 - 8.333333333333322e-02*G22_8_0 - 8.333333333333323e-02*G22_8_1 - 8.333333333333323e-02*G22_8_2 + 8.333333333333322e-02*G22_9_0 + 8.333333333333323e-02*G22_10_1 + 8.333333333333323e-02*G22_11_2 - 8.333333333333322e-02*G88_3_4_0 - 8.333333333333323e-02*G88_3_4_1 - 8.333333333333323e-02*G88_3_4_2 + 8.333333333333322e-02*G88_3_5_0 + 8.333333333333323e-02*G88_3_6_1 + 8.333333333333323e-02*G88_3_7_2 + 8.333333333333322e-02*G89_3_0_0 + 8.333333333333323e-02*G89_3_0_1 + 8.333333333333322e-02*G89_3_0_2 - 8.333333333333322e-02*G89_3_1_0 - 8.333333333333323e-02*G89_3_2_1 - 8.333333333333323e-02*G89_3_3_2 - 8.333333333333322e-02*G90_4_4_0 - 8.333333333333323e-02*G90_4_4_1 - 8.333333333333323e-02*G90_4_4_2 + 8.333333333333322e-02*G90_4_5_0 + 8.333333333333323e-02*G90_4_6_1 + 8.333333333333323e-02*G90_4_7_2 + 8.333333333333322e-02*G91_4_4_0 + 8.333333333333323e-02*G91_4_4_1 + 8.333333333333323e-02*G91_4_4_2 - 8.333333333333322e-02*G91_4_5_0 - 8.333333333333323e-02*G91_4_6_1 - 8.333333333333323e-02*G91_4_7_2 - 8.333333333333322e-02*G92_5_4_0 - 8.333333333333323e-02*G92_5_4_1 - 8.333333333333323e-02*G92_5_4_2 + 8.333333333333322e-02*G92_5_5_0 + 8.333333333333323e-02*G92_5_6_1 + 8.333333333333323e-02*G92_5_7_2 + 8.333333333333322e-02*G93_5_8_0 + 8.333333333333323e-02*G93_5_8_1 + 8.333333333333323e-02*G93_5_8_2 - 8.333333333333322e-02*G93_5_9_0 - 8.333333333333323e-02*G93_5_10_1 - 8.333333333333323e-02*G93_5_11_2 + 8.333333333333322e-02*G94_1_0_0 + 8.333333333333323e-02*G94_1_0_1 + 8.333333333333322e-02*G94_1_0_2 - 8.333333333333322e-02*G94_1_1_0 - 8.333333333333323e-02*G94_1_2_1 - 8.333333333333323e-02*G94_1_3_2 - 8.333333333333322e-02*G95_1_4_0 - 8.333333333333323e-02*G95_1_4_1 - 8.333333333333323e-02*G95_1_4_2 + 8.333333333333322e-02*G95_1_5_0 + 8.333333333333323e-02*G95_1_6_1 + 8.333333333333323e-02*G95_1_7_2 + 8.333333333333322e-02*G96_7_8_0 + 8.333333333333323e-02*G96_7_8_1 + 8.333333333333323e-02*G96_7_8_2 - 8.333333333333322e-02*G96_7_9_0 - 8.333333333333323e-02*G96_7_10_1 - 8.333333333333323e-02*G96_7_11_2 - 8.333333333333322e-02*G97_7_4_0 - 8.333333333333323e-02*G97_7_4_1 - 8.333333333333323e-02*G97_7_4_2 + 8.333333333333322e-02*G97_7_5_0 + 8.333333333333323e-02*G97_7_6_1 + 8.333333333333323e-02*G97_7_7_2;
    block[5] = -1.666666666666664e-01*G33_8_0 - 1.666666666666665e-01*G33_8_1 - 1.666666666666665e-01*G33_8_2 + 1.666666666666664e-01*G33_9_0 + 1.666666666666665e-01*G33_10_1 + 1.666666666666665e-01*G33_11_2 - 1.666666666666664e-01*G34_4_0 - 1.666666666666665e-01*G34_4_1 - 1.666666666666665e-01*G34_4_2 + 1.666666666666664e-01*G34_5_0 + 1.666666666666665e-01*G34_6_1 + 1.666666666666665e-01*G34_7_2 - 8.333333333333322e-02*G122_3_8_0 - 8.333333333333323e-02*G122_3_8_1 - 8.333333333333323e-02*G122_3_8_2 + 8.333333333333322e-02*G122_3_9_0 + 8.333333333333323e-02*G122_3_10_1 + 8.333333333333323e-02*G122_3_11_2 + 8.333333333333322e-02*G123_3_0_0 + 8.333333333333323e-02*G123_3_0_1 + 8.333333333333322e-02*G123_3_0_2 - 8.333333333333322e-02*G123_3_1_0 - 8.333333333333323e-02*G123_3_2_1 - 8.333333333333323e-02*G123_3_3_2 - 8.333333333333322e-02*G124_4_8_0 - 8.333333333333323e-02*G124_4_8_1 - 8.333333333333323e-02*G124_4_8_2 + 8.333333333333322e-02*G124_4_9_0 + 8.333333333333323e-02*G124_4_10_1 + 8.333333333333323e-02*G124_4_11_2 + 8.333333333333322e-02*G125_4_4_0 + 8.333333333333323e-02*G125_4_4_1 + 8.333333333333323e-02*G125_4_4_2 - 8.333333333333322e-02*G125_4_5_0 - 8.333333333333323e-02*G125_4_6_1 - 8.333333333333323e-02*G125_4_7_2 - 8.333333333333322e-02*G126_5_8_0 - 8.333333333333323e-02*G126_5_8_1 - 8.333333333333323e-02*G126_5_8_2 + 8.333333333333322e-02*G126_5_9_0 + 8.333333333333323e-02*G126_5_10_1 + 8.333333333333323e-02*G126_5_11_2 + 8.333333333333322e-02*G127_5_8_0 + 8.333333333333323e-02*G127_5_8_1 + 8.333333333333323e-02*G127_5_8_2 - 8.333333333333322e-02*G127_5_9_0 - 8.333333333333323e-02*G127_5_10_1 - 8.333333333333323e-02*G127_5_11_2 + 8.333333333333322e-02*G128_2_0_0 + 8.333333333333323e-02*G128_2_0_1 + 8.333333333333322e-02*G128_2_0_2 - 8.333333333333322e-02*G128_2_1_0 - 8.333333333333323e-02*G128_2_2_1 - 8.333333333333323e-02*G128_2_3_2 - 8.333333333333322e-02*G129_2_4_0 - 8.333333333333323e-02*G129_2_4_1 - 8.333333333333323e-02*G129_2_4_2 + 8.333333333333322e-02*G129_2_5_0 + 8.333333333333323e-02*G129_2_6_1 + 8.333333333333323e-02*G129_2_7_2 + 8.333333333333322e-02*G130_5_4_0 + 8.333333333333323e-02*G130_5_4_1 + 8.333333333333323e-02*G130_5_4_2 - 8.333333333333322e-02*G130_5_5_0 - 8.333333333333323e-02*G130_5_6_1 - 8.333333333333323e-02*G130_5_7_2 - 8.333333333333322e-02*G131_5_4_0 - 8.333333333333323e-02*G131_5_4_1 - 8.333333333333323e-02*G131_5_4_2 + 8.333333333333322e-02*G131_5_5_0 + 8.333333333333323e-02*G131_5_6_1 + 8.333333333333323e-02*G131_5_7_2 + 8.333333333333322e-02*G132_8_8_0 + 8.333333333333323e-02*G132_8_8_1 + 8.333333333333323e-02*G132_8_8_2 - 8.333333333333322e-02*G132_8_9_0 - 8.333333333333323e-02*G132_8_10_1 - 8.333333333333323e-02*G132_8_11_2 - 8.333333333333322e-02*G133_8_4_0 - 8.333333333333323e-02*G133_8_4_1 - 8.333333333333323e-02*G133_8_4_2 + 8.333333333333322e-02*G133_8_5_0 + 8.333333333333323e-02*G133_8_6_1 + 8.333333333333323e-02*G133_8_7_2;
    block[6] = -1.666666666666664e-01*G9_0_0 - 1.666666666666665e-01*G9_0_1 - 1.666666666666664e-01*G9_0_2 + 1.666666666666664e-01*G9_1_0 + 1.666666666666665e-01*G9_2_1 + 1.666666666666665e-01*G9_3_2 - 1.666666666666664e-01*G10_8_0 - 1.666666666666665e-01*G10_8_1 - 1.666666666666665e-01*G10_8_2 + 1.666666666666664e-01*G10_9_0 + 1.666666666666665e-01*G10_10_1 + 1.666666666666665e-01*G10_11_2 - 8.333333333333322e-02*G64_6_0_0 - 8.333333333333323e-02*G64_6_0_1 - 8.333333333333322e-02*G64_6_0_2 + 8.333333333333322e-02*G64_6_1_0 + 8.333333333333323e-02*G64_6_2_1 + 8.333333333333323e-02*G64_6_3_2 + 8.333333333333322e-02*G65_6_0_0 + 8.333333333333323e-02*G65_6_0_1 + 8.333333333333322e-02*G65_6_0_2 - 8.333333333333322e-02*G65_6_1_0 - 8.333333333333323e-02*G65_6_2_1 - 8.333333333333323e-02*G65_6_3_2 - 8.333333333333322e-02*G66_7_0_0 - 8.333333333333323e-02*G66_7_0_1 - 8.333333333333322e-02*G66_7_0_2 + 8.333333333333322e-02*G66_7_1_0 + 8.333333333333323e-02*G66_7_2_1 + 8.333333333333323e-02*G66_7_3_2 + 8.333333333333322e-02*G67_7_4_0 + 8.333333333333323e-02*G67_7_4_1 + 8.333333333333323e-02*G67_7_4_2 - 8.333333333333322e-02*G67_7_5_0 - 8.333333333333323e-02*G67_7_6_1 - 8.333333333333323e-02*G67_7_7_2 - 8.333333333333322e-02*G68_8_0_0 - 8.333333333333323e-02*G68_8_0_1 - 8.333333333333322e-02*G68_8_0_2 + 8.333333333333322e-02*G68_8_1_0 + 8.333333333333323e-02*G68_8_2_1 + 8.333333333333323e-02*G68_8_3_2 + 8.333333333333322e-02*G69_8_8_0 + 8.333333333333323e-02*G69_8_8_1 + 8.333333333333323e-02*G69_8_8_2 - 8.333333333333322e-02*G69_8_9_0 - 8.333333333333323e-02*G69_8_10_1 - 8.333333333333323e-02*G69_8_11_2 + 8.333333333333322e-02*G70_0_0_0 + 8.333333333333323e-02*G70_0_0_1 + 8.333333333333322e-02*G70_0_0_2 - 8.333333333333322e-02*G70_0_1_0 - 8.333333333333323e-02*G70_0_2_1 - 8.333333333333323e-02*G70_0_3_2 - 8.333333333333322e-02*G71_0_8_0 - 8.333333333333323e-02*G71_0_8_1 - 8.333333333333323e-02*G71_0_8_2 + 8.333333333333322e-02*G71_0_9_0 + 8.333333333333323e-02*G71_0_10_1 + 8.333333333333323e-02*G71_0_11_2 + 8.333333333333322e-02*G72_3_4_0 + 8.333333333333323e-02*G72_3_4_1 + 8.333333333333323e-02*G72_3_4_2 - 8.333333333333322e-02*G72_3_5_0 - 8.333333333333323e-02*G72_3_6_1 - 8.333333333333323e-02*G72_3_7_2 - 8.333333333333322e-02*G73_3_8_0 - 8.333333333333323e-02*G73_3_8_1 - 8.333333333333323e-02*G73_3_8_2 + 8.333333333333322e-02*G73_3_9_0 + 8.333333333333323e-02*G73_3_10_1 + 8.333333333333323e-02*G73_3_11_2 + 8.333333333333322e-02*G74_6_8_0 + 8.333333333333323e-02*G74_6_8_1 + 8.333333333333323e-02*G74_6_8_2 - 8.333333333333322e-02*G74_6_9_0 - 8.333333333333323e-02*G74_6_10_1 - 8.333333333333323e-02*G74_6_11_2 - 8.333333333333322e-02*G75_6_8_0 - 8.333333333333323e-02*G75_6_8_1 - 8.333333333333323e-02*G75_6_8_2 + 8.333333333333322e-02*G75_6_9_0 + 8.333333333333323e-02*G75_6_10_1 + 8.333333333333323e-02*G75_6_11_2;
    block[7] = -1.666666666666664e-01*G23_4_0 - 1.666666666666665e-01*G23_4_1 - 1.666666666666665e-01*G23_4_2 + 1.666666666666664e-01*G23_5_0 + 1.666666666666665e-01*G23_6_1 + 1.666666666666665e-01*G23_7_2 - 1.666666666666664e-01*G24_8_0 - 1.666666666666665e-01*G24_8_1 - 1.666666666666665e-01*G24_8_2 + 1.666666666666664e-01*G24_9_0 + 1.666666666666665e-01*G24_10_1 + 1.666666666666665e-01*G24_11_2 - 8.333333333333322e-02*G98_6_4_0 - 8.333333333333323e-02*G98_6_4_1 - 8.333333333333323e-02*G98_6_4_2 + 8.333333333333322e-02*G98_6_5_0 + 8.333333333333323e-02*G98_6_6_1 + 8.333333333333323e-02*G98_6_7_2 + 8.333333333333322e-02*G99_6_0_0 + 8.333333333333323e-02*G99_6_0_1 + 8.333333333333322e-02*G99_6_0_2 - 8.333333333333322e-02*G99_6_1_0 - 8.333333333333323e-02*G99_6_2_1 - 8.333333333333323e-02*G99_6_3_2 - 8.333333333333322e-02*G100_7_4_0 - 8.333333333333323e-02*G100_7_4_1 - 8.333333333333323e-02*G100_7_4_2 + 8.333333333333322e-02*G100_7_5_0 + 8.333333333333323e-02*G100_7_6_1 + 8.333333333333323e-02*G100_7_7_2 + 8.333333333333322e-02*G101_7_4_0 + 8.333333333333323e-02*G101_7_4_1 + 8.333333333333323e-02*G101_7_4_2 - 8.333333333333322e-02*G101_7_5_0 - 8.333333333333323e-02*G101_7_6_1 - 8.333333333333323e-02*G101_7_7_2 - 8.333333333333322e-02*G102_8_4_0 - 8.333333333333323e-02*G102_8_4_1 - 8.333333333333323e-02*G102_8_4_2 + 8.333333333333322e-02*G102_8_5_0 + 8.333333333333323e-02*G102_8_6_1 + 8.333333333333323e-02*G102_8_7_2 + 8.333333333333322e-02*G103_8_8_0 + 8.333333333333323e-02*G103_8_8_1 + 8.333333333333323e-02*G103_8_8_2 - 8.333333333333322e-02*G103_8_9_0 - 8.333333333333323e-02*G103_8_10_1 - 8.333333333333323e-02*G103_8_11_2 + 8.333333333333322e-02*G104_1_0_0 + 8.333333333333323e-02*G104_1_0_1 + 8.333333333333322e-02*G104_1_0_2 - 8.333333333333322e-02*G104_1_1_0 - 8.333333333333323e-02*G104_1_2_1 - 8.333333333333323e-02*G104_1_3_2 - 8.333333333333322e-02*G105_1_8_0 - 8.333333333333323e-02*G105_1_8_1 - 8.333333333333323e-02*G105_1_8_2 + 8.333333333333322e-02*G105_1_9_0 + 8.333333333333323e-02*G105_1_10_1 + 8.333333333333323e-02*G105_1_11_2 + 8.333333333333322e-02*G106_4_4_0 + 8.333333333333323e-02*G106_4_4_1 + 8.333333333333323e-02*G106_4_4_2 - 8.333333333333322e-02*G106_4_5_0 - 8.333333333333323e-02*G106_4_6_1 - 8.333333333333323e-02*G106_4_7_2 - 8.333333333333322e-02*G107_4_8_0 - 8.333333333333323e-02*G107_4_8_1 - 8.333333333333323e-02*G107_4_8_2 + 8.333333333333322e-02*G107_4_9_0 + 8.333333333333323e-02*G107_4_10_1 + 8.333333333333323e-02*G107_4_11_2 + 8.333333333333322e-02*G108_7_8_0 + 8.333333333333323e-02*G108_7_8_1 + 8.333333333333323e-02*G108_7_8_2 - 8.333333333333322e-02*G108_7_9_0 - 8.333333333333323e-02*G108_7_10_1 - 8.333333333333323e-02*G108_7_11_2 - 8.333333333333322e-02*G109_7_8_0 - 8.333333333333323e-02*G109_7_8_1 - 8.333333333333323e-02*G109_7_8_2 + 8.333333333333322e-02*G109_7_9_0 + 8.333333333333323e-02*G109_7_10_1 + 8.333333333333323e-02*G109_7_11_2;
    block[8] = -1.666666666666664e-01*G38_8_0 - 1.666666666666665e-01*G38_8_1 - 1.666666666666665e-01*G38_8_2 + 1.666666666666664e-01*G38_9_0 + 1.666666666666665e-01*G38_10_1 + 1.666666666666665e-01*G38_11_2 - 8.333333333333322e-02*G39_0_0 - 8.333333333333323e-02*G39_0_1 - 8.333333333333322e-02*G39_0_2 + 8.333333333333322e-02*G39_1_0 + 8.333333333333323e-02*G39_2_1 + 8.333333333333323e-02*G39_3_2 - 8.333333333333322e-02*G40_4_0 - 8.333333333333323e-02*G40_4_1 - 8.333333333333323e-02*G40_4_2 + 8.333333333333322e-02*G40_5_0 + 8.333333333333323e-02*G40_6_1 + 8.333333333333323e-02*G40_7_2 - 8.333333333333322e-02*G41_8_0 - 8.333333333333323e-02*G41_8_1 - 8.333333333333323e-02*G41_8_2 + 8.333333333333322e-02*G41_9_0 + 8.333333333333323e-02*G41_10_1 + 8.333333333333323e-02*G41_11_2 - 8.333333333333322e-02*G134_6_8_0 - 8.333333333333323e-02*G134_6_8_1 - 8.333333333333323e-02*G134_6_8_2 + 8.333333333333322e-02*G134_6_9_0 + 8.333333333333323e-02*G134_6_10_1 + 8.333333333333323e-02*G134_6_11_2 + 8.333333333333322e-02*G135_6_0_0 + 8.333333333333323e-02*G135_6_0_1 + 8.333333333333322e-02*G135_6_0_2 - 8.333333333333322e-02*G135_6_1_0 - 8.333333333333323e-02*G135_6_2_1 - 8.333333333333323e-02*G135_6_3_2 - 8.333333333333322e-02*G136_7_8_0 - 8.333333333333323e-02*G136_7_8_1 - 8.333333333333323e-02*G136_7_8_2 + 8.333333333333322e-02*G136_7_9_0 + 8.333333333333323e-02*G136_7_10_1 + 8.333333333333323e-02*G136_7_11_2 + 8.333333333333322e-02*G137_7_4_0 + 8.333333333333323e-02*G137_7_4_1 + 8.333333333333323e-02*G137_7_4_2 - 8.333333333333322e-02*G137_7_5_0 - 8.333333333333323e-02*G137_7_6_1 - 8.333333333333323e-02*G137_7_7_2 - 8.333333333333322e-02*G138_8_8_0 - 8.333333333333323e-02*G138_8_8_1 - 8.333333333333323e-02*G138_8_8_2 + 8.333333333333322e-02*G138_8_9_0 + 8.333333333333323e-02*G138_8_10_1 + 8.333333333333323e-02*G138_8_11_2 + 8.333333333333322e-02*G139_8_8_0 + 8.333333333333323e-02*G139_8_8_1 + 8.333333333333323e-02*G139_8_8_2 - 8.333333333333322e-02*G139_8_9_0 - 8.333333333333323e-02*G139_8_10_1 - 8.333333333333323e-02*G139_8_11_2 + 8.333333333333322e-02*G140_2_0_0 + 8.333333333333323e-02*G140_2_0_1 + 8.333333333333322e-02*G140_2_0_2 - 8.333333333333322e-02*G140_2_1_0 - 8.333333333333323e-02*G140_2_2_1 - 8.333333333333323e-02*G140_2_3_2 - 8.333333333333322e-02*G141_2_8_0 - 8.333333333333323e-02*G141_2_8_1 - 8.333333333333323e-02*G141_2_8_2 + 8.333333333333322e-02*G141_2_9_0 + 8.333333333333323e-02*G141_2_10_1 + 8.333333333333323e-02*G141_2_11_2 + 8.333333333333322e-02*G142_5_4_0 + 8.333333333333323e-02*G142_5_4_1 + 8.333333333333323e-02*G142_5_4_2 - 8.333333333333322e-02*G142_5_5_0 - 8.333333333333323e-02*G142_5_6_1 - 8.333333333333323e-02*G142_5_7_2 - 8.333333333333322e-02*G143_5_8_0 - 8.333333333333323e-02*G143_5_8_1 - 8.333333333333323e-02*G143_5_8_2 + 8.333333333333322e-02*G143_5_9_0 + 8.333333333333323e-02*G143_5_10_1 + 8.333333333333323e-02*G143_5_11_2;
  }

private:

  const real& c0;  const real& c1;  const real& c2;

};

} }

#endif
