import os, commands

# Get compiler from pkg-config
compiler = commands.getoutput('pkg-config --variable=compiler dolfin')

# Create a SCons Environment based on the main os environment
env = Environment(ENV=os.environ, CXX=compiler)

# Get compiler flags from pkg-config
env.ParseConfig('pkg-config --cflags --libs dolfin')

#Use user environment as base.
# env = Environment(ENV = os.environ);
#local_path = os.environ['LOCALPATH']
#
#env.Append(CCFLAGS = '-frounding-math') #necessary for CGAL 
#lib_path = local_path + os.sep + 'lib'
#include_path = local_path + os.sep + 'include'
#libs = Split('CGAL CGAL_Core')
#
#env.Append(LIBS = libs) 
#env.Append(LIBPATH = lib_path) 
#env.Append(CPPPATH = include_path)

#Program
env.Program(['check_eval_results.cpp'])
env.Program(['point_detection.cpp'])
env.Program(['mesh_intersection_detection.cpp'])
